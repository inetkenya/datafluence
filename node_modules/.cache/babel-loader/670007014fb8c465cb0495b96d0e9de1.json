{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/layouts/AdminLayout/Navigation/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { ConfigContext } from \"../../../contexts/ConfigContext\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\nimport NavContent from \"./NavContent\";\nimport navigation from \"../../../menu-items\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navigation = () => {\n  _s();\n\n  const configContext = useContext(ConfigContext);\n  const {\n    layout,\n    layoutType,\n    navFixedLayout,\n    collapseMenu,\n    rtlLayout,\n    boxLayout,\n    subLayout,\n    headerFixedLayout\n  } = configContext.state;\n  const windowSize = useWindowSize();\n\n  const scroll = () => {\n    if (navFixedLayout && headerFixedLayout === false) {\n      const main = document.querySelector('.pcoded-navbar');\n      const el = document.querySelector('.pcoded-navbar.menupos-fixed');\n      const scrollPosition = window.pageYOffset;\n\n      if (scrollPosition > 60) {\n        el.style.position = 'fixed';\n        el.style.transition = 'none';\n        el.style.marginTop = '0';\n      } else {\n        main.style.position = 'absolute';\n        main.style.marginTop = '56px';\n      }\n    } else {\n      document.querySelector('.pcoded-navbar').removeAttribute('style');\n    }\n  };\n\n  let navClass = ['pcoded-navbar', layoutType];\n\n  if (layout === 'horizontal') {\n    navClass = [...navClass, 'theme-horizontal'];\n  } else {\n    if (navFixedLayout) {\n      navClass = [...navClass, 'menupos-fixed'];\n    }\n\n    if (navFixedLayout && !headerFixedLayout) {\n      window.addEventListener('scroll', scroll, true);\n      window.scrollTo(0, 0);\n    } else {\n      window.removeEventListener('scroll', scroll, false);\n    }\n  }\n\n  if (windowSize.width < 992 && collapseMenu) {\n    navClass = [...navClass, 'mob-open'];\n  } else if (collapseMenu) {\n    navClass = [...navClass, 'navbar-collapsed'];\n  }\n\n  if (layoutType === 'dark') {\n    document.body.classList.add('gradient-able-dark');\n  } else {\n    document.body.classList.remove('gradient-able-dark');\n  }\n\n  if (rtlLayout) {\n    document.body.classList.add('gradient-able-rtl');\n  } else {\n    document.body.classList.remove('gradient-able-rtl');\n  }\n\n  if (boxLayout) {\n    document.body.classList.add('container');\n    document.body.classList.add('box-layout');\n  } else {\n    document.body.classList.remove('container');\n    document.body.classList.remove('box-layout');\n  }\n\n  let navBarClass = ['navbar-wrapper'];\n\n  if (layout === 'horizontal' && subLayout === 'horizontal-2') {\n    navBarClass = [...navBarClass, 'container'];\n  }\n\n  let navContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: navBarClass.join(' '),\n    children: /*#__PURE__*/_jsxDEV(NavContent, {\n      navigation: navigation.items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n\n  if (windowSize.width < 992) {\n    navContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(NavContent, {\n        navigation: navigation.items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: navClass.join(' '),\n      children: navContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navigation, \"wrgLmG28x/XFNtoCmH3lnqmmqC8=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/layouts/AdminLayout/Navigation/index.js"],"names":["React","useContext","ConfigContext","useWindowSize","NavContent","navigation","Navigation","configContext","layout","layoutType","navFixedLayout","collapseMenu","rtlLayout","boxLayout","subLayout","headerFixedLayout","state","windowSize","scroll","main","document","querySelector","el","scrollPosition","window","pageYOffset","style","position","transition","marginTop","removeAttribute","navClass","addEventListener","scrollTo","removeEventListener","width","body","classList","add","remove","navBarClass","navContent","join","items"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\n\r\nimport { ConfigContext } from \"../../../contexts/ConfigContext\";\r\nimport useWindowSize from \"../../../hooks/useWindowSize\";\r\n\r\nimport NavContent from \"./NavContent\";\r\nimport navigation from \"../../../menu-items\";\r\n\r\nconst Navigation = () => {\r\n    const configContext = useContext(ConfigContext);\r\n    const { layout, layoutType, navFixedLayout, collapseMenu, rtlLayout, boxLayout, subLayout, headerFixedLayout } = configContext.state;\r\n    const windowSize = useWindowSize();\r\n\r\n    const scroll = () => {\r\n        if (navFixedLayout && headerFixedLayout === false) {\r\n            const main = document.querySelector('.pcoded-navbar');\r\n            const el = document.querySelector('.pcoded-navbar.menupos-fixed');\r\n            const scrollPosition = window.pageYOffset;\r\n            if (scrollPosition > 60) {\r\n                el.style.position = 'fixed';\r\n                el.style.transition = 'none';\r\n                el.style.marginTop = '0';\r\n            } else {\r\n                main.style.position = 'absolute';\r\n                main.style.marginTop = '56px';\r\n            }\r\n        } else {\r\n            document.querySelector('.pcoded-navbar').removeAttribute('style');\r\n        }\r\n    };\r\n\r\n    let navClass = [\r\n        'pcoded-navbar',\r\n        layoutType\r\n    ];\r\n\r\n    if (layout === 'horizontal') {\r\n        navClass = [ ...navClass, 'theme-horizontal'];\r\n    } else {\r\n        if (navFixedLayout) {\r\n            navClass = [ ...navClass, 'menupos-fixed'];\r\n        }\r\n\r\n        if (navFixedLayout && !headerFixedLayout) {\r\n            window.addEventListener('scroll', scroll, true);\r\n            window.scrollTo(0, 0);\r\n        } else {\r\n            window.removeEventListener('scroll', scroll, false);\r\n        }\r\n    }\r\n\r\n    if (windowSize.width < 992 && collapseMenu) {\r\n        navClass = [...navClass, 'mob-open'];\r\n    } else if (collapseMenu) {\r\n        navClass = [...navClass, 'navbar-collapsed'];\r\n    }\r\n\r\n    if (layoutType === 'dark') {\r\n        document.body.classList.add('gradient-able-dark');\r\n    } else {\r\n        document.body.classList.remove('gradient-able-dark');\r\n    }\r\n\r\n    if (rtlLayout) {\r\n        document.body.classList.add('gradient-able-rtl');\r\n    } else {\r\n        document.body.classList.remove('gradient-able-rtl');\r\n    }\r\n\r\n    if (boxLayout) {\r\n        document.body.classList.add('container');\r\n        document.body.classList.add('box-layout');\r\n    } else {\r\n        document.body.classList.remove('container');\r\n        document.body.classList.remove('box-layout');\r\n    }\r\n\r\n    let navBarClass = ['navbar-wrapper'];\r\n    if (layout === 'horizontal' && subLayout === 'horizontal-2') {\r\n        navBarClass = [...navBarClass, 'container'];\r\n    }\r\n    let navContent = (\r\n        <div className={navBarClass.join(' ')}>\r\n            <NavContent navigation={navigation.items} />\r\n        </div>\r\n    );\r\n    if (windowSize.width < 992) {\r\n        navContent = (\r\n            <div className=\"navbar-wrapper\">\r\n                <NavContent navigation={navigation.items} />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <nav className={navClass.join(' ')}>\r\n                {navContent}\r\n            </nav>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}