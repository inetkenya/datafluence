{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/layouts/AdminLayout/Navigation/NavContent/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport NavGroup from \"./NavGroup\";\nimport { ConfigContext } from \"../../../../contexts/ConfigContext\";\nimport * as actionType from \"../../../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavContent = ({\n  navigation\n}) => {\n  _s();\n\n  const [scrollWidth, setScrollWidth] = useState(0);\n  const [prevDisable, setPrevDisable] = useState(true);\n  const [nextDisable, setNextDisable] = useState(false);\n  const configContext = useContext(ConfigContext);\n  const {\n    dispatch\n  } = configContext;\n  const {\n    layout,\n    rtlLayout\n  } = configContext.state;\n\n  const scrollPrevHandler = () => {\n    const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\n    let scrollWidthPrev = scrollWidth - wrapperWidth;\n\n    if (scrollWidthPrev < 0) {\n      setScrollWidth(0);\n      setPrevDisable(true);\n      setNextDisable(false);\n    } else {\n      setScrollWidth(scrollWidthPrev);\n      setPrevDisable(false);\n    }\n  };\n\n  const scrollNextHandler = () => {\n    const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\n    const contentWidth = document.getElementById('sidenav-horizontal').clientWidth;\n    let scrollWidthNext = scrollWidth + (wrapperWidth - 80);\n\n    if (scrollWidthNext > contentWidth - wrapperWidth) {\n      scrollWidthNext = contentWidth - wrapperWidth + 80;\n      setScrollWidth(scrollWidthNext);\n      setPrevDisable(false);\n      setNextDisable(true);\n    } else {\n      setScrollWidth(scrollWidthNext);\n      setPrevDisable(false);\n    }\n  };\n\n  const navItems = navigation.map(item => {\n    switch (item.type) {\n      case 'group':\n        return /*#__PURE__*/_jsxDEV(NavGroup, {\n          layout: layout,\n          group: item\n        }, 'nav-group-' + item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }, this);\n\n      default:\n        return false;\n    }\n  });\n  let scrollStyle = {\n    marginLeft: '-' + scrollWidth + 'px'\n  };\n\n  if (layout === 'horizontal' && rtlLayout) {\n    scrollStyle = {\n      marginRight: '-' + scrollWidth + 'px'\n    };\n  }\n\n  let mainContent = '';\n\n  if (layout === 'horizontal') {\n    let prevClass = ['sidenav-horizontal-prev'];\n\n    if (prevDisable) {\n      prevClass = [...prevClass, 'disabled'];\n    }\n\n    let nextClass = ['sidenav-horizontal-next'];\n\n    if (nextDisable) {\n      nextClass = [...nextClass, 'disabled'];\n    }\n\n    mainContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-content sidenav-horizontal\",\n      id: \"layout-sidenav\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: prevClass.join(' '),\n        onClick: scrollPrevHandler,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 90\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sidenav-wrapper\",\n        className: \"sidenav-horizontal-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          bsPrefix: \" \",\n          as: \"ul\",\n          id: \"sidenav-horizontal\",\n          className: \"nav pcoded-inner-navbar sidenav-inner\",\n          onMouseLeave: () => dispatch({\n            type: actionType.NAV_CONTENT_LEAVE\n          }),\n          style: scrollStyle,\n          children: navItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: nextClass.join(' '),\n        onClick: scrollNextHandler,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 90\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  } else {\n    mainContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-content next-scroll\",\n      children: /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          as: \"ul\",\n          bsPrefix: \" \",\n          className: \"nav pcoded-inner-navbar\",\n          id: \"nav-ps-next\",\n          children: navItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: mainContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavContent, \"TeyhCBU3K0jZyVSsmRcdHoT7AOQ=\");\n\n_c = NavContent;\nexport default NavContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavContent\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/layouts/AdminLayout/Navigation/NavContent/index.js"],"names":["React","useContext","useState","ListGroup","Link","PerfectScrollbar","NavGroup","ConfigContext","actionType","NavContent","navigation","scrollWidth","setScrollWidth","prevDisable","setPrevDisable","nextDisable","setNextDisable","configContext","dispatch","layout","rtlLayout","state","scrollPrevHandler","wrapperWidth","document","getElementById","clientWidth","scrollWidthPrev","scrollNextHandler","contentWidth","scrollWidthNext","navItems","map","item","type","id","scrollStyle","marginLeft","marginRight","mainContent","prevClass","nextClass","join","NAV_CONTENT_LEAVE"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport NavGroup from \"./NavGroup\";\r\nimport { ConfigContext } from \"../../../../contexts/ConfigContext\";\r\nimport * as actionType from \"../../../../store/actions\";\r\n\r\nconst NavContent = ({navigation}) => {\r\n    const [ scrollWidth, setScrollWidth ] = useState(0);\r\n    const [ prevDisable, setPrevDisable ] = useState(true);\r\n    const [ nextDisable, setNextDisable ] = useState(false);\r\n\r\n    const configContext = useContext(ConfigContext);\r\n    const { dispatch } = configContext;\r\n\r\n    const { layout, rtlLayout } = configContext.state;\r\n\r\n    const scrollPrevHandler = () => {\r\n        const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\r\n\r\n        let scrollWidthPrev = scrollWidth - wrapperWidth;\r\n        if(scrollWidthPrev < 0) {\r\n            setScrollWidth(0);\r\n            setPrevDisable(true);\r\n            setNextDisable(false);\r\n        } else {\r\n            setScrollWidth(scrollWidthPrev);\r\n            setPrevDisable(false);\r\n        }\r\n    };\r\n\r\n    const scrollNextHandler = () => {\r\n        const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\r\n        const contentWidth = document.getElementById('sidenav-horizontal').clientWidth;\r\n\r\n        let scrollWidthNext = scrollWidth + (wrapperWidth - 80);\r\n        if (scrollWidthNext > (contentWidth - wrapperWidth)) {\r\n            scrollWidthNext = contentWidth - wrapperWidth + 80;\r\n\r\n            setScrollWidth(scrollWidthNext);\r\n            setPrevDisable(false);\r\n            setNextDisable(true);\r\n        } else {\r\n            setScrollWidth(scrollWidthNext);\r\n            setPrevDisable(false);\r\n        }\r\n    };\r\n\r\n    const navItems = navigation.map(item => {\r\n            switch (item.type) {\r\n                case 'group':\r\n                    return <NavGroup layout={layout} key={'nav-group-'+item.id} group={item}/>;\r\n                default:\r\n                    return false;\r\n            }\r\n        }\r\n    );\r\n\r\n    let scrollStyle = {\r\n        marginLeft: '-' + scrollWidth + 'px'\r\n    };\r\n\r\n    if (layout === 'horizontal' && rtlLayout) {\r\n        scrollStyle = {\r\n            marginRight: '-' + scrollWidth + 'px'\r\n        };\r\n    }\r\n\r\n    let mainContent = '';\r\n    if (layout === 'horizontal') {\r\n        let prevClass = ['sidenav-horizontal-prev'];\r\n        if (prevDisable) {\r\n            prevClass = [...prevClass, 'disabled'];\r\n        }\r\n        let nextClass = ['sidenav-horizontal-next'];\r\n        if (nextDisable) {\r\n            nextClass = [...nextClass, 'disabled'];\r\n        }\r\n\r\n        mainContent = (\r\n            <div className=\"navbar-content sidenav-horizontal\" id=\"layout-sidenav\">\r\n                <Link to='#' className={prevClass.join(' ')} onClick={scrollPrevHandler}><span/></Link>\r\n                <div id=\"sidenav-wrapper\" className=\"sidenav-horizontal-wrapper\">\r\n                    <ListGroup variant='flush' bsPrefix=' ' as='ul' id=\"sidenav-horizontal\" className=\"nav pcoded-inner-navbar sidenav-inner\" onMouseLeave={() => dispatch({type: actionType.NAV_CONTENT_LEAVE})} style={scrollStyle}>\r\n                        {navItems}\r\n                    </ListGroup>\r\n                </div>\r\n                <Link to='#' className={nextClass.join(' ')} onClick={scrollNextHandler}><span/></Link>\r\n            </div>\r\n        );\r\n    } else {\r\n        mainContent = (\r\n            <div className=\"navbar-content next-scroll\">\r\n                <PerfectScrollbar>\r\n                    <ListGroup variant='flush' as='ul' bsPrefix=' ' className=\"nav pcoded-inner-navbar\" id='nav-ps-next'>\r\n                        {navItems}\r\n                    </ListGroup>\r\n                </PerfectScrollbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {mainContent}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NavContent;\r\n"]},"metadata":{},"sourceType":"module"}