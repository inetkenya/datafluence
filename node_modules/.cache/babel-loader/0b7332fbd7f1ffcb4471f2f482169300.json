{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/data/sisData.js\";\nimport namor from 'namor';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst images = require.context('../assets/images/user', true);\n\nconst range = len => {\n  const arr = [];\n\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\n\nconst randomDate = (start, end) => {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toDateString();\n};\n\nconst GetAvatar = name => {\n  const photo_new = 'avatar-' + Math.floor(Math.random() * 5 + 1) + '.jpg';\n  let photo = images(`./${photo_new}`);\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: photo.default,\n    className: \"img-fluid img-radius wid-40\",\n    alt: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n\n_c = GetAvatar;\nlet i = 1;\n\nconst newPerson = () => {\n  let nameEmail = namor.generate({\n    words: 2,\n    saltLength: 0,\n    saltType: 'number'\n  });\n  const name = (nameEmail.charAt(0).toUpperCase() + nameEmail.slice(1)).replaceAll('-', ' ');\n  const status = Math.floor(Math.random() * 4 + 1);\n  const description = namor.generate({\n    words: 4,\n    saltLength: 0,\n    saltType: 'number'\n  }).replaceAll('-', ' ');\n  const deadline = new Date();\n  deadline.setDate(new Date().getDate() + 365);\n  const subjects = ['Advanced Information Security', 'Advanced Mobile Application Development', 'Advanced RDBMS', 'Advanced Software Engineering', 'Big Data Analytics', 'Collaborative Content Management Systems', 'Information Security', 'Mobile Application Development', 'MVC based Web Development', 'MVC Frameworks', 'Open Source Web Application Development', 'Project', 'Search Engine Optimization', 'Web Analytics', 'Web Application Development using ASP.NET', 'Web Programming'];\n  const subject = subjects[Math.floor(Math.random() * 15 + 0)];\n  const assignments = ['Assignment', 'Confirmation Letter', 'Internal', 'Joining Letter', 'Journal', 'Open Book', 'Presentation - 1', 'Presentation - 2', 'Progress Report - 1', 'Progress Report - 2', 'Project Report', 'Quiz', 'Self Creation Parameter', 'Unit Test', 'Viva', 'Work Progress Analysis'];\n  const assignment = assignments[Math.floor(Math.random() * 15 + 0)];\n  const markIndex = Math.floor(Math.random() * 14 + 0);\n  const totalMarks = [4, 5, 6, 10, 20, 30, 40, 50, 60, 100, 140, 150, 165, 275, 285];\n  const passingMarks = [2, 3, 2, 4, 9, 13, 17, 21, 25, 35, 48, 60, 62, 115, 125];\n  const totalMark = totalMarks[markIndex];\n  const passingMark = passingMarks[markIndex];\n  const mark = Math.floor(Math.random() * totalMarks[markIndex] + 0);\n  return {\n    id: i++,\n    name: name,\n    avatar: GetAvatar(name),\n    description: description,\n    email: nameEmail + '@gmail.com',\n    phone: '+9' + Math.floor(Math.random() * 9 + 1) + ' ' + namor.generate({\n      words: 0,\n      saltLength: 3,\n      saltType: 'number'\n    }) + '-' + namor.generate({\n      words: 0,\n      saltLength: 6,\n      saltType: 'number'\n    }),\n    date: randomDate(new Date(2012, 0, 1), new Date()),\n    deadline: randomDate(new Date(), deadline),\n    subject: subject,\n    assignment: assignment,\n    totalMark: totalMark,\n    passingMark: passingMark,\n    mark: mark,\n    status: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [status === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-primary inline-block mr-1\",\n        children: \"Granted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 35\n      }, this), status === 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-warning inline-block mr-1\",\n        children: \"Cancelled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 35\n      }, this), status === 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-success inline-block mr-1\",\n        children: \"Failed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 35\n      }, this), status === 4 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-danger inline-block\",\n        children: \"Rejected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  };\n};\n\nexport default function makeData(...lens) {\n  const makeDataLevel = (depth = 0) => {\n    const len = lens[depth];\n    return range(len).map(d => {\n      return { ...newPerson(),\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined\n      };\n    });\n  };\n\n  return makeDataLevel();\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAvatar\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/data/sisData.js"],"names":["namor","React","images","require","context","range","len","arr","i","push","randomDate","start","end","Date","getTime","Math","random","toDateString","GetAvatar","name","photo_new","floor","photo","default","newPerson","nameEmail","generate","words","saltLength","saltType","charAt","toUpperCase","slice","replaceAll","status","description","deadline","setDate","getDate","subjects","subject","assignments","assignment","markIndex","totalMarks","passingMarks","totalMark","passingMark","mark","id","avatar","email","phone","date","makeData","lens","makeDataLevel","depth","map","d","subRows","undefined"],"mappings":"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","sourcesContent":["import namor from 'namor';\r\nimport React from \"react\";\r\n\r\nconst images = require.context('../assets/images/user', true);\r\n\r\nconst range = len => {\r\n    const arr = [];\r\n    for (let i = 0; i < len; i++) {\r\n        arr.push(i)\r\n    }\r\n    return arr\r\n};\r\n\r\nconst randomDate = (start, end) => {\r\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toDateString();\r\n};\r\n\r\nconst GetAvatar = (name) => {\r\n    const photo_new = 'avatar-' + Math.floor(Math.random() * 5 + 1) +'.jpg';\r\n    let photo = images(`./${photo_new}`);\r\n    return <img src={photo.default} className=\"img-fluid img-radius wid-40\" alt={name}/>;\r\n};\r\n\r\nlet i = 1;\r\n\r\nconst newPerson = () => {\r\n    let nameEmail = namor.generate({ words: 2, saltLength: 0, saltType: 'number' });\r\n    const name = (nameEmail.charAt(0).toUpperCase() + nameEmail.slice(1)).replaceAll('-', ' ');\r\n    const status = Math.floor(Math.random() * 4 + 1);\r\n    const description = (namor.generate({ words: 4, saltLength: 0, saltType: 'number' })).replaceAll('-', ' ');\r\n    const deadline = new Date();\r\n    deadline.setDate(new Date().getDate()+365);\r\n\r\n    const subjects = [\r\n        'Advanced Information Security',\r\n        'Advanced Mobile Application Development',\r\n        'Advanced RDBMS',\r\n        'Advanced Software Engineering',\r\n        'Big Data Analytics',\r\n        'Collaborative Content Management Systems',\r\n        'Information Security',\r\n        'Mobile Application Development',\r\n        'MVC based Web Development',\r\n        'MVC Frameworks',\r\n        'Open Source Web Application Development',\r\n        'Project',\r\n        'Search Engine Optimization',\r\n        'Web Analytics',\r\n        'Web Application Development using ASP.NET',\r\n        'Web Programming'\r\n    ];\r\n    const subject = subjects[Math.floor(Math.random() * 15 + 0)];\r\n\r\n    const assignments = [\r\n        'Assignment',\r\n        'Confirmation Letter',\r\n        'Internal',\r\n        'Joining Letter',\r\n        'Journal',\r\n        'Open Book',\r\n        'Presentation - 1',\r\n        'Presentation - 2',\r\n        'Progress Report - 1',\r\n        'Progress Report - 2',\r\n        'Project Report',\r\n        'Quiz',\r\n        'Self Creation Parameter',\r\n        'Unit Test',\r\n        'Viva',\r\n        'Work Progress Analysis',\r\n    ];\r\n    const assignment = assignments[Math.floor(Math.random() * 15 + 0)];\r\n\r\n    const markIndex = Math.floor(Math.random() * 14 + 0);\r\n    const totalMarks = [4, 5, 6, 10, 20, 30, 40, 50, 60, 100, 140, 150, 165, 275, 285];\r\n    const passingMarks = [2, 3, 2, 4, 9, 13, 17, 21, 25, 35, 48, 60, 62, 115, 125];\r\n    const totalMark = totalMarks[markIndex];\r\n    const passingMark = passingMarks[markIndex];\r\n\r\n    const mark = Math.floor(Math.random() * totalMarks[markIndex] + 0)\r\n\r\n    \r\n\r\n    return {\r\n        id: i++,\r\n        name: name,\r\n        avatar: GetAvatar(name),\r\n        description: description,\r\n        email: nameEmail + '@gmail.com',\r\n        phone: '+9' + Math.floor(Math.random() * 9 + 1) + ' ' + namor.generate({ words: 0, saltLength: 3, saltType: 'number' })+ '-' + namor.generate({ words: 0, saltLength: 6, saltType: 'number' }),\r\n        date: randomDate(new Date(2012, 0, 1), new Date()),\r\n        deadline: randomDate(new Date(), deadline),\r\n        subject: subject,\r\n        assignment: assignment,\r\n        totalMark: totalMark,\r\n        passingMark: passingMark,\r\n        mark: mark,\r\n        status:\r\n            <React.Fragment>\r\n                { status === 1 && <span className=\"badge badge-primary inline-block mr-1\">Granted</span> }\r\n                { status === 2 && <span className=\"badge badge-warning inline-block mr-1\">Cancelled</span>}\r\n                { status === 3 && <span className=\"badge badge-success inline-block mr-1\">Failed</span> }\r\n                { status === 4 && <span className=\"badge badge-danger inline-block\">Rejected</span> }\r\n            </React.Fragment>\r\n    }\r\n};\r\n\r\nexport default function makeData(...lens) {\r\n    const makeDataLevel = (depth = 0) => {\r\n        const len = lens[depth];\r\n        return range(len).map(d => {\r\n            return {\r\n                ...newPerson(),\r\n                subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\r\n            }\r\n        })\r\n    };\r\n\r\n    return makeDataLevel()\r\n}\r\n"]},"metadata":{},"sourceType":"module"}