{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/components/Widgets/Statistic/WeatherCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, Row, Col, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherCard = ({\n  params\n}) => {\n  _s();\n\n  const [temperature, setTemperature] = useState(params.temperature);\n  const [isFahrenheit, setIsFahrenheit] = useState(false);\n\n  const temperatureHandler = () => {\n    setIsFahrenheit(!isFahrenheit);\n\n    if (isFahrenheit) {\n      setTemperature(Math.round((temperature - 32) * 5 / 9));\n    } else {\n      setTemperature(Math.round(temperature * (9 / 5) + 32));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"mb-0 float-right\",\n        children: params.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-block mb-1\",\n        children: params.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-c-blue m-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"feather icon-cloud-snow text-muted mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 57\n            }, this), temperature, /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"f-20\",\n              children: \"\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 126\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"m-r-5 f-16 mb-0\",\n              children: \"\\xB0C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              as: \"input\",\n              variant: \"success\",\n              bsCustomPrefix: \"d-inline\",\n              checked: isFahrenheit,\n              type: \"switch\",\n              id: \"switch-a-1\",\n              label: \"\",\n              onChange: temperatureHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"m-l-5 f-16 mb-0\",\n              children: \"\\xB0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"d-block mt-0\",\n            children: params.caption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherCard, \"ir+nmE65DkXRq+ItDjCfDk+l7cE=\");\n\n_c = WeatherCard;\nexport default WeatherCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/components/Widgets/Statistic/WeatherCard.js"],"names":["React","useState","Card","Row","Col","Form","WeatherCard","params","temperature","setTemperature","isFahrenheit","setIsFahrenheit","temperatureHandler","Math","round","location","time","caption"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,iBAArC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAChC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAiCR,QAAQ,CAACM,MAAM,CAACC,WAAR,CAA/C;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMW,kBAAkB,GAAG,MAAM;AAC7BD,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;;AACA,QAAIA,YAAJ,EAAkB;AACdD,MAAAA,cAAc,CAACI,IAAI,CAACC,KAAL,CAAW,CAACN,WAAW,GAAG,EAAf,IAAqB,CAArB,GAAuB,CAAlC,CAAD,CAAd;AACH,KAFD,MAEO;AACHC,MAAAA,cAAc,CAACI,IAAI,CAACC,KAAL,CAAYN,WAAW,IAAI,IAAE,CAAN,CAAZ,GAAwB,EAAnC,CAAD,CAAd;AACH;AACJ,GAPD;;AASA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA,kBAAkCD,MAAM,CAACQ;AAAzC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,kBAAgCR,MAAM,CAACS;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,2CAAf;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,MAAR;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,oCAAgC;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAAhC,EAAyFR,WAAzF,eAAqG;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACI;AAAO,cAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEQ,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAC,OAAf;AAAuB,cAAA,OAAO,EAAC,SAA/B;AAAyC,cAAA,cAAc,EAAC,UAAxD;AAAmE,cAAA,OAAO,EAAEE,YAA5E;AAA0F,cAAA,IAAI,EAAC,QAA/F;AAAwG,cAAA,EAAE,EAAC,YAA3G;AAAyH,cAAA,KAAK,EAAC,EAA/H;AAAkI,cAAA,QAAQ,EAAEE;AAA5I;AAAA;AAAA;AAAA;AAAA,oBAFR,eAGI;AAAO,cAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAO,YAAA,SAAS,EAAC,cAAjB;AAAA,sBAAiCL,MAAM,CAACU;AAAxC;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAlCD;;GAAMX,W;;KAAAA,W;AAoCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Row, Col, Form } from 'react-bootstrap';\r\n\r\nconst WeatherCard = ({ params }) => {\r\n    const [temperature, setTemperature ] = useState(params.temperature);\r\n    const [isFahrenheit, setIsFahrenheit] = useState(false);\r\n\r\n    const temperatureHandler = () => {\r\n        setIsFahrenheit(!isFahrenheit);\r\n        if (isFahrenheit) {\r\n            setTemperature(Math.round((temperature - 32) * 5/9));\r\n        } else {\r\n            setTemperature(Math.round((temperature * (9/5)) + 32));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h6 className=\"mb-0 float-right\">{params.location}</h6>\r\n                <span className=\"d-block mb-1\">{params.time}</span>\r\n                <Row className=\"align-items-center justify-content-center\">\r\n                    <Col sm=\"auto\">\r\n                        <h2 className=\"text-c-blue m-0\"><i className=\"feather icon-cloud-snow text-muted mr-2\"/>{temperature}<sup className=\"f-20\">°</sup></h2>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                        <div className=\"form-group mb-1\">\r\n                            <label className=\"m-r-5 f-16 mb-0\">°C</label>\r\n                                <Form.Check as='input' variant='success' bsCustomPrefix='d-inline' checked={isFahrenheit} type=\"switch\" id=\"switch-a-1\"  label=\"\" onChange={temperatureHandler} />\r\n                            <label className=\"m-l-5 f-16 mb-0\">°F</label>\r\n                        </div>\r\n                        <small className=\"d-block mt-0\">{params.caption}</small>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default WeatherCard;\r\n"]},"metadata":{},"sourceType":"module"}