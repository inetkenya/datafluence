{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/extensions/FullEventCalendar.js\";\nimport React from \"react\";\nimport { Row, Col, Card } from 'react-bootstrap';\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interaction from \"@fullcalendar/interaction\";\nimport timeGrid from \"@fullcalendar/timegrid\";\nimport ModuleNotification from '../../components/Widgets/Statistic/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst randomDate = () => {\n  const date = new Date();\n  const start = new Date(date.getFullYear(), date.getMonth(), 1);\n  const end = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n};\n\nconst FullEventCalendar = () => {\n  const event = [{\n    title: \"All Day Event\",\n    start: randomDate(),\n    borderColor: \"#04a9f5\",\n    backgroundColor: \"#04a9f5\",\n    textColor: \"#fff\"\n  }, {\n    title: \"Long Event\",\n    start: randomDate(),\n    end: randomDate(),\n    borderColor: \"#f44236\",\n    backgroundColor: \"#f44236\",\n    textColor: \"#fff\"\n  }, {\n    id: 999,\n    title: \"Repeating Event\",\n    start: randomDate(),\n    borderColor: \"#f4c22b\",\n    backgroundColor: \"#f4c22b\",\n    textColor: \"#fff\"\n  }, {\n    id: 999,\n    title: \"Repeating Event\",\n    start: randomDate(),\n    borderColor: \"#3ebfea\",\n    backgroundColor: \"#3ebfea\",\n    textColor: \"#fff\"\n  }, {\n    title: \"Conference\",\n    start: randomDate(),\n    end: randomDate(),\n    borderColor: \"#1de9b6\",\n    backgroundColor: \"#1de9b6\",\n    textColor: \"#fff\"\n  }, {\n    title: \"Meeting\",\n    start: randomDate(),\n    end: randomDate()\n  }, {\n    title: \"Lunch\",\n    start: randomDate(),\n    borderColor: \"#f44236\",\n    backgroundColor: \"#f44236\",\n    textColor: \"#fff\"\n  }, {\n    title: \"Happy Hour\",\n    start: randomDate(),\n    borderColor: \"#a389d4\",\n    backgroundColor: \"#a389d4\",\n    textColor: \"#fff\"\n  }, {\n    title: \"Birthday Party\",\n    start: randomDate()\n  }, {\n    title: \"Click for Google\",\n    url: \"http://google.com/\",\n    start: randomDate(),\n    borderColor: \"#a389d4\",\n    backgroundColor: \"#a389d4\",\n    textColor: \"#fff\"\n  }];\n  const head = {\n    left: \"prev,next today\",\n    center: \"title\",\n    right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(ModuleNotification, {\n          message: \"For more info please check the components's official documentation\",\n          link: \"https://fullcalendar.io/docs/react\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Full Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"calendar\",\n            children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n              defaultView: \"dayGridMonth\",\n              header: head,\n              editable: true,\n              defaultDate: randomDate(),\n              droppable: true,\n              events: event,\n              plugins: [dayGridPlugin, interaction, timeGrid]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FullEventCalendar;\nexport default FullEventCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"FullEventCalendar\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/extensions/FullEventCalendar.js"],"names":["React","Row","Col","Card","FullCalendar","dayGridPlugin","interaction","timeGrid","ModuleNotification","randomDate","date","Date","start","getFullYear","getMonth","end","getTime","Math","random","FullEventCalendar","event","title","borderColor","backgroundColor","textColor","id","url","head","left","center","right"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interaction from \"@fullcalendar/interaction\";\r\nimport timeGrid from \"@fullcalendar/timegrid\";\r\n\r\nimport ModuleNotification from '../../components/Widgets/Statistic/Notification';\r\n\r\nconst randomDate = () => {\r\n    const date = new Date();\r\n    const start = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const end = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r\n};\r\n\r\nconst FullEventCalendar = () => {\r\n    const event = [\r\n        {\r\n            title: \"All Day Event\",\r\n            start: randomDate(),\r\n            borderColor: \"#04a9f5\",\r\n            backgroundColor: \"#04a9f5\",\r\n            textColor: \"#fff\"\r\n        },\r\n        {\r\n            title: \"Long Event\",\r\n            start: randomDate(),\r\n            end: randomDate(),\r\n            borderColor: \"#f44236\",\r\n            backgroundColor: \"#f44236\",\r\n            textColor: \"#fff\"\r\n        },\r\n        {\r\n            id: 999,\r\n            title: \"Repeating Event\",\r\n            start: randomDate(),\r\n            borderColor: \"#f4c22b\",\r\n            backgroundColor: \"#f4c22b\",\r\n            textColor: \"#fff\"\r\n        },\r\n        {\r\n            id: 999,\r\n            title: \"Repeating Event\",\r\n            start: randomDate(),\r\n            borderColor: \"#3ebfea\",\r\n            backgroundColor: \"#3ebfea\",\r\n            textColor: \"#fff\"\r\n        },\r\n        {\r\n            title: \"Conference\",\r\n            start: randomDate(),\r\n            end: randomDate(),\r\n            borderColor: \"#1de9b6\",\r\n            backgroundColor: \"#1de9b6\",\r\n            textColor: \"#fff\"\r\n        },\r\n        {\r\n            title: \"Meeting\",\r\n            start: randomDate(),\r\n            end: randomDate()\r\n        },\r\n        {\r\n            title: \"Lunch\",\r\n            start: randomDate(),\r\n            borderColor: \"#f44236\",\r\n            backgroundColor: \"#f44236\",\r\n            textColor: \"#fff\"\r\n        },\r\n        {\r\n            title: \"Happy Hour\",\r\n            start: randomDate(),\r\n            borderColor: \"#a389d4\",\r\n            backgroundColor: \"#a389d4\",\r\n            textColor: \"#fff\"\r\n        },\r\n        {\r\n            title: \"Birthday Party\",\r\n            start: randomDate()\r\n        },\r\n        {\r\n            title: \"Click for Google\",\r\n            url: \"http://google.com/\",\r\n            start: randomDate(),\r\n            borderColor: \"#a389d4\",\r\n            backgroundColor: \"#a389d4\",\r\n            textColor: \"#fff\"\r\n        }\r\n    ];\r\n    const head = {\r\n        left: \"prev,next today\",\r\n        center: \"title\",\r\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\"\r\n    };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://fullcalendar.io/docs/react' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as='h5'>Full Calendar</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body className='calendar'>\r\n                            <FullCalendar\r\n                                defaultView=\"dayGridMonth\"\r\n                                header={head}\r\n                                editable={true}\r\n                                defaultDate= { randomDate() }\r\n                                droppable={true}\r\n                                events={event}\r\n                                plugins={[dayGridPlugin, interaction, timeGrid]}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default FullEventCalendar;"]},"metadata":{},"sourceType":"module"}