{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/forms/form-validation/SyncValidationForm.js\";\nimport React from 'react';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.username) {\n    errors.username = 'Required';\n  } else if (values.username.length > 15) {\n    errors.username = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.age) {\n    errors.age = 'Required';\n  } else if (isNaN(Number(values.age))) {\n    errors.age = 'Must be a number';\n  } else if (Number(values.age) < 18) {\n    errors.age = 'Sorry, you must be at least 18 years old';\n  }\n\n  return errors;\n};\n\nconst warn = values => {\n  const warnings = {};\n\n  if (values.age < 19) {\n    warnings.age = 'Hmm, you seem a bit young...';\n  }\n\n  return warnings;\n};\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => /*#__PURE__*/_jsxDEV(Row, {\n  className: \"my-3\",\n  children: [/*#__PURE__*/_jsxDEV(Col, {\n    sm: 3,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label-control\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Col, {\n    sm: 9,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      placeholder: label,\n      type: type,\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), touched && (error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-c-red\",\n      children: [\"* \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 24\n    }, this) || warning && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-c-yellow\",\n      children: warning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this);\n\nconst SyncValidationForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(Card.Title, {\n        as: \"h5\",\n        children: \"Synchronous Validation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"username\",\n          type: \"text\",\n          component: renderField,\n          label: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-control\",\n          name: \"email\",\n          type: \"email\",\n          component: renderField,\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-control\",\n          name: \"age\",\n          type: \"number\",\n          component: renderField,\n          label: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        className: \"float-right\",\n        type: \"button\",\n        disabled: pristine || submitting,\n        onClick: reset,\n        children: \"Clear Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: submitting,\n        className: \"mr-1 float-right\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n};\n\n_c = SyncValidationForm;\nexport default reduxForm({\n  form: 'syncValidation',\n  // a unique identifier for this form\n  validate,\n  // <--- validation function given to redux-form\n  warn // <--- warning function given to redux-form\n\n})(SyncValidationForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"SyncValidationForm\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/forms/form-validation/SyncValidationForm.js"],"names":["React","Card","Button","Row","Col","Field","reduxForm","validate","values","errors","username","length","email","test","age","isNaN","Number","warn","warnings","renderField","input","label","type","meta","touched","error","warning","SyncValidationForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, Button, Row, Col } from 'react-bootstrap';\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  if (!values.username) {\r\n    errors.username = 'Required'\r\n  } else if (values.username.length > 15) {\r\n    errors.username = 'Must be 15 characters or less'\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Required'\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  if (!values.age) {\r\n    errors.age = 'Required'\r\n  } else if (isNaN(Number(values.age))) {\r\n    errors.age = 'Must be a number'\r\n  } else if (Number(values.age) < 18) {\r\n    errors.age = 'Sorry, you must be at least 18 years old'\r\n  }\r\n  return errors\r\n}\r\n\r\nconst warn = values => {\r\n  const warnings = {}\r\n  if (values.age < 19) {\r\n    warnings.age = 'Hmm, you seem a bit young...'\r\n  }\r\n  return warnings\r\n}\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { touched, error, warning }\r\n}) => (\r\n  <Row className='my-3'>\r\n        <Col sm={3}>\r\n            <label className='label-control'>{label}</label>\r\n        </Col>\r\n        <Col sm={9}>\r\n        <input {...input} placeholder={label} type={type} className='form-control' />\r\n        {touched &&\r\n            ((error && <span className='text-c-red'>* {error} </span>) ||\r\n            (warning && <span className='text-c-yellow'>{warning}</span>))}\r\n        </Col>\r\n  </Row>\r\n)\r\n\r\nconst SyncValidationForm = props => {\r\n  const { handleSubmit, pristine, reset, submitting } = props\r\n  return (\r\n      <Card>\r\n          <Card.Header>\r\n              <Card.Title as='h5'>Synchronous Validation</Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <form onSubmit={handleSubmit}>\r\n                <Field\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    component={renderField}\r\n                    label=\"Username\"\r\n                />\r\n                <Field className='form-control' name=\"email\" type=\"email\" component={renderField} label=\"Email\" />\r\n                <Field className='form-control' name=\"age\" type=\"number\" component={renderField} label=\"Age\" />\r\n                </form>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n                <Button variant='danger' className='float-right' type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</Button>\r\n                <Button type=\"submit\" disabled={submitting} className='mr-1 float-right'>Submit</Button>\r\n          </Card.Footer>\r\n      </Card>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'syncValidation', // a unique identifier for this form\r\n  validate, // <--- validation function given to redux-form\r\n  warn // <--- warning function given to redux-form\r\n})(SyncValidationForm)"]},"metadata":{},"sourceType":"module"}