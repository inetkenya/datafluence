{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/charts/re-chart/chart/PieDonutChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { PieChart, Pie, Cell, Tooltip, Sector, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Data 1',\n  value: 55\n}, {\n  name: 'Data 2',\n  value: 10\n}, {\n  name: 'Data 3',\n  value: 15\n}, {\n  name: 'Data 4',\n  value: 20\n}];\nconst COLORS = ['#2ed8b6', '#73b4ff', '#ffcb80', '#ff869a'];\n\nconst renderActiveShape = props => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n      x: cx,\n      y: cy,\n      dy: 8,\n      textAnchor: \"middle\",\n      fill: \"#000\",\n      style: {\n        fontSize: '16px',\n        fontWeight: 600\n      },\n      children: [payload.name, /*#__PURE__*/_jsxDEV(\"tspan\", {\n        children: [\" val: \", payload.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 130\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sector, {\n      cx: cx,\n      cy: cy,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle,\n      fill: fill\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sector, {\n      cx: cx,\n      cy: cy,\n      startAngle: startAngle,\n      endAngle: endAngle,\n      innerRadius: outerRadius + 6,\n      outerRadius: outerRadius + 10,\n      fill: fill\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: `M${sx},${sy}L${mx},${my}L${ex},${ey}`,\n      stroke: fill,\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: ex,\n      cy: ey,\n      r: 2,\n      fill: fill,\n      stroke: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: ex + (cos >= 0 ? 1 : -1) * 12,\n      y: ey,\n      textAnchor: textAnchor,\n      fill: \"#333\",\n      children: `PV ${value}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: ex + (cos >= 0 ? 1 : -1) * 12,\n      y: ey,\n      dy: 18,\n      textAnchor: textAnchor,\n      fill: \"#999\",\n      children: `(Rate ${(percent * 100).toFixed(2)}%)`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\nconst PieDonutChart = () => {\n  _s();\n\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const onPieEnter = (data, index) => {\n    setActiveIndex(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: data,\n          activeIndex: activeIndex,\n          activeShape: renderActiveShape,\n          cx: \"auto\",\n          cy: \"auto\",\n          innerRadius: 80,\n          outerRadius: 120,\n          fill: \"#8884d8\",\n          paddingAngle: 2,\n          dataKey: \"value\",\n          onMouseEnter: onPieEnter,\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 56\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PieDonutChart, \"rd+5N/MkYjuYD0I+B+MlySxQysU=\");\n\n_c = PieDonutChart;\nexport default PieDonutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieDonutChart\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/charts/re-chart/chart/PieDonutChart.js"],"names":["React","useState","PieChart","Pie","Cell","Tooltip","Sector","ResponsiveContainer","data","name","value","COLORS","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","fontSize","fontWeight","toFixed","PieDonutChart","activeIndex","setActiveIndex","onPieEnter","index","map","entry","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { PieChart, Pie, Cell, Tooltip, Sector, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n    { name: 'Data 1', value: 55 },\r\n    { name: 'Data 2', value: 10 },\r\n    { name: 'Data 3', value: 15 },\r\n    { name: 'Data 4', value: 20 },\r\n];\r\n\r\nconst COLORS = ['#2ed8b6', '#73b4ff', '#ffcb80', '#ff869a'];\r\n\r\nconst renderActiveShape = (props) => {\r\n    const RADIAN = Math.PI / 180;\r\n    const {\r\n        cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n        fill, payload, percent, value,\r\n    } = props;\r\n    const sin = Math.sin(-RADIAN * midAngle);\r\n    const cos = Math.cos(-RADIAN * midAngle);\r\n    const sx = cx + (outerRadius + 10) * cos;\r\n    const sy = cy + (outerRadius + 10) * sin;\r\n    const mx = cx + (outerRadius + 30) * cos;\r\n    const my = cy + (outerRadius + 30) * sin;\r\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n    const ey = my;\r\n    const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n    return (\r\n        <g>\r\n            <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill=\"#000\" style={{fontSize: '16px', fontWeight: 600}}>{payload.name}<tspan> val: {payload.value}</tspan></text>\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                innerRadius={innerRadius}\r\n                outerRadius={outerRadius}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                fill={fill}\r\n            />\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                innerRadius={outerRadius + 6}\r\n                outerRadius={outerRadius + 10}\r\n                fill={fill}\r\n            />\r\n            <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\r\n            <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${value}`}</text>\r\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\r\n                {`(Rate ${(percent * 100).toFixed(2)}%)`}\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\n\r\nconst PieDonutChart = () => {\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n\r\n    const onPieEnter = (data, index) => {\r\n        setActiveIndex(index)\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n                <PieChart>\r\n                    <Pie\r\n                        data={data}\r\n                        activeIndex={activeIndex}\r\n                        activeShape={renderActiveShape}\r\n                        cx=\"auto\"\r\n                        cy=\"auto\"\r\n                        innerRadius={80}\r\n                        outerRadius={120}\r\n                        fill=\"#8884d8\"\r\n                        paddingAngle={2}\r\n                        dataKey=\"value\"\r\n                        onMouseEnter={onPieEnter}\r\n                    >\r\n                        <Tooltip/>\r\n                        {\r\n                            data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                        }\r\n                    </Pie>\r\n                </PieChart>\r\n            </ResponsiveContainer>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PieDonutChart;"]},"metadata":{},"sourceType":"module"}