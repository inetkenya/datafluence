{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/auth/signin/FirebaseLogin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Row, Col, Button, Alert } from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport useAuth from '../../../hooks/useAuth';\nimport useScriptRef from '../../../hooks/useScriptRef';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FirebaseLogin = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const scriptedRef = useScriptRef();\n  const {\n    firebaseEmailPasswordSignIn,\n    firebaseGoogleSignIn\n  } = useAuth();\n\n  const googleHandler = async () => {\n    try {\n      await firebaseGoogleSignIn();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: 'demo@gmail.com',\n        password: '123456',\n        submit: null\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().max(255).required('Password is required')\n      }),\n      onSubmit: async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          await firebaseEmailPasswordSignIn(values.email, values.password);\n\n          if (scriptedRef.current) {\n            setStatus({\n              success: true\n            });\n            setSubmitting(true);\n          }\n        } catch (err) {\n          console.error(err);\n\n          if (scriptedRef.current) {\n            setStatus({\n              success: false\n            });\n            setErrors({\n              submit: err.message\n            });\n            setSubmitting(false);\n          }\n        }\n      },\n      children: ({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        className: className,\n        ...rest,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            error: touched.email && errors.email,\n            label: \"Email Address / Username\",\n            name: \"email\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            type: \"email\",\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(\"small\", {\n            class: \"text-danger form-text\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            error: touched.password && errors.password,\n            label: \"Password\",\n            name: \"password\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            type: \"password\",\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(\"small\", {\n            class: \"text-danger form-text\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), errors.submit && /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-checkbox  text-left mb-4 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"custom-control-input\",\n            id: \"customCheck1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-control-label\",\n            htmlFor: \"customCheck1\",\n            children: \"Save credentials.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            mt: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-block\",\n              color: \"primary\",\n              disabled: isSubmitting,\n              size: \"large\",\n              type: \"submit\",\n              variant: \"primary\",\n              children: \"Signin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"my-3\",\n          children: \" OR \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: googleHandler,\n          variant: \"danger\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-lock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), \" Sign in with Google\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FirebaseLogin, \"h7AgID5DdV7gnSaDPyBQL2yyLZI=\", false, function () {\n  return [useScriptRef, useAuth];\n});\n\n_c = FirebaseLogin;\nexport default FirebaseLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseLogin\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/auth/signin/FirebaseLogin.js"],"names":["React","Row","Col","Button","Alert","Yup","Formik","useAuth","useScriptRef","FirebaseLogin","className","rest","scriptedRef","firebaseEmailPasswordSignIn","firebaseGoogleSignIn","googleHandler","err","console","error","email","password","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","current","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Button, Alert } from 'react-bootstrap';\r\n\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport useScriptRef from '../../../hooks/useScriptRef';\r\n\r\nconst FirebaseLogin = ({ className, ...rest }) => {\r\n  const scriptedRef = useScriptRef();\r\n\r\n  const { firebaseEmailPasswordSignIn, firebaseGoogleSignIn } = useAuth();\r\n\r\n  const googleHandler = async () => {\r\n    try {\r\n      await firebaseGoogleSignIn();\r\n    } catch(err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Formik\r\n        initialValues={{\r\n          email: 'demo@gmail.com',\r\n          password: '123456',\r\n          submit: null\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n          password: Yup.string().max(255).required('Password is required')\r\n        })}\r\n        onSubmit={async (values, {\r\n          setErrors,\r\n          setStatus,\r\n          setSubmitting\r\n        }) => {\r\n          try {\r\n            await firebaseEmailPasswordSignIn(values.email, values.password);\r\n\r\n            if (scriptedRef.current) {\r\n              setStatus({ success: true });\r\n              setSubmitting(true);\r\n            }\r\n          } catch (err) {\r\n            console.error(err);\r\n            if (scriptedRef.current) {\r\n              setStatus({ success: false });\r\n              setErrors({ submit: err.message });\r\n              setSubmitting(false);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          touched,\r\n          values\r\n        }) => (\r\n          <form\r\n            noValidate\r\n            onSubmit={handleSubmit}\r\n            className={className}\r\n            {...rest}\r\n          >\r\n\r\n            <div className=\"form-group mb-3\">\r\n              <input\r\n                className=\"form-control\"\r\n                error={touched.email && errors.email}\r\n                label=\"Email Address / Username\"\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                value={values.email}\r\n              />\r\n              {touched.email && errors.email && (                 \r\n                <small class=\"text-danger form-text\">{errors.email}</small>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group mb-4\">\r\n              <input\r\n                className=\"form-control\"\r\n                error={touched.password && errors.password}\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"password\"\r\n                value={values.password}\r\n              />\r\n              {touched.password && errors.password && (                 \r\n                <small class=\"text-danger form-text\">{errors.password}</small>\r\n              )}\r\n            </div>\r\n\r\n            {errors.submit && ( \r\n                <Col sm={12}>\r\n                    <Alert variant='danger'>{errors.submit}</Alert>\r\n                </Col>\r\n            )}           \r\n\r\n            <div className=\"custom-control custom-checkbox  text-left mb-4 mt-2\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\"/>\r\n                <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Save credentials.</label>\r\n            </div>\r\n            \r\n            <Row>\r\n              <Col mt={2}>\r\n                <Button\r\n                  className=\"btn-block\"\r\n                  color=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                >\r\n                  Signin\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n\r\n      <Row>\r\n        <Col sm={12}>\r\n          <h5 className='my-3'> OR </h5>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col sm={12}>\r\n          <Button onClick={googleHandler} variant=\"danger\">\r\n              <i className='fa fa-lock' /> Sign in with Google\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <hr/>\r\n\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FirebaseLogin;\r\n"]},"metadata":{},"sourceType":"module"}