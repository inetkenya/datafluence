{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/tables/react-table/Footers.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport BTable from 'react-bootstrap/Table';\nimport { useTable } from 'react-table';\nimport makeData from '../../../data/tableData';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Table({\n  columns,\n  data\n}) {\n  _s();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(BTable, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(group => /*#__PURE__*/_jsxDEV(\"tr\", { ...group.getHeaderGroupProps(),\n        children: group.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n      children: footerGroups.map(group => /*#__PURE__*/_jsxDEV(\"tr\", { ...group.getFooterGroupProps(),\n        children: group.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", { ...column.getFooterProps(),\n          children: column.render('Footer')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"QGh/bndtSmgAc0MMEXO2v0MMd9o=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nfunction App() {\n  _s3();\n\n  const columns = React.useMemo(() => {\n    var _s2 = $RefreshSig$();\n\n    return [{\n      Header: 'Name',\n      Footer: 'Name',\n      columns: [{\n        Header: 'First Name',\n        accessor: 'firstName',\n        Footer: 'First Name'\n      }, {\n        Header: 'Last Name',\n        accessor: 'lastName',\n        Footer: 'Last Name'\n      }]\n    }, {\n      Header: 'Info',\n      Footer: 'Info',\n      columns: [{\n        Header: 'Age',\n        accessor: 'age',\n        Footer: 'Age'\n      }, {\n        Header: 'Visits',\n        accessor: 'visits',\n        Footer: _s2(info => {\n          _s2();\n\n          // Only calculate total visits if rows change\n          const total = React.useMemo(() => info.rows.reduce((sum, row) => row.values.visits + sum, 0), [info.rows]);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Total: \", total]\n          }, void 0, true);\n        }, \"TUahRIVHrNmruf3w2Blr6WVpjUQ=\")\n      }, {\n        Header: 'Status',\n        accessor: 'status',\n        Footer: 'Status'\n      }, {\n        Header: 'Profile Progress',\n        accessor: 'progress',\n        Footer: 'Profile Progress'\n      }]\n    }];\n  }, []);\n  const data = React.useMemo(() => makeData(10), []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(ModuleNotification, {\n          message: \"For more info please check the components's official documentation\",\n          link: \"https://react-table.tanstack.com/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Table Footer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              columns: columns,\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 7\n  }, this);\n}\n\n_s3(App, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/tables/react-table/Footers.js"],"names":["React","Row","Col","Card","BTable","useTable","makeData","ModuleNotification","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","map","group","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","getFooterGroupProps","getFooterProps","App","useMemo","Header","Footer","accessor","info","total","reduce","sum","values","visits"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport BTable from 'react-bootstrap/Table';\r\nimport { useTable } from 'react-table'\r\n\r\nimport makeData from '../../../data/tableData';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\n\r\nfunction Table({ columns, data }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  })\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <BTable striped bordered hover responsive {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map(group => (\r\n          <tr {...group.getHeaderGroupProps()}>\r\n            {group.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row)\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              })}\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n      <tfoot>\r\n        {footerGroups.map(group => (\r\n          <tr {...group.getFooterGroupProps()}>\r\n            {group.headers.map(column => (\r\n              <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tfoot>\r\n    </BTable>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        Footer: 'Name',\r\n        columns: [\r\n          {\r\n            Header: 'First Name',\r\n            accessor: 'firstName',\r\n            Footer: 'First Name',\r\n          },\r\n          {\r\n            Header: 'Last Name',\r\n            accessor: 'lastName',\r\n            Footer: 'Last Name',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        Header: 'Info',\r\n        Footer: 'Info',\r\n        columns: [\r\n          {\r\n            Header: 'Age',\r\n            accessor: 'age',\r\n            Footer: 'Age',\r\n          },\r\n          {\r\n            Header: 'Visits',\r\n            accessor: 'visits',\r\n            Footer: info => {\r\n              // Only calculate total visits if rows change\r\n              const total = React.useMemo(\r\n                () =>\r\n                  info.rows.reduce((sum, row) => row.values.visits + sum, 0),\r\n                [info.rows]\r\n              )\r\n\r\n              return <>Total: {total}</>\r\n            },\r\n          },\r\n          {\r\n            Header: 'Status',\r\n            accessor: 'status',\r\n            Footer: 'Status',\r\n          },\r\n          {\r\n            Header: 'Profile Progress',\r\n            accessor: 'progress',\r\n            Footer: 'Profile Progress',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  const data = React.useMemo(() => makeData(10), [])\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <Row>\r\n            <Col sm={12}>  \r\n                <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://react-table.tanstack.com/' />\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Card.Title as=\"h5\">Table Footer</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Table columns={columns} data={data} />\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}