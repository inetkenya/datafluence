{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/applications/gallery/PhotoGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Gallery from \"react-photo-gallery\";\nimport { Modal, ModalGateway } from \"react-images\";\nimport { photos } from './gallery';\nimport LightBox from '../../../components/Gallery/LightBox';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhotoGrid = () => {\n  _s();\n\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const openLightbox = useCallback((event, {\n    photo,\n    index\n  }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(ModuleNotification, {\n          message: \"For more info please check the components's official documentation\",\n          link: \"https://www.npmjs.com/package/react-photo-gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Gallery, {\n              photos: photos,\n              onClick: openLightbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalGateway, {\n      children: viewerIsOpen ? /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: closeLightbox,\n        children: /*#__PURE__*/_jsxDEV(LightBox, {\n          currentImage: currentImage,\n          photos: photos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PhotoGrid, \"xBacIyr+alk+Y5Q9jdPnin88G/Q=\");\n\n_c = PhotoGrid;\nexport default PhotoGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoGrid\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/applications/gallery/PhotoGrid.js"],"names":["React","useState","useCallback","Row","Col","Card","Gallery","Modal","ModalGateway","photos","LightBox","ModuleNotification","PhotoGrid","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","event","photo","index","closeLightbox"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,cAApC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,kBAAP,MAA+B,oDAA/B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMgB,YAAY,GAAGf,WAAW,CAAC,CAACgB,KAAD,EAAQ;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAR,KAA6B;AAC1DN,IAAAA,eAAe,CAACM,KAAD,CAAf;AACAJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAH+B,EAG7B,EAH6B,CAAhC;;AAKA,QAAMK,aAAa,GAAG,MAAM;AACxBP,IAAAA,eAAe,CAAC,CAAD,CAAf;AACAE,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAHD;;AAKA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA,+BACI,QAAC,kBAAD;AAAoB,UAAA,OAAO,EAAC,oEAA5B;AAAiG,UAAA,IAAI,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAA,+BACI,QAAC,IAAD;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,mCACI,QAAC,OAAD;AAAS,cAAA,MAAM,EAAEP,MAAjB;AAAyB,cAAA,OAAO,EAAEQ;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eAeI,QAAC,YAAD;AAAA,gBACKF,YAAY,gBACT,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEM,aAAhB;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,YAAY,EAAER,YAAxB;AAAsC,UAAA,MAAM,EAAEJ;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADS,GAIT;AALR;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAvCD;;GAAMG,S;;KAAAA,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { Modal, ModalGateway } from \"react-images\";\r\nimport { photos } from './gallery';\r\nimport LightBox from '../../../components/Gallery/LightBox';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\n\r\nconst PhotoGrid = () => {\r\n    const [currentImage, setCurrentImage] = useState(0);\r\n    const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n    const openLightbox = useCallback((event, { photo, index }) => {\r\n        setCurrentImage(index);\r\n        setViewerIsOpen(true);\r\n    }, []);\r\n\r\n    const closeLightbox = () => {\r\n        setCurrentImage(0);\r\n        setViewerIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://www.npmjs.com/package/react-photo-gallery' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Gallery photos={photos} onClick={openLightbox} />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <ModalGateway>\r\n                {viewerIsOpen ? (\r\n                    <Modal onClose={closeLightbox}>\r\n                        <LightBox currentImage={currentImage} photos={photos} />\r\n                    </Modal>\r\n                ) : null}\r\n            </ModalGateway>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PhotoGrid;"]},"metadata":{},"sourceType":"module"}