{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/ui-elements/basic/BasicAlert.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\nimport Card from \"../../../components/Card/MainCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alertVariants = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\nconst BasicAlert = () => {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(alertVariants);\n  const basicAlert = alertVariants.map((variant, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n    variant: variant,\n    children: [\"A simple \", variant, \" alert\\u2014check it out!\"]\n  }, idx, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this));\n  const linkAlert = alertVariants.map((variant, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n    variant: variant,\n    children: [\"A simple \", variant, \" alert with\", ' ', /*#__PURE__*/_jsxDEV(Alert.Link, {\n      as: Link,\n      to: \"#\",\n      children: \"an example link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), \". Give it a click if you like.\"]\n  }, idx, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this));\n  const dismissingAlert = alertVariants.map((variant, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n    show: showAlert.findIndex(item => item === variant) > -1,\n    dismissible: true,\n    variant: variant,\n    onClick: () => setShowAlert(showAlert.filter(item => item !== variant)),\n    children: \"Holy guacamole! You should check in on some of those fields below.\"\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(ModuleNotification, {\n          message: \"For more info please check the components's official documentation\",\n          link: \"https://react-bootstrap.github.io/components/alerts/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Basic\",\n          children: basicAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Link Alert\",\n          children: linkAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Dismissing\",\n          children: dismissingAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Additional Content\",\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"success\",\n            children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n              as: \"h4\",\n              children: \"Well done!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-0\",\n              children: \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BasicAlert, \"hRhqEGUiDWPg+dMlNBl0Ll93aIM=\");\n\n_c = BasicAlert;\nexport default BasicAlert;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicAlert\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/ui-elements/basic/BasicAlert.js"],"names":["React","useState","Row","Col","Alert","Link","ModuleNotification","Card","alertVariants","BasicAlert","showAlert","setShowAlert","basicAlert","map","variant","idx","linkAlert","dismissingAlert","findIndex","item","filter"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\n\r\nimport Card from \"../../../components/Card/MainCard\";\r\n\r\nconst alertVariants = [\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'warning',\r\n    'info',\r\n    'light',\r\n    'dark',\r\n];\r\n\r\nconst BasicAlert = () => {\r\n    const [showAlert, setShowAlert] = useState(alertVariants);\r\n\r\n    const basicAlert = alertVariants.map((variant, idx) => (\r\n            <Alert key={idx} variant={variant}>\r\n                A simple {variant} alert—check it out!\r\n            </Alert>\r\n        ));\r\n\r\n    const linkAlert = alertVariants.map((variant, idx) => (\r\n        <Alert key={idx} variant={variant}>\r\n            A simple {variant} alert with{' '}\r\n            <Alert.Link as={Link} to='#'>an example link</Alert.Link>. Give it a click if you\r\n            like.\r\n        </Alert>\r\n    ));\r\n\r\n    const dismissingAlert = alertVariants.map((variant, idx) => (\r\n        <Alert \r\n            show={(showAlert.findIndex(item => item === variant) > -1)} \r\n            dismissible key={idx} variant={variant} \r\n            onClick={() => setShowAlert(showAlert.filter(item => item !== variant))}\r\n        >\r\n            Holy guacamole! You should check in on some of those fields below.\r\n        </Alert>\r\n    ));\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://react-bootstrap.github.io/components/alerts/' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card title=\"Basic\">\r\n                        {basicAlert}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card title=\"Link Alert\">\r\n                        {linkAlert}\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card title=\"Dismissing\">\r\n                        {dismissingAlert}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card title=\"Additional Content\">\r\n                        <Alert variant=\"success\">\r\n                            <Alert.Heading as=\"h4\">Well done!</Alert.Heading>\r\n                            <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\r\n                            <hr />\r\n                            <p className=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\r\n                        </Alert>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default BasicAlert;"]},"metadata":{},"sourceType":"module"}