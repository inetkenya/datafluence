{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/tables/react-table/Pagination.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Row, Col, Card, Pagination } from 'react-bootstrap';\nimport BTable from 'react-bootstrap/Table';\nimport { useTable, usePagination, useGlobalFilter } from 'react-table';\nimport makeData from '../../../data/tableData';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\nimport { GlobalFilter } from './GlobalFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Table({\n  columns,\n  data\n}) {\n  _s();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    globalFilter,\n    setGlobalFilter,\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 2\n    }\n  }, useGlobalFilter, usePagination); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"d-flex align-items-center\",\n        children: [\"Show\", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control w-auto mx-2\",\n          value: pageSize,\n          onChange: e => {\n            setPageSize(Number(e.target.value));\n          },\n          children: [5, 10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pageSize,\n            children: pageSize\n          }, pageSize, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), \"entries\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(GlobalFilter, {\n          filter: globalFilter,\n          setFilter: setGlobalFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BTable, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-between mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"d-flex align-items-center\",\n          children: [\"Page\", ' ', \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", pageIndex + 1, \" of \", pageOptions.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 27\n          }, this), ' ', \"| Go to page:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control ml-2\",\n            defaultValue: pageIndex + 1,\n            onChange: e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\n              gotoPage(page);\n            },\n            style: {\n              width: '100px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          className: \"justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(Pagination.First, {\n            onClick: () => gotoPage(0),\n            disabled: !canPreviousPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Pagination.Prev, {\n            onClick: () => previousPage(),\n            disabled: !canPreviousPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n            onClick: () => nextPage(),\n            disabled: !canNextPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Pagination.Last, {\n            onClick: () => gotoPage(pageCount - 1),\n            disabled: !canNextPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Table, \"qblmpPQRcrljBIKsELIo54H879M=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nfunction App() {\n  _s2();\n\n  const columns = React.useMemo(() => [{\n    Header: 'Name',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }]\n  }, {\n    Header: 'Info',\n    columns: [{\n      Header: 'Age',\n      accessor: 'age'\n    }, {\n      Header: 'Visits',\n      accessor: 'visits'\n    }, {\n      Header: 'Status',\n      accessor: 'status'\n    }, {\n      Header: 'Profile Progress',\n      accessor: 'progress'\n    }]\n  }], []);\n  const data = React.useMemo(() => makeData(500), []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(ModuleNotification, {\n          message: \"For more info please check the components's official documentation\",\n          link: \"https://react-table.tanstack.com/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Pagination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              columns: columns,\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(App, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/tables/react-table/Pagination.js"],"names":["React","Row","Col","Card","Pagination","BTable","useTable","usePagination","useGlobalFilter","makeData","ModuleNotification","GlobalFilter","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","globalFilter","setGlobalFilter","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","e","Number","target","value","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","length","width","App","useMemo","Header","accessor"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card, Pagination } from 'react-bootstrap';\r\nimport BTable from 'react-bootstrap/Table';\r\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\r\n\r\nimport makeData from '../../../data/tableData';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\nimport { GlobalFilter } from './GlobalFilter';\r\n\r\nfunction Table({ columns, data }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    globalFilter,\r\n    setGlobalFilter,\r\n    \r\n    // The rest of these things are super handy, too ;)\r\n\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 2 },\r\n    },\r\n    useGlobalFilter,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n        <Row className='mb-3'>\r\n            <Col className=\"d-flex align-items-center\">\r\n                Show\r\n                <select\r\n                    className='form-control w-auto mx-2'\r\n                    value={pageSize}\r\n                    onChange={e => {\r\n                        setPageSize(Number(e.target.value))\r\n                    }}\r\n                >\r\n                    {[5, 10, 20, 30, 40, 50].map(pageSize => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                            {pageSize}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                entries\r\n            </Col>\r\n            <Col>\r\n                <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n            </Col>\r\n        </Row>\r\n      <BTable striped bordered hover responsive {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </BTable>\r\n      <Row className='justify-content-between mt-3'>\r\n        <Col sm={12} md={6}>\r\n            <span className=\"d-flex align-items-center\">\r\n                Page{' '} <strong> {pageIndex + 1} of {pageOptions.length} </strong>{' '}\r\n                | Go to page:{' '}\r\n                <input\r\n                    type=\"number\"\r\n                    className='form-control ml-2'\r\n                    defaultValue={pageIndex + 1}\r\n                    onChange={e => {\r\n                        const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                        gotoPage(page)\r\n                    }}\r\n                    style={{ width: '100px' }}\r\n                />\r\n            </span>\r\n        </Col>\r\n        <Col sm={12} md={6}>\r\n            <Pagination className='justify-content-end'>\r\n                <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage} />\r\n            </Pagination>\r\n        </Col>\r\n    </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        columns: [\r\n          {\r\n            Header: 'First Name',\r\n            accessor: 'firstName',\r\n          },\r\n          {\r\n            Header: 'Last Name',\r\n            accessor: 'lastName',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        Header: 'Info',\r\n        columns: [\r\n          {\r\n            Header: 'Age',\r\n            accessor: 'age',\r\n          },\r\n          {\r\n            Header: 'Visits',\r\n            accessor: 'visits',\r\n          },\r\n          {\r\n            Header: 'Status',\r\n            accessor: 'status',\r\n          },\r\n          {\r\n            Header: 'Profile Progress',\r\n            accessor: 'progress',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  const data = React.useMemo(() => makeData(500), [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <Row>\r\n              <Col sm={12}>  \r\n                  <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://react-table.tanstack.com/' />\r\n              </Col>\r\n          </Row>\r\n          <Row>\r\n              <Col>\r\n                  <Card>\r\n                      <Card.Header>\r\n                          <Card.Title as=\"h5\">Pagination</Card.Title>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                          <Table columns={columns} data={data} />\r\n                      </Card.Body>\r\n                  </Card>\r\n              </Col>\r\n          </Row>\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}