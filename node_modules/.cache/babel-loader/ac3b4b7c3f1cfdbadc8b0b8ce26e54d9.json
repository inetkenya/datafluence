{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/components/Gallery/GalleryMasonry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GalleryMasonry = props => {\n  _s();\n\n  const inputEl = useRef(null);\n  const [columns, setColumns] = useState(1);\n  useEffect(() => {\n    onResize();\n    window.addEventListener('resize', onResize);\n  });\n\n  const getColumns = w => {\n    return props.brakePoints.reduceRight((p, c, i) => {\n      return c < w ? p : i;\n    }, props.brakePoints.length) + 1;\n  };\n\n  const onResize = () => {\n    if (!!inputEl.current) {\n      const columnsNew = getColumns(inputEl.current.offsetWidth);\n\n      if (columns !== columnsNew) {\n        setColumns(columnsNew);\n      }\n    }\n  };\n\n  const mapChildren = () => {\n    let col = [];\n    const numC = columns;\n\n    for (let i = 0; i < numC; i++) {\n      col.push([]);\n    }\n\n    return props.children.reduce((p, c, i) => {\n      p[i % numC].push(c);\n      return p;\n    }, col);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"masonry\",\n      ref: inputEl,\n      children: mapChildren().map((col, ci) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: col.map((child, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: child\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 40\n            }, this);\n          })\n        }, ci, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GalleryMasonry, \"S2Mekvuch4qhPzqczNnsPsV1qJQ=\");\n\n_c = GalleryMasonry;\nexport default GalleryMasonry;\n\nvar _c;\n\n$RefreshReg$(_c, \"GalleryMasonry\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/components/Gallery/GalleryMasonry.js"],"names":["React","useEffect","useState","useRef","GalleryMasonry","props","inputEl","columns","setColumns","onResize","window","addEventListener","getColumns","w","brakePoints","reduceRight","p","c","i","length","current","columnsNew","offsetWidth","mapChildren","col","numC","push","children","reduce","map","ci","child"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA;;AAC5B,QAAMC,OAAO,GAAGH,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ;AACRC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,QAAlC;AACH,GAHQ,CAAT;;AAKA,QAAMG,UAAU,GAAIC,CAAD,IAAO;AACtB,WAAOR,KAAK,CAACS,WAAN,CAAkBC,WAAlB,CAA+B,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AAC/C,aAAOD,CAAC,GAAGJ,CAAJ,GAAQG,CAAR,GAAYE,CAAnB;AACH,KAFM,EAEJb,KAAK,CAACS,WAAN,CAAkBK,MAFd,IAEwB,CAF/B;AAGH,GAJD;;AAMA,QAAMV,QAAQ,GAAG,MAAM;AACnB,QAAI,CAAC,CAACH,OAAO,CAACc,OAAd,EAAuB;AACnB,YAAMC,UAAU,GAAGT,UAAU,CAACN,OAAO,CAACc,OAAR,CAAgBE,WAAjB,CAA7B;;AACA,UAAGf,OAAO,KAAKc,UAAf,EAA2B;AACvBb,QAAAA,UAAU,CAACa,UAAD,CAAV;AACH;AACJ;AACJ,GAPD;;AASA,QAAME,WAAW,GAAG,MAAM;AACtB,QAAIC,GAAG,GAAG,EAAV;AACA,UAAMC,IAAI,GAAGlB,OAAb;;AACA,SAAI,IAAIW,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGO,IAAnB,EAAyBP,CAAC,EAA1B,EAA6B;AACzBM,MAAAA,GAAG,CAACE,IAAJ,CAAS,EAAT;AACH;;AACD,WAAOrB,KAAK,CAACsB,QAAN,CAAeC,MAAf,CAAsB,CAACZ,CAAD,EAAGC,CAAH,EAAKC,CAAL,KAAW;AACpCF,MAAAA,CAAC,CAACE,CAAC,GAACO,IAAH,CAAD,CAAUC,IAAV,CAAeT,CAAf;AACA,aAAOD,CAAP;AACH,KAHM,EAGJQ,GAHI,CAAP;AAIH,GAVD;;AAYA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAElB,OAA9B;AAAA,gBACKiB,WAAW,GAAGM,GAAd,CAAkB,CAACL,GAAD,EAAMM,EAAN,KAAa;AAC5B,4BACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBACKN,GAAG,CAACK,GAAJ,CAAQ,CAACE,KAAD,EAAQb,CAAR,KAAc;AACnB,gCAAO;AAAA,wBAAea;AAAf,eAAUb,CAAV;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFA;AADL,WAA6BY,EAA7B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAnDD;;GAAM1B,c;;KAAAA,c;AAqDN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\n\r\nconst GalleryMasonry = props => {\r\n    const inputEl = useRef(null);\r\n    const [columns, setColumns] = useState(1);\r\n\r\n    useEffect(() => {\r\n        onResize();\r\n        window.addEventListener('resize', onResize)\r\n    })\r\n\r\n    const getColumns = (w) => {\r\n        return props.brakePoints.reduceRight( (p, c, i) => {\r\n            return c < w ? p : i;\r\n        }, props.brakePoints.length) + 1;\r\n    }\r\n\r\n    const onResize = () => {\r\n        if (!!inputEl.current) {\r\n            const columnsNew = getColumns(inputEl.current.offsetWidth);\r\n            if(columns !== columnsNew) {\r\n                setColumns(columnsNew)\r\n            }\r\n        }\r\n    }\r\n\r\n    const mapChildren = () => {\r\n        let col = [];\r\n        const numC = columns;\r\n        for(let i = 0; i < numC; i++){\r\n            col.push([]);\r\n        }\r\n        return props.children.reduce((p,c,i) => {\r\n            p[i%numC].push(c);\r\n            return p;\r\n        }, col);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"masonry\" ref={inputEl}>\r\n                {mapChildren().map((col, ci) => {\r\n                    return (\r\n                        <div className=\"column\" key={ci} >\r\n                            {col.map((child, i) => {\r\n                                return <div key={i} >{child}</div>\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default GalleryMasonry;"]},"metadata":{},"sourceType":"module"}