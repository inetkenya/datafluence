{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/components/Widgets/Statistic/AnalyticCard.js\";\nimport React from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnalyticCard = ({\n  params\n}) => {\n  let cardClass = ['analytic-card'];\n  let badgeClass = ['f-18 analytic-icon'];\n\n  if (params.badgeIcon) {\n    badgeClass = [...badgeClass, params.badgeIcon];\n  }\n\n  if (params.class) {\n    badgeClass = [...badgeClass, 'text-c-' + params.class];\n    cardClass = [...cardClass, 'bg-c-' + params.class];\n  }\n\n  let iconClass = ['m-r-10 f-18'];\n\n  if (params.icon) {\n    iconClass = [...iconClass, params.icon];\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: cardClass.join(' '),\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center m-b-25\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: badgeClass.join(' ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"m-b-5 text-white\",\n            children: params.primaryTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"m-b-0 text-white\",\n            children: params.secondaryTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"m-b-0  text-white d-inline-block\",\n        children: params.primaryText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text-white d-inline-block m-b-0 m-l-10\",\n        children: params.secondaryText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"m-b-0 d-inline-block text-white float-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: iconClass.join(' ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 77\n        }, this), params.caption]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AnalyticCard;\nexport default AnalyticCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyticCard\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/components/Widgets/Statistic/AnalyticCard.js"],"names":["React","Card","Col","Row","AnalyticCard","params","cardClass","badgeClass","badgeIcon","class","iconClass","icon","join","primaryTitle","secondaryTitle","primaryText","secondaryText","caption"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,iBAA/B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACjC,MAAIC,SAAS,GAAG,CAAC,eAAD,CAAhB;AACA,MAAIC,UAAU,GAAG,CAAC,oBAAD,CAAjB;;AACA,MAAIF,MAAM,CAACG,SAAX,EAAsB;AAClBD,IAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgBF,MAAM,CAACG,SAAvB,CAAb;AACH;;AACD,MAAIH,MAAM,CAACI,KAAX,EAAkB;AACdF,IAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgB,YAAYF,MAAM,CAACI,KAAnC,CAAb;AACAH,IAAAA,SAAS,GAAG,CAAC,GAAGA,SAAJ,EAAe,UAAUD,MAAM,CAACI,KAAhC,CAAZ;AACH;;AAED,MAAIC,SAAS,GAAG,CAAC,aAAD,CAAhB;;AACA,MAAIL,MAAM,CAACM,IAAX,EAAiB;AACbD,IAAAA,SAAS,GAAG,CAAC,GAAGA,SAAJ,EAAeL,MAAM,CAACM,IAAtB,CAAZ;AACH;;AAED,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEL,SAAS,CAACM,IAAV,CAAe,GAAf,CAAjB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,MAAR;AAAA,iCACI;AAAG,YAAA,SAAS,EAAEL,UAAU,CAACK,IAAX,CAAgB,GAAhB;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,kBAAd;AAAA,sBAAkCP,MAAM,CAACQ;AAAzC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,kBAAd;AAAA,sBAAkCR,MAAM,CAACS;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA,kBAAiDT,MAAM,CAACU;AAAxD;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAI,QAAA,SAAS,EAAC,wCAAd;AAAA,kBAAwDV,MAAM,CAACW;AAA/D;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAI,QAAA,SAAS,EAAC,6CAAd;AAAA,gCAA4D;AAAG,UAAA,SAAS,EAAEN,SAAS,CAACE,IAAV,CAAe,GAAf;AAAd;AAAA;AAAA;AAAA;AAAA,gBAA5D,EAAiGP,MAAM,CAACY,OAAxG;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAlCD;;KAAMb,Y;AAoCN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\n\r\nconst AnalyticCard = ({ params }) => {\r\n    let cardClass = ['analytic-card'];\r\n    let badgeClass = ['f-18 analytic-icon'];\r\n    if (params.badgeIcon) {\r\n        badgeClass = [...badgeClass, params.badgeIcon];\r\n    }\r\n    if (params.class) {\r\n        badgeClass = [...badgeClass, 'text-c-' + params.class];\r\n        cardClass = [...cardClass, 'bg-c-' + params.class];\r\n    }\r\n\r\n    let iconClass = ['m-r-10 f-18'];\r\n    if (params.icon) {\r\n        iconClass = [...iconClass, params.icon];\r\n    }\r\n\r\n    return (\r\n        <Card className={cardClass.join(' ')}>\r\n            <Card.Body>\r\n                <Row className=\"align-items-center m-b-25\">\r\n                    <Col sm=\"auto\">\r\n                        <i className={badgeClass.join(' ')} />\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                        <h3 className=\"m-b-5 text-white\">{params.primaryTitle}</h3>\r\n                        <h6 className=\"m-b-0 text-white\">{params.secondaryTitle}</h6>\r\n                    </Col>\r\n                </Row>\r\n                <p className=\"m-b-0  text-white d-inline-block\">{params.primaryText}</p>\r\n                <h5 className=\"text-white d-inline-block m-b-0 m-l-10\">{params.secondaryText}</h5>\r\n                <h6 className=\"m-b-0 d-inline-block text-white float-right\"><i className={iconClass.join(' ')}/>{params.caption}</h6>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AnalyticCard;\r\n"]},"metadata":{},"sourceType":"module"}