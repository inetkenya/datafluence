{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/layouts/AdminLayout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef } from 'react';\nimport Navigation from \"./Navigation\";\nimport NavBar from \"./NavBar\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport Configuration from \"./Configuration\";\nimport useWindowSize from \"../../hooks/useWindowSize\";\nimport useOutsideClick from \"../../hooks/useOutsideClick\";\nimport { ConfigContext } from \"../../contexts/ConfigContext\";\nimport * as actionType from \"../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminLayout = ({\n  children\n}) => {\n  _s();\n\n  const windowSize = useWindowSize();\n  const ref = useRef();\n  const configContext = useContext(ConfigContext);\n  const {\n    collapseMenu,\n    layout,\n    subLayout,\n    headerFixedLayout\n  } = configContext.state;\n  const {\n    dispatch\n  } = configContext;\n  useOutsideClick(ref, () => {\n    if (collapseMenu) {\n      dispatch({\n        type: actionType.COLLAPSE_MENU\n      });\n    }\n  });\n  useEffect(() => {\n    if (windowSize.width > 992 && windowSize.width <= 1024 && layout !== 'horizontal') {\n      dispatch({\n        type: actionType.COLLAPSE_MENU\n      });\n    }\n\n    if (layout === 'horizontal' && windowSize.width < 992) {\n      dispatch({\n        type: actionType.CHANGE_LAYOUT,\n        layout: 'vertical'\n      });\n    }\n  }, [dispatch, layout, windowSize]);\n\n  const mobileOutClickHandler = () => {\n    if (windowSize.width < 992 && collapseMenu) {\n      dispatch({\n        type: actionType.COLLAPSE_MENU\n      });\n    }\n  };\n\n  let mainClass = ['pcoded-wrapper'];\n\n  if (layout === 'horizontal' && subLayout === 'horizontal-2') {\n    mainClass = [...mainClass, 'container'];\n  }\n\n  let common = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n\n  if (windowSize.width < 992) {\n    let outSideClass = ['nav-outside'];\n\n    if (collapseMenu) {\n      outSideClass = [...outSideClass, 'mob-backdrop'];\n    }\n\n    if (headerFixedLayout) {\n      outSideClass = [...outSideClass, 'mob-fixed'];\n    }\n\n    common = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: outSideClass.join(' '),\n      ref: ref,\n      children: common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [common, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pcoded-main-container\",\n      onClick: () => mobileOutClickHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: mainClass.join(' '),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pcoded-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pcoded-inner-content\",\n            children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), children]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Configuration, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminLayout, \"NBQcOmidFzBgFSJ4PSkP+dNNBOI=\", false, function () {\n  return [useWindowSize, useOutsideClick];\n});\n\n_c = AdminLayout;\nexport default AdminLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLayout\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/layouts/AdminLayout/index.js"],"names":["React","useContext","useEffect","useRef","Navigation","NavBar","Breadcrumb","Configuration","useWindowSize","useOutsideClick","ConfigContext","actionType","AdminLayout","children","windowSize","ref","configContext","collapseMenu","layout","subLayout","headerFixedLayout","state","dispatch","type","COLLAPSE_MENU","width","CHANGE_LAYOUT","mobileOutClickHandler","mainClass","common","outSideClass","join"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\r\n\r\nimport Navigation from \"./Navigation\";\r\nimport NavBar from \"./NavBar\";\r\nimport Breadcrumb from \"./Breadcrumb\";\r\nimport Configuration from \"./Configuration\";\r\n\r\nimport useWindowSize from \"../../hooks/useWindowSize\";\r\nimport useOutsideClick from \"../../hooks/useOutsideClick\";\r\nimport { ConfigContext } from \"../../contexts/ConfigContext\";\r\nimport * as actionType from \"../../store/actions\";\r\n\r\nconst AdminLayout = ({ children }) => {\r\n    const windowSize = useWindowSize();\r\n    const ref = useRef();\r\n    const configContext = useContext(ConfigContext);\r\n\r\n    const { collapseMenu, layout, subLayout, headerFixedLayout } = configContext.state;\r\n    const { dispatch } = configContext;\r\n\r\n\r\n    useOutsideClick(ref, () => {\r\n        if (collapseMenu) {\r\n            dispatch({type: actionType.COLLAPSE_MENU});\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (windowSize.width > 992 && windowSize.width <= 1024 && layout !== 'horizontal') {\r\n            dispatch({type: actionType.COLLAPSE_MENU});\r\n        }\r\n\r\n        if (layout === 'horizontal' && windowSize.width < 992) {\r\n            dispatch({type: actionType.CHANGE_LAYOUT, layout: 'vertical'});\r\n        }\r\n    }, [dispatch, layout, windowSize]);\r\n\r\n    const mobileOutClickHandler = () => {\r\n        if (windowSize.width < 992 && collapseMenu) {\r\n            dispatch({type: actionType.COLLAPSE_MENU});\r\n        }\r\n    };\r\n\r\n    let mainClass = ['pcoded-wrapper'];\r\n    if (layout === 'horizontal' && subLayout === 'horizontal-2') {\r\n        mainClass = [...mainClass, 'container'];\r\n    }\r\n\r\n    let common = (\r\n        <React.Fragment>\r\n            <Navigation/>\r\n            <NavBar/>\r\n        </React.Fragment>\r\n    );\r\n\r\n    if (windowSize.width < 992) {\r\n        let outSideClass = ['nav-outside'];\r\n        if (collapseMenu) {\r\n            outSideClass = [...outSideClass, 'mob-backdrop'];\r\n        }\r\n        if (headerFixedLayout) {\r\n            outSideClass = [...outSideClass, 'mob-fixed'];\r\n        }\r\n\r\n        common = (\r\n            <div className={outSideClass.join(' ')} ref={ref}>\r\n                {common}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {common}\r\n            <div className=\"pcoded-main-container\" onClick={() => mobileOutClickHandler}>\r\n                <div className={mainClass.join(' ')}>\r\n                    <div className=\"pcoded-content\">\r\n                        <div className=\"pcoded-inner-content\">\r\n                            <Breadcrumb/>\r\n                            {children}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Configuration/>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminLayout;\r\n"]},"metadata":{},"sourceType":"module"}