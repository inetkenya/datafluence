{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/data/projectData.js\";\nimport namor from 'namor';\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst images = require.context('../assets/images/user', true);\n\nconst range = len => {\n  const arr = [];\n\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\n\nconst randomDate = (start, end) => {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toDateString();\n};\n\nconst GetAvatar = name => {\n  const photo_new = 'avatar-' + Math.floor(Math.random() * 5 + 1) + '.jpg';\n  let photo = images(`./${photo_new}`);\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: photo.default,\n    className: \"img-fluid img-radius wid-40\",\n    alt: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_c = GetAvatar;\n\nconst GetMembers = () => {\n  const count = Math.floor(Math.random() * 5 + 1);\n  const photo_new = 'avatar-' + Math.floor(Math.random() * 5 + 1) + '.jpg';\n  const photo_new1 = 'avatar-' + Math.floor(Math.random() * 5 + 1) + '.jpg';\n  const photo_new2 = 'avatar-' + Math.floor(Math.random() * 5 + 1) + '.jpg';\n  let photo = images(`./${photo_new}`);\n  let photo1 = images(`./${photo_new1}`);\n  let photo2 = images(`./${photo_new2}`);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100\",\n      children: [count < 2 ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid img-radius m-r-5\",\n          src: photo.default,\n          style: {\n            width: '30px'\n          },\n          alt: \"Task List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 27\n      }, this) : '', count < 3 ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid img-radius m-r-5\",\n          src: photo1.default,\n          style: {\n            width: '30px'\n          },\n          alt: \"Task List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 27\n      }, this) : '', count < 4 ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid img-radius m-r-5\",\n          src: photo2.default,\n          style: {\n            width: '30px'\n          },\n          alt: \"Task List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 27\n      }, this) : '', count < 5 ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid img-radius m-r-5\",\n          src: photo2.default,\n          style: {\n            width: '30px'\n          },\n          alt: \"Task List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 27\n      }, this) : '', count === 5 ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid img-radius m-r-5\",\n          src: photo2.default,\n          style: {\n            width: '30px'\n          },\n          alt: \"Task List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }, this) : '', /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus f-w-600 m-l-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = GetMembers;\nlet i = 1;\n\nconst newPerson = () => {\n  let nameEmail = namor.generate({\n    words: 2,\n    saltLength: 0,\n    saltType: 'number'\n  });\n  const name = (nameEmail.charAt(0).toUpperCase() + nameEmail.slice(1)).replaceAll('-', ' ');\n  const tags = Math.floor(Math.random() * 5 + 1);\n  const status = Math.floor(Math.random() * 5 + 1);\n  const description = namor.generate({\n    words: 2,\n    saltLength: 0,\n    saltType: 'number'\n  }).replaceAll('-', ' ');\n  const deadline = new Date();\n  deadline.setDate(new Date().getDate() + 365);\n  return {\n    id: i++,\n    name: name,\n    avatar: GetAvatar(name),\n    description: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [description, /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"d-block\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"mr-1\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), \" |\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"mx-1\",\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), \" |\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"text-danger ml-1\",\n          children: \"Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this),\n    email: nameEmail + '@gmail.com',\n    phone: '+9' + Math.floor(Math.random() * 9 + 1) + ' ' + namor.generate({\n      words: 0,\n      saltLength: 3,\n      saltType: 'number'\n    }) + '-' + namor.generate({\n      words: 0,\n      saltLength: 6,\n      saltType: 'number'\n    }),\n    date: randomDate(new Date(2012, 0, 1), new Date()),\n    deadline: randomDate(new Date(), deadline),\n    active: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-control custom-switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"custom-control-input\",\n        id: 'customSwitch' + i,\n        defaultChecked: Math.floor(Math.random() * 2 + 1) > 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: 'customSwitch' + i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this),\n    group: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [Math.floor(Math.random() * 2 + 1) > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-danger inline-block mr-1\",\n        children: \"Low Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 60\n      }, this), Math.floor(Math.random() * 2 + 1) > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-success inline-block mr-1\",\n        children: \"High Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 60\n      }, this), Math.floor(Math.random() * 2 + 1) > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-warning inline-block mr-1\",\n        children: \"VIP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 60\n      }, this), Math.floor(Math.random() * 2 + 1) > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-primary inline-block\",\n        children: \"Wholesaler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 60\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this),\n    tags: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [tags === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-danger inline-block mr-1\",\n        children: \"Wordpress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }, this), tags === 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-success inline-block mr-1\",\n        children: \"Vue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }, this), tags === 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-warning inline-block mr-1\",\n        children: \"React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }, this), tags === 4 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-primary inline-block\",\n        children: \"Angular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }, this), tags === 5 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-info inline-block\",\n        children: \"HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this),\n    status: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [status === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-primary inline-block mr-1\",\n        children: \"In Proccess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 35\n      }, this), status === 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-warning inline-block mr-1\",\n        children: \"Delay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 35\n      }, this), status === 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-success inline-block mr-1\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 35\n      }, this), status === 4 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-info inline-block\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 35\n      }, this), status === 5 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-danger inline-block\",\n        children: \"Cancelled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this),\n    member: GetMembers(),\n    action: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: \"text-primary mx-1\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"feather icon-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: \"text-danger\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"feather icon-trash-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  };\n};\n\nexport default function makeData(...lens) {\n  const makeDataLevel = (depth = 0) => {\n    const len = lens[depth];\n    return range(len).map(d => {\n      return { ...newPerson(),\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined\n      };\n    });\n  };\n\n  return makeDataLevel();\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetAvatar\");\n$RefreshReg$(_c2, \"GetMembers\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/data/projectData.js"],"names":["namor","React","Link","images","require","context","range","len","arr","i","push","randomDate","start","end","Date","getTime","Math","random","toDateString","GetAvatar","name","photo_new","floor","photo","default","GetMembers","count","photo_new1","photo_new2","photo1","photo2","width","newPerson","nameEmail","generate","words","saltLength","saltType","charAt","toUpperCase","slice","replaceAll","tags","status","description","deadline","setDate","getDate","id","avatar","email","phone","date","active","group","member","action","makeData","lens","makeDataLevel","depth","map","d","subRows","undefined"],"mappings":"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","sourcesContent":["import namor from 'namor';\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst images = require.context('../assets/images/user', true);\r\n\r\nconst range = len => {\r\n    const arr = [];\r\n    for (let i = 0; i < len; i++) {\r\n        arr.push(i)\r\n    }\r\n    return arr\r\n};\r\n\r\nconst randomDate = (start, end) => {\r\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toDateString();\r\n};\r\n\r\nconst GetAvatar = (name) => {\r\n    const photo_new = 'avatar-' + Math.floor(Math.random() * 5 + 1) +'.jpg';\r\n    let photo = images(`./${photo_new}`);\r\n    return <img src={photo.default} className=\"img-fluid img-radius wid-40\" alt={name}/>;\r\n};\r\n\r\nconst GetMembers = () => {\r\n    const count = Math.floor(Math.random() * 5 + 1);\r\n    const photo_new = 'avatar-' + Math.floor(Math.random() * 5 + 1) +'.jpg';\r\n    const photo_new1 = 'avatar-' + Math.floor(Math.random() * 5 + 1) +'.jpg';\r\n    const photo_new2 = 'avatar-' + Math.floor(Math.random() * 5 + 1) +'.jpg';\r\n    let photo = images(`./${photo_new}`);\r\n    let photo1 = images(`./${photo_new1}`);\r\n    let photo2 = images(`./${photo_new2}`);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"w-100\">\r\n            { count < 2 ? <Link to='#'><img className=\"img-fluid img-radius m-r-5\" src={photo.default} style={{width: '30px'}} alt=\"Task List\" /></Link> : ''}\r\n            { count < 3 ? <Link to='#'><img className=\"img-fluid img-radius m-r-5\" src={photo1.default} style={{width: '30px'}} alt=\"Task List\" /></Link>: ''}\r\n            { count < 4 ? <Link to='#'><img className=\"img-fluid img-radius m-r-5\" src={photo2.default} style={{width: '30px'}} alt=\"Task List\" /></Link>: ''}\r\n            { count < 5 ? <Link to='#'><img className=\"img-fluid img-radius m-r-5\" src={photo2.default} style={{width: '30px'}} alt=\"Task List\" /></Link>: ''}\r\n            { count === 5 ? <Link to='#'><img className=\"img-fluid img-radius m-r-5\" src={photo2.default} style={{width: '30px'}} alt=\"Task List\" /></Link>: ''}\r\n            <Link to='#'><i className=\"fas fa-plus f-w-600 m-l-5\"/></Link   >\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nlet i = 1;\r\n\r\nconst newPerson = () => {\r\n    let nameEmail = namor.generate({ words: 2, saltLength: 0, saltType: 'number' });\r\n    const name = (nameEmail.charAt(0).toUpperCase() + nameEmail.slice(1)).replaceAll('-', ' ');\r\n    const tags = Math.floor(Math.random() * 5 + 1);\r\n    const status = Math.floor(Math.random() * 5 + 1);\r\n    const description = (namor.generate({ words: 2, saltLength: 0, saltType: 'number' })).replaceAll('-', ' ');\r\n    const deadline = new Date();\r\n    deadline.setDate(new Date().getDate()+365);\r\n\r\n    return {\r\n        id: i++,\r\n        name: name,\r\n        avatar: GetAvatar(name),\r\n        description: \r\n            <React.Fragment>\r\n                {description}\r\n                <small className=\"d-block\">\r\n                    <Link to='#' className=\"mr-1\">View</Link> |\r\n                    <Link to='#' className=\"mx-1\">Contacts</Link> |\r\n                    <Link to='#' className=\"text-danger ml-1\">Delete </Link>\r\n                </small>\r\n            </React.Fragment>\r\n        ,\r\n        email: nameEmail + '@gmail.com',\r\n        phone: '+9' + Math.floor(Math.random() * 9 + 1) + ' ' + namor.generate({ words: 0, saltLength: 3, saltType: 'number' })+ '-' + namor.generate({ words: 0, saltLength: 6, saltType: 'number' }),\r\n        date: randomDate(new Date(2012, 0, 1), new Date()),\r\n        deadline: randomDate(new Date(), deadline),\r\n        active:\r\n            <div className=\"custom-control custom-switch\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id={'customSwitch' + i} defaultChecked={Math.floor(Math.random() * 2 + 1) > 1} />\r\n                <label className=\"custom-control-label\" htmlFor={'customSwitch' + i}/>\r\n            </div>\r\n        ,\r\n        group:\r\n            <React.Fragment>\r\n                { Math.floor(Math.random() * 2 + 1) > 1 && <span className=\"badge badge-danger inline-block mr-1\">Low Budget</span> }\r\n                { Math.floor(Math.random() * 2 + 1) > 1 && <span className=\"badge badge-success inline-block mr-1\">High Budget</span>}\r\n                { Math.floor(Math.random() * 2 + 1) > 1 && <span className=\"badge badge-warning inline-block mr-1\">VIP</span> }\r\n                { Math.floor(Math.random() * 2 + 1) > 1 && <span className=\"badge badge-primary inline-block\">Wholesaler</span> }\r\n            </React.Fragment>\r\n        ,\r\n        tags:\r\n            <React.Fragment>\r\n                { tags === 1 && <span className=\"badge badge-danger inline-block mr-1\">Wordpress</span> }\r\n                { tags === 2 && <span className=\"badge badge-success inline-block mr-1\">Vue</span>}\r\n                { tags === 3 && <span className=\"badge badge-warning inline-block mr-1\">React</span> }\r\n                { tags === 4 && <span className=\"badge badge-primary inline-block\">Angular</span> }\r\n                { tags === 5 && <span className=\"badge badge-info inline-block\">HTML</span> }\r\n            </React.Fragment>\r\n        ,\r\n        status:\r\n            <React.Fragment>\r\n                { status === 1 && <span className=\"badge badge-primary inline-block mr-1\">In Proccess</span> }\r\n                { status === 2 && <span className=\"badge badge-warning inline-block mr-1\">Delay</span>}\r\n                { status === 3 && <span className=\"badge badge-success inline-block mr-1\">Completed</span> }\r\n                { status === 4 && <span className=\"badge badge-info inline-block\">Pending</span> }\r\n                { status === 5 && <span className=\"badge badge-danger inline-block\">Cancelled</span> }\r\n            </React.Fragment>\r\n        ,\r\n        member: GetMembers(),\r\n        action: \r\n            <React.Fragment>\r\n                <Link to='#' className=\"text-primary mx-1\"><i className=\"feather icon-edit\"/></Link>\r\n                <Link to='#' className=\"text-danger\"><i className=\"feather icon-trash-2\"/></Link>\r\n            </React.Fragment>\r\n    }\r\n};\r\n\r\nexport default function makeData(...lens) {\r\n    const makeDataLevel = (depth = 0) => {\r\n        const len = lens[depth];\r\n        return range(len).map(d => {\r\n            return {\r\n                ...newPerson(),\r\n                subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\r\n            }\r\n        })\r\n    };\r\n\r\n    return makeDataLevel()\r\n}\r\n"]},"metadata":{},"sourceType":"module"}