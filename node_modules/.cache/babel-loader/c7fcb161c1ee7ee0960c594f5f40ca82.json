{"ast":null,"code":"const chartData = {\n  height: 350,\n  type: 'bubble',\n  options: {\n    dataLabels: {\n      enabled: false\n    },\n    colors: [\"#4099ff\", \"#0e9e4a\", \"#FFB64D\", \"#FF5370\"],\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shade: 'light',\n        type: \"vertical\",\n        shadeIntensity: 0.25,\n        inverseColors: true,\n        opacityFrom: 1,\n        opacityTo: 0.7,\n        stops: [0, 100]\n      }\n    },\n    title: {\n      text: 'Simple Bubble Chart'\n    },\n    xaxis: {\n      tickAmount: 12,\n      type: 'category'\n    },\n    yaxis: {\n      max: 70\n    }\n  },\n  series: [{\n    name: 'Bubble1',\n    data: generateBubbleData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }, {\n    name: 'Bubble2',\n    data: generateBubbleData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }, {\n    name: 'Bubble3',\n    data: generateBubbleData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }, {\n    name: 'Bubble4',\n    data: generateBubbleData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }]\n};\nexport default chartData;\n\nfunction generateBubbleData(baseval, count, yrange) {\n  let i = 0;\n  const series = [];\n\n  while (i < count) {\n    const x = Math.floor(Math.random() * (750 - 1 + 1)) + 1;\n    const y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    const z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\n    series.push([x, y, z]);\n    baseval += 86400000;\n    i++;\n  }\n\n  return series;\n}","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/charts/apex-chart/chart/bubble-chart-1.js"],"names":["chartData","height","type","options","dataLabels","enabled","colors","fill","gradient","shade","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","title","text","xaxis","tickAmount","yaxis","max","series","name","data","generateBubbleData","Date","getTime","min","baseval","count","yrange","i","x","Math","floor","random","y","z","push"],"mappings":"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","sourcesContent":["const chartData = {\r\n    height: 350,\r\n    type: 'bubble',\r\n    options: {\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: [\"#4099ff\", \"#0e9e4a\", \"#FFB64D\", \"#FF5370\"],\r\n        fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n                shade: 'light',\r\n                type: \"vertical\",\r\n                shadeIntensity: 0.25,\r\n                inverseColors: true,\r\n                opacityFrom: 1,\r\n                opacityTo: 0.7,\r\n                stops: [0, 100]\r\n            }\r\n        },\r\n        title: {\r\n            text: 'Simple Bubble Chart'\r\n        },\r\n        xaxis: {\r\n            tickAmount: 12,\r\n            type: 'category',\r\n        },\r\n        yaxis: {\r\n            max: 70\r\n        }\r\n    },\r\n    series: [\r\n        {\r\n            name: 'Bubble1',\r\n            data: generateBubbleData(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n                min: 10,\r\n                max: 60\r\n            })\r\n        },\r\n        {\r\n            name: 'Bubble2',\r\n            data: generateBubbleData(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n                min: 10,\r\n                max: 60\r\n            })\r\n        },\r\n        {\r\n            name: 'Bubble3',\r\n            data: generateBubbleData(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n                min: 10,\r\n                max: 60\r\n            })\r\n        },\r\n        {\r\n            name: 'Bubble4',\r\n            data: generateBubbleData(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n                min: 10,\r\n                max: 60\r\n            })\r\n        }\r\n    ]\r\n}\r\nexport default chartData;\r\n\r\nfunction generateBubbleData(baseval, count, yrange) {\r\n    let i = 0;\r\n    const series = [];\r\n    while (i < count) {\r\n        const x = Math.floor(Math.random() * (750 - 1 + 1)) + 1;\r\n        const y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\r\n        const z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\r\n\r\n        series.push([x, y, z]);\r\n        baseval += 86400000;\r\n        i++;\r\n    }\r\n    return series;\r\n}"]},"metadata":{},"sourceType":"module"}