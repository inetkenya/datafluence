{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/ui-elements/advance/AdvanceModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col, Button, Card } from 'react-bootstrap';\nimport AnimatedModal from '../../../components/Modal/AnimatedModal';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdvanceModal = () => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  const [animation, setAnimation] = useState('flip');\n  const animationVariant = ['zoom', 'fade', 'flip', 'door', 'rotate', 'slideUp', 'slideDown', 'slideLeft', 'slideRight'];\n  const modal = animationVariant.map((variant, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      className: \"text-capitalize\",\n      onClick: () => {\n        setAnimation(variant);\n        setShowModal(true);\n      },\n      children: variant\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(ModuleNotification, {\n          message: \"For more info please check the components's official documentation\",\n          link: \"https://github.com/chenjiahan/rodal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Animeted Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"btn-page\",\n            children: modal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatedModal, {\n      visible: showModal,\n      onClose: () => setShowModal(false),\n      animation: animation,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            as: \"h5\",\n            children: \"Modal Dialog 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is a modal window. You can do the following things with it:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Read:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this), \" modal windows will probably tell you something important so don't forget to read what they say.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Look:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this), \" a modal window enjoys a certain kind of attention; just look at it and appreciate its presence.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Close:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), \" click on the button below to close the modal.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            className: \"btn btn-primary md-close\",\n            children: \"Close Me!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdvanceModal, \"ANK7BzDTBKCvEd6pGGAD+hYycDE=\");\n\n_c = AdvanceModal;\nexport default AdvanceModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdvanceModal\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/ui-elements/advance/AdvanceModal.js"],"names":["React","useState","Row","Col","Button","Card","AnimatedModal","ModuleNotification","AdvanceModal","showModal","setShowModal","animation","setAnimation","animationVariant","modal","map","variant","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Button, Card } from 'react-bootstrap';\r\nimport AnimatedModal from '../../../components/Modal/AnimatedModal';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\n\r\nconst AdvanceModal = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [animation, setAnimation] = useState('flip');\r\n\r\n    const animationVariant = ['zoom', 'fade', 'flip', 'door', 'rotate', 'slideUp', 'slideDown', 'slideLeft', 'slideRight'];\r\n\r\n\r\n    const modal = animationVariant.map((variant, index) => {\r\n        return <Button key={index} className='text-capitalize' onClick={() => {setAnimation(variant); setShowModal(true)}}>{variant}</Button>\r\n    });\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://github.com/chenjiahan/rodal' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Animeted Model</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body className='btn-page'>\r\n                            {modal}                    \r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <AnimatedModal visible={showModal} onClose={() => setShowModal(false)} animation={animation}>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Card.Title as='h5'>Modal Dialog 1</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <p>This is a modal window. You can do the following things with it:</p>\r\n                        <ul>\r\n                            <li><strong>Read:</strong> modal windows will probably tell you something important so don't forget to read what they say.</li>\r\n                            <li><strong>Look:</strong> a modal window enjoys a certain kind of attention; just look at it and appreciate its presence.</li>\r\n                            <li><strong>Close:</strong> click on the button below to close the modal.</li>\r\n                        </ul>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-center\">\r\n                        <button onClick={() => setShowModal(false)} className=\"btn btn-primary md-close\">Close Me!!</button>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </AnimatedModal>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AdvanceModal;"]},"metadata":{},"sourceType":"module"}