{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/data/cryptoData.js\";\nimport namor from 'namor';\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst range = len => {\n  const arr = [];\n\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\n\nconst randomDate = (start, end) => {\n  let today = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n  var dd = today.getDate();\n  var mm = today.getMonth() + 1;\n  var yyyy = today.getFullYear();\n\n  if (dd < 10) {\n    dd = '0' + dd;\n  }\n\n  if (mm < 10) {\n    mm = '0' + mm;\n  }\n\n  return yyyy + '-' + mm + '-' + dd;\n};\n\nconst newPerson = () => {\n  let nameEmail = namor.generate({\n    words: 2,\n    saltLength: 0,\n    saltType: 'number'\n  });\n  const name = (nameEmail.charAt(0).toUpperCase() + nameEmail.slice(1)).replaceAll('-', ' ');\n  let department = namor.generate({\n    words: 2,\n    saltLength: 0,\n    saltType: 'number'\n  });\n  department = (department.charAt(0).toUpperCase() + department.slice(1)).replaceAll('-', ' ');\n  const status = Math.floor(Math.random() * 5 + 1);\n  const cryptoBitcoin = ['ANC', 'Bitcoin', 'ETC', 'ICN', 'MCO', 'ETH'];\n  const cryptoEthereum = ['ARK', 'FRK', 'ICO', 'MRC', 'XRP', 'Litecoin'];\n  const cryptoAsymmetrik = ['BC', 'BTA', 'GAME', 'JBS', 'NEO'];\n  const cryptoCloudsmith = ['DCR', 'KORE', 'XMR', 'DASH', 'GNO'];\n  const currency = Math.floor(Math.random() * 4 + 1);\n  const totalCoin = [75, 80, 90, 100, 200, 300, 400, 470, 500, 630, 650, 700, 720, 750, 800, 850, 900, 1000];\n  const coinPrice = [8, 10, 15, 40, 80, 100, 200, 300, 400];\n  const coin = totalCoin[Math.floor(Math.random() * 17 + 0)];\n  const price = coinPrice[Math.floor(Math.random() * 8 + 0)];\n  const total = coin * price;\n  const timeLabel = Math.floor(Math.random() * 2 + 1) > 1 ? 'am' : 'pm';\n  const receiverLabel = Math.floor(Math.random() * 2 + 1) > 1 ? 'Bank' : 'Wallet';\n  return {\n    id: '#' + namor.generate({\n      words: 0,\n      saltLength: 4,\n      saltType: 'number'\n    }),\n    currency: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [currency === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"f-24 m-r-10 fab fa-bitcoin text-c-yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 80\n        }, this), \" \", cryptoBitcoin[Math.floor(Math.random() * 5 + 0)], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 36\n      }, this), currency === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"f-24 m-r-10 fab fa-ethereum text-c-red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 80\n        }, this), \" \", cryptoEthereum[Math.floor(Math.random() * 5 + 0)], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 36\n      }, this), currency === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"f-24 m-r-10 fab fa-asymmetrik text-c-blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 80\n        }, this), \" \", cryptoAsymmetrik[Math.floor(Math.random() * 4 + 0)], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 36\n      }, this), currency === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"f-24 m-r-10 fab fa-cloudsmith text-c-green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 80\n        }, this), \" \", cryptoCloudsmith[Math.floor(Math.random() * 4 + 0)], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this),\n    coin: coin,\n    price: price,\n    total: total,\n    type: Math.floor(Math.random() * 2 + 1) > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-success\",\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 55\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-danger\",\n      children: \"Sell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 97\n    }, this),\n    transType: Math.floor(Math.random() * 2 + 1) > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"badge badge-success badge-pill\",\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 60\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"badge badge-danger badge-pill\",\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 124\n    }, this),\n    amount: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [currency === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"amount\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-bitcoin m-r-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 60\n        }, this), Math.floor(Math.random() * 9 + 0), \".\", namor.generate({\n          words: 0,\n          saltLength: 3,\n          saltType: 'number'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 36\n      }, this), currency === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"amount\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-ethereum m-r-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 60\n        }, this), Math.floor(Math.random() * 9 + 0), \".\", namor.generate({\n          words: 0,\n          saltLength: 3,\n          saltType: 'number'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 36\n      }, this), currency === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"amount\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-asymmetrik m-r-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 60\n        }, this), Math.floor(Math.random() * 9 + 0), \".\", namor.generate({\n          words: 0,\n          saltLength: 3,\n          saltType: 'number'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 36\n      }, this), currency === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"amount\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-cloudsmith m-r-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 60\n        }, this), Math.floor(Math.random() * 9 + 0), \".\", namor.generate({\n          words: 0,\n          saltLength: 3,\n          saltType: 'number'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this),\n    transPrice: Math.floor(total / 100) + '.' + namor.generate({\n      words: 0,\n      saltLength: 2,\n      saltType: 'number'\n    }),\n    usd: price + '.' + namor.generate({\n      words: 0,\n      saltLength: 2,\n      saltType: 'number'\n    }),\n    fee: '0.' + namor.generate({\n      words: 0,\n      saltLength: 2,\n      saltType: 'number'\n    }),\n    status: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [status === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-primary inline-block mr-1\",\n        children: \"In Proccess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 35\n      }, this), status === 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-warning inline-block mr-1\",\n        children: \"Delay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 35\n      }, this), status === 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-success inline-block mr-1\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 35\n      }, this), status === 4 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-info inline-block\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 35\n      }, this), status === 5 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-danger inline-block\",\n        children: \"Cancelled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this),\n    time: Math.floor(Math.random() * 12 + 0) + ':' + Math.floor(Math.random() * 99 + 0) + ' ' + timeLabel,\n    name: name,\n    department: department,\n    date: randomDate(new Date(2012, 0, 1), new Date()),\n    receiver: cryptoBitcoin[Math.floor(Math.random() * 5 + 0)] + '-' + receiverLabel + ' ' + namor.generate({\n      words: 0,\n      saltLength: 5,\n      saltType: 'number'\n    }),\n    action: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: \"btn btn-icon btn-rounded btn-success mx-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"feather icon-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 84\n        }, this), \"\\xA0Deposit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: \"btn btn-icon btn-rounded btn-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"feather icon-trash-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 78\n        }, this), \"\\xA0Withdraw\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  };\n};\n\nexport default function makeData(...lens) {\n  const makeDataLevel = (depth = 0) => {\n    const len = lens[depth];\n    return range(len).map(d => {\n      return { ...newPerson(),\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined\n      };\n    });\n  };\n\n  return makeDataLevel();\n}","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/data/cryptoData.js"],"names":["namor","React","Link","range","len","arr","i","push","randomDate","start","end","today","Date","getTime","Math","random","dd","getDate","mm","getMonth","yyyy","getFullYear","newPerson","nameEmail","generate","words","saltLength","saltType","name","charAt","toUpperCase","slice","replaceAll","department","status","floor","cryptoBitcoin","cryptoEthereum","cryptoAsymmetrik","cryptoCloudsmith","currency","totalCoin","coinPrice","coin","price","total","timeLabel","receiverLabel","id","type","transType","amount","transPrice","usd","fee","time","date","receiver","action","makeData","lens","makeDataLevel","depth","map","d","subRows","undefined"],"mappings":"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","sourcesContent":["import namor from 'namor';\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst range = len => {\r\n    const arr = [];\r\n    for (let i = 0; i < len; i++) {\r\n        arr.push(i)\r\n    }\r\n    return arr\r\n};\r\n\r\nconst randomDate = (start, end) => {\r\n    let today = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r\n    var dd = today.getDate();\r\n    var mm = today.getMonth()+1; \r\n    var yyyy = today.getFullYear();\r\n    if(dd<10) {\r\n        dd='0'+dd;\r\n    } \r\n\r\n    if(mm<10) {\r\n        mm='0'+mm;\r\n    } \r\n\r\n    return yyyy+'-'+mm+'-'+dd;\r\n};\r\n\r\nconst newPerson = () => {\r\n    let nameEmail = namor.generate({ words: 2, saltLength: 0, saltType: 'number' });\r\n    const name = (nameEmail.charAt(0).toUpperCase() + nameEmail.slice(1)).replaceAll('-', ' ');\r\n\r\n    let department = namor.generate({ words: 2, saltLength: 0, saltType: 'number' });\r\n    department = (department.charAt(0).toUpperCase() + department.slice(1)).replaceAll('-', ' ');\r\n\r\n    const status = Math.floor(Math.random() * 5 + 1);\r\n\r\n    const cryptoBitcoin = ['ANC', 'Bitcoin', 'ETC', 'ICN', 'MCO', 'ETH'];\r\n    const cryptoEthereum = ['ARK', 'FRK', 'ICO', 'MRC', 'XRP', 'Litecoin'];\r\n    const cryptoAsymmetrik = ['BC', 'BTA', 'GAME', 'JBS', 'NEO'];\r\n    const cryptoCloudsmith = ['DCR', 'KORE', 'XMR', 'DASH', 'GNO'];\r\n\r\n    const currency = Math.floor(Math.random() * 4 + 1);\r\n\r\n    const totalCoin = [75, 80, 90, 100, 200, 300, 400, 470, 500, 630, 650, 700, 720, 750, 800, 850, 900, 1000];\r\n    const coinPrice = [8, 10, 15, 40, 80, 100, 200, 300, 400];\r\n\r\n    const coin = totalCoin[Math.floor(Math.random() * 17 + 0)];\r\n    const price = coinPrice[Math.floor(Math.random() * 8 + 0)];\r\n\r\n    const total = coin * price;\r\n    const timeLabel = (Math.floor(Math.random() * 2 + 1) > 1) ? 'am' : 'pm';\r\n    const receiverLabel = (Math.floor(Math.random() * 2 + 1) > 1) ? 'Bank' : 'Wallet';\r\n\r\n    return {\r\n        id: '#' + namor.generate({ words: 0, saltLength: 4, saltType: 'number' }),\r\n        currency: \r\n            <React.Fragment>\r\n                {currency === 1 && <div className=\"d-flex align-items-center\"> <i className=\"f-24 m-r-10 fab fa-bitcoin text-c-yellow\"/> { cryptoBitcoin[Math.floor(Math.random() * 5 + 0)] } </div>}\r\n                {currency === 2 && <div className=\"d-flex align-items-center\"> <i className=\"f-24 m-r-10 fab fa-ethereum text-c-red\"/> { cryptoEthereum[Math.floor(Math.random() * 5 + 0)] } </div>}\r\n                {currency === 3 && <div className=\"d-flex align-items-center\"> <i className=\"f-24 m-r-10 fab fa-asymmetrik text-c-blue\"/> { cryptoAsymmetrik[Math.floor(Math.random() * 4 + 0)] } </div>}\r\n                {currency === 4 && <div className=\"d-flex align-items-center\"> <i className=\"f-24 m-r-10 fab fa-cloudsmith text-c-green\"/> { cryptoCloudsmith[Math.floor(Math.random() * 4 + 0)] } </div>}\r\n            </React.Fragment>\r\n        ,\r\n        coin: coin,\r\n        price: price,\r\n        total: total,\r\n        type: Math.floor(Math.random() * 2 + 1) > 1 ? <div className=\"text-success\">Buy</div> : <div className=\"text-danger\">Sell</div>,\r\n        transType: Math.floor(Math.random() * 2 + 1) > 1 ? <div className=\"badge badge-success badge-pill\">Deposit</div> : <div className=\"badge badge-danger badge-pill\">Withdraw</div>,\r\n        amount: \r\n            <React.Fragment>\r\n                {currency === 1 && <div className=\"amount\"><i className=\"fab fa-bitcoin m-r-5\"/>{ Math.floor(Math.random() * 9 + 0) }.{ namor.generate({ words: 0, saltLength: 3, saltType: 'number' }) }</div>}\r\n                {currency === 2 && <div className=\"amount\"><i className=\"fab fa-ethereum m-r-5\"/>{ Math.floor(Math.random() * 9 + 0) }.{ namor.generate({ words: 0, saltLength: 3, saltType: 'number' }) }</div>}\r\n                {currency === 3 && <div className=\"amount\"><i className=\"fab fa-asymmetrik m-r-5\"/>{ Math.floor(Math.random() * 9 + 0) }.{ namor.generate({ words: 0, saltLength: 3, saltType: 'number' }) }</div>}\r\n                {currency === 4 && <div className=\"amount\"><i className=\"fab fa-cloudsmith m-r-5\"/>{ Math.floor(Math.random() * 9 + 0) }.{ namor.generate({ words: 0, saltLength: 3, saltType: 'number' }) }</div>}\r\n            </React.Fragment>\r\n        ,\r\n        transPrice: Math.floor(total/100) + '.' + namor.generate({ words: 0, saltLength: 2, saltType: 'number' }),\r\n        usd: price + '.' + namor.generate({ words: 0, saltLength: 2, saltType: 'number' }),\r\n        fee: '0.' + namor.generate({ words: 0, saltLength: 2, saltType: 'number' }),\r\n        status:\r\n            <React.Fragment>\r\n                { status === 1 && <span className=\"badge badge-primary inline-block mr-1\">In Proccess</span> }\r\n                { status === 2 && <span className=\"badge badge-warning inline-block mr-1\">Delay</span>}\r\n                { status === 3 && <span className=\"badge badge-success inline-block mr-1\">Completed</span> }\r\n                { status === 4 && <span className=\"badge badge-info inline-block\">Pending</span> }\r\n                { status === 5 && <span className=\"badge badge-danger inline-block\">Cancelled</span> }\r\n            </React.Fragment>\r\n        ,\r\n        time: Math.floor(Math.random() * 12 + 0) + ':' + Math.floor(Math.random() * 99 + 0) + ' ' + timeLabel,\r\n        name: name,\r\n        department: department,\r\n        date: randomDate(new Date(2012, 0, 1), new Date()),\r\n        receiver: cryptoBitcoin[Math.floor(Math.random() * 5 + 0)] + '-' + receiverLabel + ' ' + namor.generate({ words: 0, saltLength: 5, saltType: 'number' }),\r\n        action: \r\n            <React.Fragment>\r\n                <Link to='#' className=\"btn btn-icon btn-rounded btn-success mx-1\"><i className=\"feather icon-edit\"/>&nbsp;Deposit</Link>\r\n                <Link to='#' className=\"btn btn-icon btn-rounded btn-danger\"><i className=\"feather icon-trash-2\"/>&nbsp;Withdraw</Link>\r\n            </React.Fragment>\r\n    }\r\n};\r\n\r\nexport default function makeData(...lens) {\r\n    const makeDataLevel = (depth = 0) => {\r\n        const len = lens[depth];\r\n        return range(len).map(d => {\r\n            return {\r\n                ...newPerson(),\r\n                subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\r\n            }\r\n        })\r\n    };\r\n\r\n    return makeDataLevel()\r\n}\r\n"]},"metadata":{},"sourceType":"module"}