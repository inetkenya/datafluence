{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/forms/form-validation/FieldLevelValidationForm.js\";\nimport React from 'react';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => value || typeof value === 'number' ? undefined : 'Required';\n\nconst maxLength = max => value => value && value.length > max ? `Must be ${max} characters or less` : undefined;\n\nconst maxLength15 = maxLength(15);\nexport const minLength = min => value => value && value.length < min ? `Must be ${min} characters or more` : undefined;\nexport const minLength2 = minLength(2);\n\nconst number = value => value && isNaN(Number(value)) ? 'Must be a number' : undefined;\n\nconst minValue = min => value => value && value < min ? `Must be at least ${min}` : undefined;\n\nconst minValue13 = minValue(13);\n\nconst email = value => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;\n\nconst tooYoung = value => value && value < 13 ? 'You do not meet the minimum age requirement!' : undefined;\n\nconst aol = value => value && /.+@aol\\.com/.test(value) ? 'Really? You still use AOL for your email?' : undefined;\n\nconst alphaNumeric = value => value && /[^a-zA-Z0-9 ]/i.test(value) ? 'Only alphanumeric characters' : undefined;\n\nexport const phoneNumber = value => value && !/^(0|[1-9][0-9]{9})$/i.test(value) ? 'Invalid phone number, must be 10 digits' : undefined;\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => /*#__PURE__*/_jsxDEV(Row, {\n  className: \"my-3\",\n  children: [/*#__PURE__*/_jsxDEV(Col, {\n    sm: 3,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label-control\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Col, {\n    sm: 9,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      placeholder: label,\n      type: type,\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), touched && (error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-c-red\",\n      children: [\"* \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }, this) || warning && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-c-yellow\",\n      children: warning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 5\n}, this);\n\nconst FieldLevelValidationForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(Card.Title, {\n        as: \"h5\",\n        children: \"Field-Level Validation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"username\",\n          type: \"text\",\n          component: renderField,\n          label: \"Username\",\n          validate: [required, maxLength15, minLength2],\n          warn: alphaNumeric\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\",\n          component: renderField,\n          label: \"Email\",\n          validate: email,\n          warn: aol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"age\",\n          type: \"number\",\n          component: renderField,\n          label: \"Age\",\n          validate: [required, number, minValue13],\n          warn: tooYoung\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"phone\",\n          type: \"number\",\n          component: renderField,\n          label: \"Phone number\",\n          validate: [required, phoneNumber]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        type: \"button\",\n        className: \"float-right\",\n        disabled: pristine || submitting,\n        onClick: reset,\n        children: \"Clear Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"mr-1 float-right\",\n        disabled: submitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FieldLevelValidationForm;\nexport default reduxForm({\n  form: 'fieldLevelValidation' // a unique identifier for this form\n\n})(FieldLevelValidationForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"FieldLevelValidationForm\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/forms/form-validation/FieldLevelValidationForm.js"],"names":["React","Card","Button","Row","Col","Field","reduxForm","required","value","undefined","maxLength","max","length","maxLength15","minLength","min","minLength2","number","isNaN","Number","minValue","minValue13","email","test","tooYoung","aol","alphaNumeric","phoneNumber","renderField","input","label","type","meta","touched","error","warning","FieldLevelValidationForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, Button, Row, Col } from 'react-bootstrap';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst required = value => (value || typeof value === 'number' ? undefined : 'Required')\r\nconst maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\r\nconst maxLength15 = maxLength(15)\r\nexport const minLength = min => value =>\r\n  value && value.length < min ? `Must be ${min} characters or more` : undefined\r\nexport const minLength2 = minLength(2)\r\nconst number = value =>\r\n  value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\nconst minValue = min => value =>\r\n  value && value < min ? `Must be at least ${min}` : undefined\r\nconst minValue13 = minValue(13)\r\nconst email = value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n    ? 'Invalid email address'\r\n    : undefined\r\nconst tooYoung = value =>\r\n  value && value < 13\r\n    ? 'You do not meet the minimum age requirement!'\r\n    : undefined\r\nconst aol = value =>\r\n  value && /.+@aol\\.com/.test(value)\r\n    ? 'Really? You still use AOL for your email?'\r\n    : undefined\r\nconst alphaNumeric = value =>\r\n  value && /[^a-zA-Z0-9 ]/i.test(value)\r\n    ? 'Only alphanumeric characters'\r\n    : undefined\r\nexport const phoneNumber = value =>\r\n  value && !/^(0|[1-9][0-9]{9})$/i.test(value)\r\n    ? 'Invalid phone number, must be 10 digits'\r\n    : undefined\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { touched, error, warning }\r\n}) => (\r\n    <Row className='my-3'>\r\n    <Col sm={3}>\r\n        <label className='label-control'>{label}</label>\r\n    </Col>\r\n    <Col sm={9}>\r\n    <input {...input} placeholder={label} type={type} className='form-control' />\r\n    {touched &&\r\n        ((error && <span className='text-c-red'>* {error} </span>) ||\r\n        (warning && <span className='text-c-yellow'>{warning}</span>))}\r\n    </Col>\r\n</Row>\r\n)\r\n\r\nconst FieldLevelValidationForm = props => {\r\n  const { handleSubmit, pristine, reset, submitting } = props\r\n  return (\r\n    <Card>\r\n        <Card.Header>\r\n            <Card.Title as='h5'>Field-Level Validation</Card.Title>\r\n        </Card.Header>\r\n        <Card.Body>\r\n            <form onSubmit={handleSubmit}>\r\n                <Field\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    component={renderField}\r\n                    label=\"Username\"\r\n                    validate={[required, maxLength15, minLength2]}\r\n                    warn={alphaNumeric}\r\n                />\r\n                <Field\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    component={renderField}\r\n                    label=\"Email\"\r\n                    validate={email}\r\n                    warn={aol}\r\n                />\r\n                <Field\r\n                    name=\"age\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Age\"\r\n                    validate={[required, number, minValue13]}\r\n                    warn={tooYoung}\r\n                />\r\n                <Field\r\n                    name=\"phone\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Phone number\"\r\n                    validate={[required, phoneNumber]}\r\n                />\r\n            </form>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n        <Button variant='danger' type=\"button\" className='float-right' disabled={pristine || submitting} onClick={reset}>Clear Values</Button>\r\n            <Button type=\"submit\" className='mr-1 float-right' disabled={submitting}>Submit</Button>\r\n        </Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'fieldLevelValidation' // a unique identifier for this form\r\n})(FieldLevelValidationForm)"]},"metadata":{},"sourceType":"module"}