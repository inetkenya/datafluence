{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/ui-elements/basic/BasicGridSystem.js\";\nimport React from \"react\";\nimport { Row, Col, Card, Container, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\nimport Prism from '../../../components/Prism';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicGridSystem = () => {\n  const basicCode = `<Container>\n    <Row>\n        <Col sm> One of three columns </Col>\n        <Col sm> One of three columns </Col>\n        <Col sm> One of three columns </Col>\n    </Row>\n</Container>`;\n  const autoLayoutEqualWidth = `<Container>\n    <Row>\n        <Col>1 of 2</Col>\n        <Col>2 of 2</Col>\n    </Row>\n    <Row>\n        <Col>1 of 3</Col>\n        <Col>2 of 3</Col>\n        <Col>3 of 3</Col>\n    </Row>\n</Container>`;\n  const autoLayoutMultiLine = `<Container>\n    <Row>\n        <Col>Column</Col>\n        <Col>Column</Col>\n        <div className=\"w-100\" />\n        <Col>Column</Col>\n        <Col>Column</Col>\n    </Row>\n</Container>`;\n  const autoLayoutFixedOneColumn = `<Container>\n    <Row>\n        <Col>1 of 3</Col>\n        <Col xs={6}>2 of 3 (wider)</Col>\n        <Col>3 of 3</Col>\n    </Row>\n    <Row>\n        <Col>1 of 3</Col>\n        <Col xs={5}>2 of 3 (wider)</Col>\n        <Col>3 of 3</Col>\n    </Row>\n</Container>`;\n  const autoLayoutVariableWidth = `<Container>\n    <Row className=\"justify-content-md-center\">\n        <Col xs lg=\"2\">\n            1 of 3\n        </Col>\n        <Col md=\"auto\">Variable width content</Col>\n        <Col xs lg=\"2\">\n            3 of 3\n        </Col>\n    </Row>\n    <Row>\n        <Col>1 of 3</Col>\n        <Col md=\"auto\">Variable width content</Col>\n        <Col xs lg=\"2\">\n            3 of 3\n        </Col>\n    </Row>\n</Container>`;\n  const responsiveBasic = `<Container>\n    <Row>\n        <Col>col</Col>\n        <Col>col</Col>\n        <Col>col</Col>\n        <Col>col</Col>\n    </Row>\n    <Row>\n        <Col xs={8}>xs=8</Col>\n        <Col xs={4}>xs=4</Col>\n    </Row>\n</Container>`;\n  const responsiveStacked = `<Container>\n    <Row>\n        <Col sm={8}>sm=8</Col>\n        <Col sm={4}>sm=4</Col>\n    </Row>\n    <Row>\n        <Col sm>sm=true</Col>\n        <Col sm>sm=true</Col>\n        <Col sm>sm=true</Col>\n    </Row>\n</Container>`;\n  const responsiveMixMatch = `<Container>\n    <Row>\n        <Col xs={12} md={8}>\n            xs=12 md=8\n        </Col>\n        <Col xs={6} md={4}>\n            xl=6 md=4\n        </Col>\n    </Row>\n    <Row>\n        <Col xs={6} md={4}>\n            xs=6 md=4\n        </Col>\n        <Col xs={6} md={4}>\n            xs=6 md=4\n        </Col>\n        <Col xs={6} md={4}>\n            xs=6 md=4\n        </Col>\n    </Row>\n    <Row>\n        <Col xs={6}>xs=6</Col>\n        <Col xs={6}>xs=6</Col>\n    </Row>\n</Container>`;\n  const reOrdering = `<Container>\n    <Row>\n        <Col xs>First, but unordered</Col>\n        <Col xs={{ order: 12 }}>Second, but last</Col>\n        <Col xs={{ order: 1 }}>Third, but second</Col>\n    </Row>\n</Container>`;\n  const columnOffset = `<Container>\n    <Row>\n        <Col md={4}>md=4</Col>\n        <Col md={{ span: 4, offset: 4 }}>{\\`md={{ span: 4, offset: 4 }}\\`}</Col>\n    </Row>\n    <Row>\n        <Col md={{ span: 3, offset: 3 }}>{\\`md={{ span: 3, offset: 3 }}\\`}</Col>\n        <Col md={{ span: 3, offset: 3 }}>{\\`md={{ span: 3, offset: 3 }}\\`}</Col>\n    </Row>\n    <Row>\n        <Col md={{ span: 6, offset: 3 }}>{\\`md={{ span: 6, offset: 3 }}\\`}</Col>\n    </Row>\n</Container>`;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(ModuleNotification, {\n          message: \"For more info please check the components's official documentation\",\n          link: \"https://react-bootstrap.netlify.app/layout/grid/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Grid System\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Use our powerful mobile-first flexbox grid to build layouts of all shapes and sizes thanks to a twelve column system, five default responsive tiers, Sass variables and mixins, and dozens of predefined classes.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"How it works\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Bootstrap\\u2019s grid system uses a series of containers, rows, and columns to layout and align content. It\\u2019s built with \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox\",\n                rel: \"noopener noreferrer\",\n                target: \"_blank\",\n                children: \"flexbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 153\n              }, this), \" and is fully responsive. Below is an example and an in-depth look at how the grid comes together.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"New to or unfamiliar with flexbox? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://css-tricks.com/snippets/css/a-guide-to-flexbox/#flexbox-background\",\n                rel: \"noopener noreferrer\",\n                target: \"_blank\",\n                children: \" Read this CSS Tricks flexbox guide for\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 72\n              }, this), \" background, terminology, guidelines, and code snippets.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bd-example-row\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: true,\n                    children: \" One of three columns \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: true,\n                    children: \" One of three columns \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: true,\n                    children: \" One of three columns \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Prism, {\n                code: basicCode,\n                language: \"html\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"The above example creates three equal-width columns on small, medium, large, and extra large devices using our predefined grid classes. Those columns are centered in the page with the parent \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"Container\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 228\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Grid Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"While Bootstrap uses \", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: \"highlighter-rouge\",\n                children: \"em\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 65\n              }, this), \"s or \", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: \"highlighter-rouge\",\n                children: \"rem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 115\n              }, this), \"s for defining most sizes, \", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: \"highlighter-rouge\",\n                children: \"px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 188\n              }, this), \"s are used for grid breakpoints and container widths. This is because the viewport width is in pixels and does not change with the \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://drafts.csswg.org/mediaqueries-3/#units\",\n                rel: \"noopener noreferrer\",\n                target: \"_blank\",\n                children: \"font size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 364\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"See how aspects of the Bootstrap grid system work across multiple devices with a handy table.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              bordered: true,\n              striped: true,\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-center\",\n                    children: [\"Extra small\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"<576px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-center\",\n                    children: [\"Small\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"\\u2265576px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-center\",\n                    children: [\"Medium\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"\\u2265768px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-center\",\n                    children: [\"Large\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"\\u2265992px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-center\",\n                    children: [\"Extra large\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"\\u22651200px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-nowrap\",\n                    scope: \"row\",\n                    children: \"Max container width\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"None (auto)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"540px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"720px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"960px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"1140px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-nowrap\",\n                    scope: \"row\",\n                    children: \"Component/props\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"Col\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"md\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"lg\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"xl\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-nowrap\",\n                    scope: \"row\",\n                    children: \"# of columns\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    children: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-nowrap\",\n                    scope: \"row\",\n                    children: \"Gutter width\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    children: \"30px (15px on each side of a column)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-nowrap\",\n                    scope: \"row\",\n                    children: \"Nestable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    children: \"Yes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-nowrap\",\n                    scope: \"row\",\n                    children: \"Column ordering\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    children: \"Yes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Auto-layout Columns\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Utilize breakpoint-specific column classes for easy column sizing without an explicit numbered class like \", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: \"highlighter-rouge\",\n                children: \".col-sm-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 150\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Equal-width\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"For example, here are two grid layouts that apply to every device and viewport, from \", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: \"highlighter-rouge\",\n                children: \"xs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 129\n              }, this), \" to \", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: \"highlighter-rouge\",\n                children: \"xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 178\n              }, this), \". Add any number of unit-less classes for each breakpoint you need and every column will be the same width.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bd-example-row\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"1 of 2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: \"2 of 2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"1 of 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: \"2 of 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: \"3 of 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Prism, {\n                code: autoLayoutEqualWidth,\n                language: \"html\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mt-1\",\n              children: \"Equal-width Multi-row\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Equal-width columns can be broken into multiple lines, but there was a \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://github.com/philipwalton/flexbugs#flexbug-11\",\n                rel: \"noopener noreferrer\",\n                target: \"_blank\",\n                children: \"Safari flexbox bug\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 115\n              }, this), \" that prevented this from working without an explicit \", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: \"highlighter-rouge\",\n                children: \"flex-basis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 295\n              }, this), \" or \", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: \"highlighter-rouge\",\n                children: \"border\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 352\n              }, this), \". There are workarounds for older browser versions, but they shouldn\\u2019t be necessary if you\\u2019re up-to-date.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Create equal-width columns that span multiple rows by inserting a \", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: \"highlighter-rouge\",\n                children: \".w-100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 110\n              }, this), \" where you want the columns to break to a new line. Make the breaks responsive by mixing the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: \"hlighter-rouge\",\n                children: \".w-100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 252\n              }, this), \" with some \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\\\"\",\n                children: \"responsive display utilities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 309\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bd-example-row\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-100\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Prism, {\n                code: autoLayoutMultiLine,\n                language: \"html\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mt-1\",\n              children: \"Setting one column width\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Auto-layout for flexbox grid columns also means you can set the width of one column and have the sibling columns automatically resize around it. You may use predefined grid classes (as shown below), grid mixins, or inline widths. Note that the other columns will resize no matter the width of the center column.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bd-example-row\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"1 of 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 6,\n                    children: \"2 of 3 (wider)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: \"3 of 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"1 of 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 5,\n                    children: \"2 of 3 (wider)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: \"3 of 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Prism, {\n                code: autoLayoutFixedOneColumn,\n                language: \"html\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mt-1\",\n              children: \"Variable width content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Set the column value (for any breakpoint size) to \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"\\\"auto\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 94\n              }, this), \" to size columns based on the natural width of their content.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bd-example-row\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  className: \"justify-content-md-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xs: true,\n                    lg: \"2\",\n                    children: \"1 of 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"auto\",\n                    children: \"Variable width content\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: true,\n                    lg: \"2\",\n                    children: \"3 of 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"1 of 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"auto\",\n                    children: \"Variable width content\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: true,\n                    lg: \"2\",\n                    children: \"3 of 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Prism, {\n                code: autoLayoutVariableWidth,\n                language: \"html\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Responsive Grid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Bootstrap\\u2019s grid includes five tiers of predefined classes for building complex responsive layouts. Customize the size of your columns on extra small, small, medium, large, or extra large devices however you see fit.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mt-1\",\n              children: \"All breakpoints\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"Col\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 48\n              }, this), \" lets you specify column widths across 5 breakpoint sizes (xs, sm, md, large, and xl).\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bd-example-row\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"col\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: \"col\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: \"col\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: \"col\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xs: 8,\n                    children: \"xs=8\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 4,\n                    children: \"xs=4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Prism, {\n                code: responsiveBasic,\n                language: \"html\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mt-1\",\n              children: \"Stacked to horizontal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"For every breakpoint, you can specify the amount of columns to span, or set the prop to \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"Col with lg=true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 132\n              }, this), \" for auto layout widths.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bd-example-row\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: 8,\n                    children: \"sm=8\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 4,\n                    children: \"sm=4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: true,\n                    children: \"sm=true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: true,\n                    children: \"sm=true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: true,\n                    children: \"sm=true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Prism, {\n                code: responsiveStacked,\n                language: \"html\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mt-1\",\n              children: \"Mix and match\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"You can also mix and match breakpoints to create different grids depending on the screen size.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bd-example-row\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xs: 12,\n                    md: 8,\n                    children: \"xs=12 md=8\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 6,\n                    md: 4,\n                    children: \"xl=6 md=4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xs: 6,\n                    md: 4,\n                    children: \"xs=6 md=4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 6,\n                    md: 4,\n                    children: \"xs=6 md=4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 6,\n                    md: 4,\n                    children: \"xs=6 md=4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xs: 6,\n                    children: \"xs=6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 6,\n                    children: \"xs=6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Prism, {\n                code: responsiveMixMatch,\n                language: \"html\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Reordering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\" The \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"Col\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 49\n              }, this), \" breakpoint props also have a more complicated \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"object\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 112\n              }, this), \" prop form: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: `{span: number, order: number, offset: number}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 143\n              }, this), \" for specifying offsets and ordering affects. \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"You can use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"`order`\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 60\n              }, this), \" property to control the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"visual order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 105\n              }, this), \" of your content.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bd-example-row\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xs: true,\n                    children: \"First, but unordered\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: {\n                      order: 12\n                    },\n                    children: \"Second, but last\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: {\n                      order: 1\n                    },\n                    children: \"Third, but second\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Prism, {\n                code: reOrdering,\n                language: \"html\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Column Offset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"For offsetting grid columns you can set an \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"`offset`\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 87\n              }, this), \" value, or, for more general layout, use the margin class utilities.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bd-example-row\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: \"md=4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: {\n                      span: 4,\n                      offset: 4\n                    },\n                    children: `md={{ span: 4, offset: 4 }}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: {\n                      span: 3,\n                      offset: 3\n                    },\n                    children: `md={{ span: 3, offset: 3 }}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: {\n                      span: 3,\n                      offset: 3\n                    },\n                    children: `md={{ span: 3, offset: 3 }}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: {\n                      span: 6,\n                      offset: 3\n                    },\n                    children: `md={{ span: 6, offset: 3 }}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Prism, {\n                code: columnOffset,\n                language: \"html\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BasicGridSystem;\nexport default BasicGridSystem;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicGridSystem\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/ui-elements/basic/BasicGridSystem.js"],"names":["React","Row","Col","Card","Container","Table","Link","ModuleNotification","Prism","BasicGridSystem","basicCode","autoLayoutEqualWidth","autoLayoutMultiLine","autoLayoutFixedOneColumn","autoLayoutVariableWidth","responsiveBasic","responsiveStacked","responsiveMixMatch","reOrdering","columnOffset","order","span","offset"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,EAAoCC,KAApC,QAAiD,iBAAjD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,kBAAP,MAA+B,oDAA/B;AAEA,OAAOC,KAAP,MAAkB,2BAAlB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC1B,QAAMC,SAAS,GAClB;AACD;AACA;AACA;AACA;AACA;AACA,aAPI;AASA,QAAMC,oBAAoB,GAC7B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAXI;AAaA,QAAMC,mBAAmB,GAC5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aATI;AAWA,QAAMC,wBAAwB,GACjC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAZI;AAcA,QAAMC,uBAAuB,GAChC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAlBI;AAoBA,QAAMC,eAAe,GACxB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAZI;AAcA,QAAMC,iBAAiB,GAC1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAXI;AAaA,QAAMC,kBAAkB,GAC3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAzBI;AA2BA,QAAMC,UAAU,GACnB;AACD;AACA;AACA;AACA;AACA;AACA,aAPI;AASA,QAAMC,YAAY,GACrB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAbI;AAeA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA,+BACI,QAAC,kBAAD;AAAoB,UAAA,OAAO,EAAC,oEAA5B;AAAiG,UAAA,IAAI,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,GAAD;AAAA,6BACQ,QAAC,GAAD;AAAA,gCACI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,mCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI,QAAC,IAAD,CAAM,IAAN;AAAA,wKACwH;AAAG,gBAAA,IAAI,EAAC,oGAAR;AAA6G,gBAAA,GAAG,EAAC,qBAAjH;AAAuI,gBAAA,MAAM,EAAC,QAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADxH;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eASI,QAAC,IAAD,CAAM,IAAN;AAAA,6EACuC;AAAG,gBAAA,IAAI,EAAC,4EAAR;AAAqF,gBAAA,GAAG,EAAC,qBAAzF;AAA+G,gBAAA,MAAM,EAAC,QAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADvC;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAYI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI,QAAC,SAAD;AAAA,uCACI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAK,oBAAA,EAAE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAK,oBAAA,EAAE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,GAAD;AAAK,oBAAA,EAAE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAET,SAAb;AAAwB,gBAAA,QAAQ,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAsBI,QAAC,IAAD,CAAM,IAAN;AAAA,yOACmM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADnM;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAgCI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,mCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,IAAN;AAAA,+DAAgC;AAAM,gBAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAhC,wBAAkF;AAAM,gBAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAlF,8CAA2J;AAAM,gBAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA3J,sJAA2U;AAAG,gBAAA,IAAI,EAAC,gDAAR;AAAyD,gBAAA,GAAG,EAAC,qBAA7D;AAAoF,gBAAA,MAAM,EAAC,QAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA3U;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,KAAD;AAAO,cAAA,QAAQ,MAAf;AAAgB,cAAA,OAAO,MAAvB;AAAwB,cAAA,UAAU,MAAlC;AAAA,sCACI;AAAA,uCACA;AAAA,0CACI;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAI,oBAAA,SAAS,EAAC,aAAd;AAAA,2DAEI;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAOI;AAAI,oBAAA,SAAS,EAAC,aAAd;AAAA,qDAEI;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPJ,eAYI;AAAI,oBAAA,SAAS,EAAC,aAAd;AAAA,sDAEI;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAZJ,eAiBI;AAAI,oBAAA,SAAS,EAAC,aAAd;AAAA,qDAEI;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjBJ,eAsBI;AAAI,oBAAA,SAAS,EAAC,aAAd;AAAA,2DAEI;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBADJ,eA+BI;AAAA,wCACA;AAAA,0CACI;AAAI,oBAAA,SAAS,EAAC,aAAd;AAA4B,oBAAA,KAAK,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eASA;AAAA,0CACI;AAAI,oBAAA,SAAS,EAAC,aAAd;AAA4B,oBAAA,KAAK,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA,2CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAA,2CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII;AAAA,2CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAKI;AAAA,2CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,0BALJ,eAMI;AAAA,2CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,0BANJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBATA,eAiBA;AAAA,0CACI;AAAI,oBAAA,SAAS,EAAC,aAAd;AAA4B,oBAAA,KAAK,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAI,oBAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBA,eAqBA;AAAA,0CACI;AAAI,oBAAA,SAAS,EAAC,aAAd;AAA4B,oBAAA,KAAK,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAI,oBAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBArBA,eAyBA;AAAA,0CACI;AAAI,oBAAA,SAAS,EAAC,aAAd;AAA4B,oBAAA,KAAK,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAI,oBAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzBA,eA6BA;AAAA,0CACI;AAAI,oBAAA,SAAS,EAAC,aAAd;AAA4B,oBAAA,KAAK,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAI,oBAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBA7BA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCJ,eA2GI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,mCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,IAAN;AAAA,oJAAqH;AAAM,gBAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAArH;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,+HAAgG;AAAM,gBAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAhG,uBAAiJ;AAAM,gBAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAjJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI,QAAC,SAAD;AAAA,wCACI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAYI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEC,oBAAb;AAAmC,gBAAA,QAAQ,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,sBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAmBI;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBJ,eAoBI;AAAA;AAAA;AAAA;AAAA,oBApBJ,eAqBI,QAAC,IAAD,CAAM,IAAN;AAAA,iHAAkF;AAAG,gBAAA,IAAI,EAAC,qDAAR;AAA8D,gBAAA,GAAG,EAAC,qBAAlE;AAAwF,gBAAA,MAAM,EAAC,QAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAlF,yEAAsQ;AAAM,gBAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAtQ,uBAA+T;AAAM,gBAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA/T;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBJ,eAsBI,QAAC,IAAD,CAAM,IAAN;AAAA,4GAA6E;AAAM,gBAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA7E,gHAA2N;AAAM,gBAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA3N,8BAAoR,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAApR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBJ,eAwBI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI,QAAC,SAAD;AAAA,uCACI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAK,oBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAKI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAUI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEC,mBAAb;AAAkC,gBAAA,QAAQ,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,sBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBJ,eAoCI;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApCJ,eAqCI;AAAA;AAAA;AAAA;AAAA,oBArCJ,eAsCI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtCJ,eAuCI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI,QAAC,SAAD;AAAA,wCACI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAMI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAaI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEC,wBAAb;AAAuC,gBAAA,QAAQ,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,sBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvCJ,eAsDI;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtDJ,eAuDI;AAAA;AAAA;AAAA;AAAA,oBAvDJ,eAwDI,QAAC,IAAD,CAAM,IAAN;AAAA,4FAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxDJ,eAyDI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI,QAAC,SAAD;AAAA,wCACI,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,2BAAf;AAAA,0CACI,QAAC,GAAD;AAAK,oBAAA,EAAE,MAAP;AAAQ,oBAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAKI,QAAC,GAAD;AAAK,oBAAA,EAAE,MAAP;AAAQ,oBAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAUI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,GAAD;AAAK,oBAAA,EAAE,MAAP;AAAQ,oBAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAmBI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEC,uBAAb;AAAsC,gBAAA,QAAQ,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,sBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzDJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3GJ,eA+LI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,mCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,8CAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI,QAAC,SAAD;AAAA,wCACI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAaI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEC,eAAb;AAA8B,gBAAA,QAAQ,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,sBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAoBI;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBJ,eAqBI;AAAA;AAAA;AAAA;AAAA,oBArBJ,eAsBI,QAAC,IAAD,CAAM,IAAN;AAAA,kIAAmG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAnG;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBJ,eAuBI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI,QAAC,SAAD;AAAA,wCACI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAK,oBAAA,EAAE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAK,oBAAA,EAAE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,GAAD;AAAK,oBAAA,EAAE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAYI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEC,iBAAb;AAAgC,gBAAA,QAAQ,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,sBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvBJ,eAqCI;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArCJ,eAsCI;AAAA;AAAA;AAAA;AAAA,oBAtCJ,eAuCI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvCJ,eAwCI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI,QAAC,SAAD;AAAA,wCACI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,EAAT;AAAa,oBAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAY,oBAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eASI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAY,oBAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAY,oBAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAOI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAY,oBAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,eAoBI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eA0BI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEC,kBAAb;AAAiC,gBAAA,QAAQ,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,sBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxCJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/LJ,eAyQI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,mCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,IAAN;AAAA,+CAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAhB,kEAA+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA/E,+BAA8G;AAAA,0BAAQ;AAAR;AAAA;AAAA;AAAA;AAAA,sBAA9G;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,0DAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA3B,4CAAwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI,QAAC,SAAD;AAAA,uCACI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAK,oBAAA,EAAE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE;AAAEG,sBAAAA,KAAK,EAAE;AAAT,qBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE;AAAEA,sBAAAA,KAAK,EAAE;AAAT,qBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEF,UAAb;AAAyB,gBAAA,QAAQ,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzQJ,eA4RI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,mCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,IAAN;AAAA,qFAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI,QAAC,SAAD;AAAA,wCACI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE;AAAEG,sBAAAA,IAAI,EAAE,CAAR;AAAWC,sBAAAA,MAAM,EAAE;AAAnB,qBAAT;AAAA,8BAAmC;AAAnC;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE;AAAED,sBAAAA,IAAI,EAAE,CAAR;AAAWC,sBAAAA,MAAM,EAAE;AAAnB,qBAAT;AAAA,8BAAmC;AAAnC;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE;AAAED,sBAAAA,IAAI,EAAE,CAAR;AAAWC,sBAAAA,MAAM,EAAE;AAAnB,qBAAT;AAAA,8BAAmC;AAAnC;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eASI,QAAC,GAAD;AAAA,yCACI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE;AAAED,sBAAAA,IAAI,EAAE,CAAR;AAAWC,sBAAAA,MAAM,EAAE;AAAnB,qBAAT;AAAA,8BAAmC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAcI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEH,YAAb;AAA2B,gBAAA,QAAQ,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,sBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5RJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgUH,CAldD;;KAAMV,e;AAodN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Card, Container, Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\n\r\nimport Prism from '../../../components/Prism';\r\n\r\nconst BasicGridSystem = () => {\r\n    const basicCode = (\r\n`<Container>\r\n    <Row>\r\n        <Col sm> One of three columns </Col>\r\n        <Col sm> One of three columns </Col>\r\n        <Col sm> One of three columns </Col>\r\n    </Row>\r\n</Container>`);\r\n        \r\n    const autoLayoutEqualWidth = (\r\n`<Container>\r\n    <Row>\r\n        <Col>1 of 2</Col>\r\n        <Col>2 of 2</Col>\r\n    </Row>\r\n    <Row>\r\n        <Col>1 of 3</Col>\r\n        <Col>2 of 3</Col>\r\n        <Col>3 of 3</Col>\r\n    </Row>\r\n</Container>`);\r\n        \r\n    const autoLayoutMultiLine = (\r\n`<Container>\r\n    <Row>\r\n        <Col>Column</Col>\r\n        <Col>Column</Col>\r\n        <div className=\"w-100\" />\r\n        <Col>Column</Col>\r\n        <Col>Column</Col>\r\n    </Row>\r\n</Container>`);\r\n        \r\n    const autoLayoutFixedOneColumn = (\r\n`<Container>\r\n    <Row>\r\n        <Col>1 of 3</Col>\r\n        <Col xs={6}>2 of 3 (wider)</Col>\r\n        <Col>3 of 3</Col>\r\n    </Row>\r\n    <Row>\r\n        <Col>1 of 3</Col>\r\n        <Col xs={5}>2 of 3 (wider)</Col>\r\n        <Col>3 of 3</Col>\r\n    </Row>\r\n</Container>`);\r\n        \r\n    const autoLayoutVariableWidth = (\r\n`<Container>\r\n    <Row className=\"justify-content-md-center\">\r\n        <Col xs lg=\"2\">\r\n            1 of 3\r\n        </Col>\r\n        <Col md=\"auto\">Variable width content</Col>\r\n        <Col xs lg=\"2\">\r\n            3 of 3\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col>1 of 3</Col>\r\n        <Col md=\"auto\">Variable width content</Col>\r\n        <Col xs lg=\"2\">\r\n            3 of 3\r\n        </Col>\r\n    </Row>\r\n</Container>`);\r\n        \r\n    const responsiveBasic = (\r\n`<Container>\r\n    <Row>\r\n        <Col>col</Col>\r\n        <Col>col</Col>\r\n        <Col>col</Col>\r\n        <Col>col</Col>\r\n    </Row>\r\n    <Row>\r\n        <Col xs={8}>xs=8</Col>\r\n        <Col xs={4}>xs=4</Col>\r\n    </Row>\r\n</Container>`);\r\n        \r\n    const responsiveStacked = (\r\n`<Container>\r\n    <Row>\r\n        <Col sm={8}>sm=8</Col>\r\n        <Col sm={4}>sm=4</Col>\r\n    </Row>\r\n    <Row>\r\n        <Col sm>sm=true</Col>\r\n        <Col sm>sm=true</Col>\r\n        <Col sm>sm=true</Col>\r\n    </Row>\r\n</Container>`);\r\n        \r\n    const responsiveMixMatch = (\r\n`<Container>\r\n    <Row>\r\n        <Col xs={12} md={8}>\r\n            xs=12 md=8\r\n        </Col>\r\n        <Col xs={6} md={4}>\r\n            xl=6 md=4\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col xs={6} md={4}>\r\n            xs=6 md=4\r\n        </Col>\r\n        <Col xs={6} md={4}>\r\n            xs=6 md=4\r\n        </Col>\r\n        <Col xs={6} md={4}>\r\n            xs=6 md=4\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col xs={6}>xs=6</Col>\r\n        <Col xs={6}>xs=6</Col>\r\n    </Row>\r\n</Container>`);\r\n        \r\n    const reOrdering = (\r\n`<Container>\r\n    <Row>\r\n        <Col xs>First, but unordered</Col>\r\n        <Col xs={{ order: 12 }}>Second, but last</Col>\r\n        <Col xs={{ order: 1 }}>Third, but second</Col>\r\n    </Row>\r\n</Container>`);\r\n        \r\n    const columnOffset = (\r\n`<Container>\r\n    <Row>\r\n        <Col md={4}>md=4</Col>\r\n        <Col md={{ span: 4, offset: 4 }}>{\\`md={{ span: 4, offset: 4 }}\\`}</Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={{ span: 3, offset: 3 }}>{\\`md={{ span: 3, offset: 3 }}\\`}</Col>\r\n        <Col md={{ span: 3, offset: 3 }}>{\\`md={{ span: 3, offset: 3 }}\\`}</Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={{ span: 6, offset: 3 }}>{\\`md={{ span: 6, offset: 3 }}\\`}</Col>\r\n    </Row>\r\n</Container>`);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://react-bootstrap.netlify.app/layout/grid/' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Grid System</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    Use our powerful mobile-first flexbox grid to build layouts of all shapes and sizes thanks to a twelve column system, five default responsive tiers, Sass variables and mixins, and dozens of predefined classes.\r\n                                </Card.Text>\r\n                                <h5>How it works</h5>\r\n                                <hr/>\r\n                                <Card.Text>\r\n                                    Bootstrap’s grid system uses a series of containers, rows, and columns to layout and align content. It’s built with <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox\" rel=\"noopener noreferrer\" target=\"_blank\">flexbox</a> and is fully responsive. Below is an example and an in-depth look at how the grid comes together.\r\n                                </Card.Text>\r\n                                <Card.Text>\r\n                                    New to or unfamiliar with flexbox? <a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/#flexbox-background\" rel=\"noopener noreferrer\" target=\"_blank\"> Read this CSS Tricks flexbox guide for</a> background, terminology, guidelines, and code snippets.\r\n                                </Card.Text>\r\n                                <div className=\"bd-example-row\">\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col sm> One of three columns </Col>\r\n                                            <Col sm> One of three columns </Col>\r\n                                            <Col sm> One of three columns </Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                    <Prism code={basicCode} language=\"html\" />\r\n                                </div>\r\n                                <Card.Text>\r\n                                    The above example creates three equal-width columns on small, medium, large, and extra large devices using our predefined grid classes. Those columns are centered in the page with the parent <code>Container</code>.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Grid Options</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text>While Bootstrap uses <code className=\"highlighter-rouge\">em</code>s or <code className=\"highlighter-rouge\">rem</code>s for defining most sizes, <code className=\"highlighter-rouge\">px</code>s are used for grid breakpoints and container widths. This is because the viewport width is in pixels and does not change with the <a href=\"https://drafts.csswg.org/mediaqueries-3/#units\" rel=\"noopener noreferrer\"  target=\"_blank\">font size</a>.</Card.Text>\r\n                                <Card.Text>See how aspects of the Bootstrap grid system work across multiple devices with a handy table.</Card.Text>\r\n                                <Table bordered striped responsive>\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th />\r\n                                        <th className=\"text-center\">\r\n                                            Extra small\r\n                                            <br />\r\n                                            <small>&lt;576px</small>\r\n                                        </th>\r\n                                        <th className=\"text-center\">\r\n                                            Small\r\n                                            <br />\r\n                                            <small>&ge;576px</small>\r\n                                        </th>\r\n                                        <th className=\"text-center\">\r\n                                            Medium\r\n                                            <br />\r\n                                            <small>&ge;768px</small>\r\n                                        </th>\r\n                                        <th className=\"text-center\">\r\n                                            Large\r\n                                            <br />\r\n                                            <small>&ge;992px</small>\r\n                                        </th>\r\n                                        <th className=\"text-center\">\r\n                                            Extra large\r\n                                            <br />\r\n                                            <small>&ge;1200px</small>\r\n                                        </th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <th className=\"text-nowrap\" scope=\"row\">Max container width</th>\r\n                                        <td>None (auto)</td>\r\n                                        <td>540px</td>\r\n                                        <td>720px</td>\r\n                                        <td>960px</td>\r\n                                        <td>1140px</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"text-nowrap\" scope=\"row\">Component/props</th>\r\n                                        <td><code>Col</code></td>\r\n                                        <td><code>sm</code></td>\r\n                                        <td><code>md</code></td>\r\n                                        <td><code>lg</code></td>\r\n                                        <td><code>xl</code></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"text-nowrap\" scope=\"row\"># of columns</th>\r\n                                        <td colSpan=\"5\">12</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"text-nowrap\" scope=\"row\">Gutter width</th>\r\n                                        <td colSpan=\"5\">30px (15px on each side of a column)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"text-nowrap\" scope=\"row\">Nestable</th>\r\n                                        <td colSpan=\"5\">Yes</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"text-nowrap\" scope=\"row\">Column ordering</th>\r\n                                        <td colSpan=\"5\">Yes</td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as='h5'>Auto-layout Columns</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text>Utilize breakpoint-specific column classes for easy column sizing without an explicit numbered class like <code className=\"highlighter-rouge\">.col-sm-6</code>.</Card.Text>\r\n                                <h5>Equal-width</h5>\r\n                                <hr/>\r\n                                <Card.Text>For example, here are two grid layouts that apply to every device and viewport, from <code className=\"highlighter-rouge\">xs</code> to <code className=\"highlighter-rouge\">xl</code>. Add any number of unit-less classes for each breakpoint you need and every column will be the same width.</Card.Text>\r\n                                <div className=\"bd-example-row\">\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col>1 of 2</Col>\r\n                                            <Col>2 of 2</Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>1 of 3</Col>\r\n                                            <Col>2 of 3</Col>\r\n                                            <Col>3 of 3</Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                    <Prism code={autoLayoutEqualWidth} language=\"html\"/>\r\n                                </div>\r\n                                <h5 className=\"mt-1\">Equal-width Multi-row</h5>\r\n                                <hr/>\r\n                                <Card.Text>Equal-width columns can be broken into multiple lines, but there was a <a href=\"https://github.com/philipwalton/flexbugs#flexbug-11\" rel=\"noopener noreferrer\" target=\"_blank\">Safari flexbox bug</a> that prevented this from working without an explicit <code className=\"highlighter-rouge\">flex-basis</code> or <code className=\"highlighter-rouge\">border</code>. There are workarounds for older browser versions, but they shouldn’t be necessary if you’re up-to-date.</Card.Text>\r\n                                <Card.Text>Create equal-width columns that span multiple rows by inserting a <code className=\"highlighter-rouge\">.w-100</code> where you want the columns to break to a new line. Make the breaks responsive by mixing the <code className=\"hlighter-rouge\">.w-100</code> with some <Link to='#\"'>responsive display utilities</Link>.</Card.Text>\r\n\r\n                                <div className=\"bd-example-row\">\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col>Column</Col>\r\n                                            <Col>Column</Col>\r\n                                            <div className=\"w-100\" />\r\n                                            <Col>Column</Col>\r\n                                            <Col>Column</Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                    <Prism code={autoLayoutMultiLine} language=\"html\"/>\r\n                                </div>\r\n                                <h5 className=\"mt-1\">Setting one column width</h5>\r\n                                <hr/>\r\n                                <Card.Text>Auto-layout for flexbox grid columns also means you can set the width of one column and have the sibling columns automatically resize around it. You may use predefined grid classes (as shown below), grid mixins, or inline widths. Note that the other columns will resize no matter the width of the center column.</Card.Text>\r\n                                <div className=\"bd-example-row\">\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col>1 of 3</Col>\r\n                                            <Col xs={6}>2 of 3 (wider)</Col>\r\n                                            <Col>3 of 3</Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>1 of 3</Col>\r\n                                            <Col xs={5}>2 of 3 (wider)</Col>\r\n                                            <Col>3 of 3</Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                    <Prism code={autoLayoutFixedOneColumn} language=\"html\"/>\r\n                                </div>\r\n                                <h5 className=\"mt-1\">Variable width content</h5>\r\n                                <hr/>\r\n                                <Card.Text>Set the column value (for any breakpoint size) to <code>\"auto\"</code> to size columns based on the natural width of their content.</Card.Text>\r\n                                <div className=\"bd-example-row\">\r\n                                    <Container>\r\n                                        <Row className=\"justify-content-md-center\">\r\n                                            <Col xs lg=\"2\">\r\n                                                1 of 3\r\n                                            </Col>\r\n                                            <Col md=\"auto\">Variable width content</Col>\r\n                                            <Col xs lg=\"2\">\r\n                                                3 of 3\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>1 of 3</Col>\r\n                                            <Col md=\"auto\">Variable width content</Col>\r\n                                            <Col xs lg=\"2\">\r\n                                                3 of 3\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                    <Prism code={autoLayoutVariableWidth} language=\"html\"/>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Responsive Grid</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text>Bootstrap’s grid includes five tiers of predefined classes for building complex responsive layouts. Customize the size of your columns on extra small, small, medium, large, or extra large devices however you see fit.</Card.Text>\r\n                                <h5 className=\"mt-1\">All breakpoints</h5>\r\n                                <hr/>\r\n                                <Card.Text>The <code>Col</code> lets you specify column widths across 5 breakpoint sizes (xs, sm, md, large, and xl).</Card.Text>\r\n                                <div className=\"bd-example-row\">\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col>col</Col>\r\n                                            <Col>col</Col>\r\n                                            <Col>col</Col>\r\n                                            <Col>col</Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={8}>xs=8</Col>\r\n                                            <Col xs={4}>xs=4</Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                    <Prism code={responsiveBasic} language=\"html\"/>\r\n                                </div>\r\n                                <h5 className=\"mt-1\">Stacked to horizontal</h5>\r\n                                <hr/>\r\n                                <Card.Text>For every breakpoint, you can specify the amount of columns to span, or set the prop to <code>Col with lg=true</code> for auto layout widths.</Card.Text>\r\n                                <div className=\"bd-example-row\">\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col sm={8}>sm=8</Col>\r\n                                            <Col sm={4}>sm=4</Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col sm>sm=true</Col>\r\n                                            <Col sm>sm=true</Col>\r\n                                            <Col sm>sm=true</Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                    <Prism code={responsiveStacked} language=\"html\"/>\r\n                                </div>\r\n                                <h5 className=\"mt-1\">Mix and match</h5>\r\n                                <hr/>\r\n                                <Card.Text>You can also mix and match breakpoints to create different grids depending on the screen size.</Card.Text>\r\n                                <div className=\"bd-example-row\">\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col xs={12} md={8}>\r\n                                                xs=12 md=8\r\n                                            </Col>\r\n                                            <Col xs={6} md={4}>\r\n                                                xl=6 md=4\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={6} md={4}>\r\n                                                xs=6 md=4\r\n                                            </Col>\r\n                                            <Col xs={6} md={4}>\r\n                                                xs=6 md=4\r\n                                            </Col>\r\n                                            <Col xs={6} md={4}>\r\n                                                xs=6 md=4\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={6}>xs=6</Col>\r\n                                            <Col xs={6}>xs=6</Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                    <Prism code={responsiveMixMatch} language=\"html\"/>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Reordering</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text> The <code>Col</code> breakpoint props also have a more complicated <code>object</code> prop form: <code>{`{span: number, order: number, offset: number}`}</code> for specifying offsets and ordering affects. </Card.Text>\r\n                                <Card.Text>You can use the <code>`order`</code> property to control the <code>visual order</code> of your content.</Card.Text>\r\n                                <div className=\"bd-example-row\">\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col xs>First, but unordered</Col>\r\n                                            <Col xs={{ order: 12 }}>Second, but last</Col>\r\n                                            <Col xs={{ order: 1 }}>Third, but second</Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                    <Prism code={reOrdering} language=\"html\" />\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Column Offset</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text>For offsetting grid columns you can set an <code>`offset`</code> value, or, for more general layout, use the margin class utilities.</Card.Text>\r\n                                <div className=\"bd-example-row\">\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col md={4}>md=4</Col>\r\n                                            <Col md={{ span: 4, offset: 4 }}>{`md={{ span: 4, offset: 4 }}`}</Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col md={{ span: 3, offset: 3 }}>{`md={{ span: 3, offset: 3 }}`}</Col>\r\n                                            <Col md={{ span: 3, offset: 3 }}>{`md={{ span: 3, offset: 3 }}`}</Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col md={{ span: 6, offset: 3 }}>{`md={{ span: 6, offset: 3 }}`}</Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                    <Prism code={columnOffset} language=\"html\" />\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default BasicGridSystem;"]},"metadata":{},"sourceType":"module"}