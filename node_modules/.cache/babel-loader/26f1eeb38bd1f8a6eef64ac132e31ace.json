{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/layouts/AdminLayout/Configuration/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ConfigContext } from \"../../../../contexts/ConfigContext\";\nimport * as actionType from \"../../../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Layout = () => {\n  _s();\n\n  const configContext = useContext(ConfigContext);\n  const {\n    layoutType\n  } = configContext.state;\n  const {\n    dispatch\n  } = configContext;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Layouts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-color layout-type\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        onClick: () => dispatch({\n          type: actionType.LAYOUT_TYPE,\n          layoutType: 'menu-dark'\n        }),\n        title: \"Default Layout\",\n        className: layoutType === 'menu-dark' ? 'active' : '',\n        \"data-value\": \"menu-dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 213\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 220\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        onClick: () => dispatch({\n          type: actionType.LAYOUT_TYPE,\n          layoutType: 'menu-light'\n        }),\n        title: \"Light\",\n        className: layoutType === 'menu-light' ? 'active' : '',\n        \"data-value\": \"menu-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 207\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 214\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        onClick: () => dispatch({\n          type: actionType.LAYOUT_TYPE,\n          layoutType: 'dark'\n        }),\n        title: \"Dark\",\n        className: layoutType === 'dark' ? 'active' : '',\n        \"data-value\": \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 188\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 195\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        onClick: () => dispatch({\n          type: actionType.RESET\n        }),\n        title: \"Reset\",\n        className: layoutType === 'reset' ? 'active' : '',\n        \"data-value\": \"reset\",\n        children: \"Reset to Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Layout, \"JQTmjg8RsVQNAsUb0cg73MRocH8=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/layouts/AdminLayout/Configuration/Layout/index.js"],"names":["React","useContext","Link","ConfigContext","actionType","Layout","configContext","layoutType","state","dispatch","type","LAYOUT_TYPE","RESET"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,aAAT,QAA8B,oCAA9B;AACA,OAAO,KAAKC,UAAZ,MAA4B,2BAA5B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,aAAa,GAAGL,UAAU,CAACE,aAAD,CAAhC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAiBD,aAAa,CAACE,KAArC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeH,aAArB;AAEA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAACC,UAAAA,IAAI,EAAEN,UAAU,CAACO,WAAlB;AAA+BJ,UAAAA,UAAU,EAAE;AAA3C,SAAD,CAApC;AAA+F,QAAA,KAAK,EAAC,gBAArG;AAAsH,QAAA,SAAS,EAAEA,UAAU,KAAK,WAAf,GAA6B,QAA7B,GAAwC,EAAzK;AAA6K,sBAAW,WAAxL;AAAA,gCAAoM;AAAA;AAAA;AAAA;AAAA,gBAApM,eAA2M;AAAA;AAAA;AAAA;AAAA,gBAA3M;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,OAAO,EAAE,MAAME,QAAQ,CAAC;AAACC,UAAAA,IAAI,EAAEN,UAAU,CAACO,WAAlB;AAA+BJ,UAAAA,UAAU,EAAE;AAA3C,SAAD,CAApC;AAAgG,QAAA,KAAK,EAAC,OAAtG;AAA8G,QAAA,SAAS,EAAEA,UAAU,KAAK,YAAf,GAA8B,QAA9B,GAAyC,EAAlK;AAAsK,sBAAW,YAAjL;AAAA,gCAA8L;AAAA;AAAA;AAAA;AAAA,gBAA9L,eAAqM;AAAA;AAAA;AAAA;AAAA,gBAArM;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,OAAO,EAAE,MAAME,QAAQ,CAAC;AAACC,UAAAA,IAAI,EAAEN,UAAU,CAACO,WAAlB;AAA+BJ,UAAAA,UAAU,EAAE;AAA3C,SAAD,CAApC;AAA0F,QAAA,KAAK,EAAC,MAAhG;AAAuG,QAAA,SAAS,EAAEA,UAAU,KAAK,MAAf,GAAwB,QAAxB,GAAmC,EAArJ;AAAyJ,sBAAW,MAApK;AAAA,gCAA2K;AAAA;AAAA;AAAA;AAAA,gBAA3K,eAAkL;AAAA;AAAA;AAAA;AAAA,gBAAlL;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,OAAO,EAAE,MAAME,QAAQ,CAAC;AAACC,UAAAA,IAAI,EAAEN,UAAU,CAACQ;AAAlB,SAAD,CAApC;AAAgE,QAAA,KAAK,EAAC,OAAtE;AAA8E,QAAA,SAAS,EAAEL,UAAU,KAAK,OAAf,GAAyB,QAAzB,GAAoC,EAA7H;AAAiI,sBAAW,OAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAhBD;;GAAMF,M;;KAAAA,M;AAkBN,eAAeA,MAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ConfigContext } from \"../../../../contexts/ConfigContext\";\r\nimport * as actionType from \"../../../../store/actions\";\r\n\r\nconst Layout = () => {\r\n    const configContext = useContext(ConfigContext);\r\n    const { layoutType } = configContext.state;\r\n    const { dispatch } = configContext;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h6>Layouts</h6>\r\n            <div className=\"theme-color layout-type\">\r\n                <Link to='#' onClick={() => dispatch({type: actionType.LAYOUT_TYPE, layoutType: 'menu-dark'})} title=\"Default Layout\" className={layoutType === 'menu-dark' ? 'active' : ''} data-value=\"menu-dark\"><span/><span/></Link>\r\n                <Link to='#' onClick={() => dispatch({type: actionType.LAYOUT_TYPE, layoutType: 'menu-light'})} title=\"Light\" className={layoutType === 'menu-light' ? 'active' : ''} data-value=\"menu-light\"><span/><span/></Link>\r\n                <Link to='#' onClick={() => dispatch({type: actionType.LAYOUT_TYPE, layoutType: 'dark'})} title=\"Dark\" className={layoutType === 'dark' ? 'active' : ''} data-value=\"dark\"><span/><span/></Link>\r\n                <Link to='#' onClick={() => dispatch({type: actionType.RESET})} title=\"Reset\" className={layoutType === 'reset' ? 'active' : ''} data-value=\"reset\">Reset to Default</Link>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}