{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/forms/list-box/RestrictAvailableExample.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport DualListBox from 'react-dual-listbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'luna',\n  label: 'Moon'\n}, {\n  value: 'phobos',\n  label: 'Phobos'\n}, {\n  value: 'deimos',\n  label: 'Deimos'\n}, {\n  value: 'io',\n  label: 'Io'\n}, {\n  value: 'europa',\n  label: 'Europa'\n}, {\n  value: 'ganymede',\n  label: 'Ganymede'\n}, {\n  value: 'callisto',\n  label: 'Callisto'\n}, {\n  value: 'mimas',\n  label: 'Mimas'\n}, {\n  value: 'enceladus',\n  label: 'Enceladus'\n}, {\n  value: 'tethys',\n  label: 'Tethys'\n}, {\n  value: 'rhea',\n  label: 'Rhea'\n}, {\n  value: 'titan',\n  label: 'Titan'\n}, {\n  value: 'iapetus',\n  label: 'Iapetus'\n}];\nconst planets = {\n  earth: {\n    name: 'Earth',\n    moons: ['luna']\n  },\n  mars: {\n    name: 'Mars',\n    moons: ['phobos', 'deimos']\n  },\n  jupiter: {\n    name: 'Jupiter',\n    moons: ['io', 'europa', 'ganymede', 'callisto']\n  },\n  saturn: {\n    name: 'Saturn',\n    moons: ['mimas', 'enceladus', 'tehys', 'rhea', 'titan', 'iapetus']\n  }\n};\n\nconst RestrictAvailableExample = () => {\n  _s();\n\n  const [selected, setSelected] = useState(['phobos', 'titan']);\n  const [planet, setPlanet] = useState('jupiter');\n\n  const onChange = selected => {\n    setSelected(selected);\n  };\n\n  const onPlanetChange = event => {\n    const newPlanet = event.currentTarget.value;\n    setPlanet(newPlanet);\n  };\n\n  const renderPlanets = () => {\n    return Object.keys(planets).map(item => /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"d-inline\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio d-inline radio-primary\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"radio\",\n          name: \"planets\",\n          id: item,\n          value: item,\n          defaultChecked: item === planet,\n          onChange: e => onPlanetChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: item,\n          className: \"cr\",\n          children: planets[item].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restrict-available-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moons mb-3\",\n      children: renderPlanets()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DualListBox, {\n      available: planets[planet].moons,\n      options: options,\n      selected: selected,\n      onChange: e => onChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RestrictAvailableExample, \"rNfSYCTF1d9gyz0jP1T9TSvxBt0=\");\n\n_c = RestrictAvailableExample;\nexport default RestrictAvailableExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestrictAvailableExample\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/forms/list-box/RestrictAvailableExample.js"],"names":["React","useState","Form","DualListBox","options","value","label","planets","earth","name","moons","mars","jupiter","saturn","RestrictAvailableExample","selected","setSelected","planet","setPlanet","onChange","onPlanetChange","event","newPlanet","currentTarget","renderPlanets","Object","keys","map","item","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DualListBox from 'react-dual-listbox';\r\n\r\nconst options = [\r\n    { value: 'luna', label: 'Moon' },\r\n    { value: 'phobos', label: 'Phobos' },\r\n    { value: 'deimos', label: 'Deimos' },\r\n    { value: 'io', label: 'Io' },\r\n    { value: 'europa', label: 'Europa' },\r\n    { value: 'ganymede', label: 'Ganymede' },\r\n    { value: 'callisto', label: 'Callisto' },\r\n    { value: 'mimas', label: 'Mimas' },\r\n    { value: 'enceladus', label: 'Enceladus' },\r\n    { value: 'tethys', label: 'Tethys' },\r\n    { value: 'rhea', label: 'Rhea' },\r\n    { value: 'titan', label: 'Titan' },\r\n    { value: 'iapetus', label: 'Iapetus' },\r\n];\r\n\r\nconst planets = {\r\n    earth: { name: 'Earth', moons: ['luna'] },\r\n    mars: { name: 'Mars', moons: ['phobos', 'deimos'] },\r\n    jupiter: { name: 'Jupiter', moons: ['io', 'europa', 'ganymede', 'callisto'] },\r\n    saturn: { name: 'Saturn', moons: ['mimas', 'enceladus', 'tehys', 'rhea', 'titan', 'iapetus'] },\r\n};\r\n\r\nconst RestrictAvailableExample = () => {\r\n    const [selected, setSelected] = useState(['phobos', 'titan']);\r\n    const [planet, setPlanet] = useState('jupiter');\r\n\r\n    const onChange = (selected) => {\r\n        setSelected(selected);\r\n    }\r\n\r\n    const onPlanetChange = (event) => {\r\n        const newPlanet = event.currentTarget.value;\r\n        setPlanet(newPlanet);\r\n    }\r\n\r\n    const renderPlanets = () => {\r\n        return Object.keys(planets).map(item => (\r\n                <Form.Group key={item} className=\"d-inline\">\r\n                    <div className=\"radio d-inline radio-primary\">\r\n                        <Form.Control type=\"radio\" name=\"planets\" id={item} value={item} defaultChecked={item === planet} onChange={e => onPlanetChange(e)} />\r\n                        <Form.Label htmlFor={item} className=\"cr\">{planets[item].name}</Form.Label>\r\n                    </div>\r\n                </Form.Group>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div className=\"restrict-available-container\">\r\n            <div className=\"moons mb-3\">\r\n                {renderPlanets()}\r\n            </div>\r\n            <DualListBox\r\n                available={planets[planet].moons}\r\n                options={options}\r\n                selected={selected}\r\n                onChange={e => onChange(e)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RestrictAvailableExample;\r\n"]},"metadata":{},"sourceType":"module"}