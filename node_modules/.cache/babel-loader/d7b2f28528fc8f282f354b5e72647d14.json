{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/data/helpdeskData.js\";\nimport namor from 'namor';\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst images = require.context('../assets/images/user', true);\n\nconst range = len => {\n  const arr = [];\n\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\n\nconst randomDate = (start, end) => {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toDateString();\n};\n\nconst GetAvatar = name => {\n  const photo_new = 'avatar-' + Math.floor(Math.random() * 5 + 1) + '.jpg';\n  let photo = images(`./${photo_new}`);\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: photo.default,\n    className: \"img-fluid img-radius wid-40\",\n    alt: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_c = GetAvatar;\n\nconst newPerson = () => {\n  let nameEmail = namor.generate({\n    words: 2,\n    saltLength: 0,\n    saltType: 'number'\n  });\n  const name = (nameEmail.charAt(0).toUpperCase() + nameEmail.slice(1)).replaceAll('-', ' ');\n  const description = namor.generate({\n    words: 2,\n    saltLength: 0,\n    saltType: 'number'\n  }).replaceAll('-', ' ');\n  return {\n    id: namor.generate({\n      words: 0,\n      saltLength: 2,\n      saltType: 'number'\n    }),\n    name: name,\n    avatar: GetAvatar(name),\n    description: description,\n    email: nameEmail + '@gmail.com',\n    phone: '+9' + Math.floor(Math.random() * 9 + 1) + ' ' + namor.generate({\n      words: 0,\n      saltLength: 3,\n      saltType: 'number'\n    }) + '-' + namor.generate({\n      words: 0,\n      saltLength: 6,\n      saltType: 'number'\n    }),\n    date: randomDate(new Date(2012, 0, 1), new Date()),\n    action: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: \"text-primary mx-1\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"feather icon-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: \"text-danger\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"feather icon-trash-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  };\n};\n\nexport default function makeData(...lens) {\n  const makeDataLevel = (depth = 0) => {\n    const len = lens[depth];\n    return range(len).map(d => {\n      return { ...newPerson(),\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined\n      };\n    });\n  };\n\n  return makeDataLevel();\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAvatar\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/data/helpdeskData.js"],"names":["namor","React","Link","images","require","context","range","len","arr","i","push","randomDate","start","end","Date","getTime","Math","random","toDateString","GetAvatar","name","photo_new","floor","photo","default","newPerson","nameEmail","generate","words","saltLength","saltType","charAt","toUpperCase","slice","replaceAll","description","id","avatar","email","phone","date","action","makeData","lens","makeDataLevel","depth","map","d","subRows","undefined"],"mappings":"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","sourcesContent":["import namor from 'namor';\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst images = require.context('../assets/images/user', true);\r\n\r\nconst range = len => {\r\n    const arr = [];\r\n    for (let i = 0; i < len; i++) {\r\n        arr.push(i)\r\n    }\r\n    return arr\r\n};\r\n\r\nconst randomDate = (start, end) => {\r\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toDateString();\r\n};\r\n\r\nconst GetAvatar = (name) => {\r\n    const photo_new = 'avatar-' + Math.floor(Math.random() * 5 + 1) +'.jpg';\r\n    let photo = images(`./${photo_new}`);\r\n    return <img src={photo.default} className=\"img-fluid img-radius wid-40\" alt={name}/>;\r\n};\r\n\r\nconst newPerson = () => {\r\n    let nameEmail = namor.generate({ words: 2, saltLength: 0, saltType: 'number' });\r\n    const name = (nameEmail.charAt(0).toUpperCase() + nameEmail.slice(1)).replaceAll('-', ' ');\r\n\r\n    const description = (namor.generate({ words: 2, saltLength: 0, saltType: 'number' })).replaceAll('-', ' ');\r\n\r\n\r\n\r\n    return {\r\n        id: namor.generate({ words: 0, saltLength: 2, saltType: 'number' }),\r\n        name: name,\r\n        avatar: GetAvatar(name),\r\n        description: description,\r\n        email: nameEmail + '@gmail.com',\r\n        phone: '+9' + Math.floor(Math.random() * 9 + 1) + ' ' + namor.generate({ words: 0, saltLength: 3, saltType: 'number' })+ '-' + namor.generate({ words: 0, saltLength: 6, saltType: 'number' }),\r\n        date: randomDate(new Date(2012, 0, 1), new Date()),\r\n        action: \r\n            <React.Fragment>\r\n                <Link to='#' className=\"text-primary mx-1\"><i className=\"feather icon-edit\"/></Link>\r\n                <Link to='#' className=\"text-danger\"><i className=\"feather icon-trash-2\"/></Link>\r\n            </React.Fragment>\r\n    }\r\n};\r\n\r\nexport default function makeData(...lens) {\r\n    const makeDataLevel = (depth = 0) => {\r\n        const len = lens[depth];\r\n        return range(len).map(d => {\r\n            return {\r\n                ...newPerson(),\r\n                subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\r\n            }\r\n        })\r\n    };\r\n\r\n    return makeDataLevel()\r\n}\r\n"]},"metadata":{},"sourceType":"module"}