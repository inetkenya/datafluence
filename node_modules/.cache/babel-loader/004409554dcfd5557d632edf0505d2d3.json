{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/ui-elements/advance/AdvanceNotification.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Button, Form } from 'react-bootstrap';\nimport chroma from 'chroma-js';\nimport Select from 'react-select';\nimport Notifications from '../../../components/Notifications/BasicNotifications';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colourOptions = [{\n  value: 'inverse',\n  label: 'Inverse',\n  color: '#333'\n}, {\n  value: 'primary',\n  label: 'Primary',\n  color: '#04a9f5'\n}, {\n  value: 'info',\n  label: 'Info',\n  color: '#3ebfea'\n}, {\n  value: 'success',\n  label: 'Success',\n  color: '#1de9b6'\n}, {\n  value: 'warning',\n  label: 'Warning',\n  color: '#f4c22b'\n}, {\n  value: 'danger',\n  label: 'Danger',\n  color: '#f44236'\n}, {\n  value: 'dark',\n  label: 'Dark',\n  color: '#c7cbce'\n}, {\n  value: 'light',\n  label: 'Light',\n  color: '#f2f2f2'\n}];\nconst potionOption = [{\n  value: 'top-left',\n  label: 'Top Left'\n}, {\n  value: 'top-right',\n  label: 'Top Right'\n}, {\n  value: 'top-center',\n  label: 'Top Center'\n}, {\n  value: 'bottom-left',\n  label: 'Bottom Left'\n}, {\n  value: 'bottom-right',\n  label: 'Bottom Right'\n}, {\n  value: 'bottom-center',\n  label: 'Bottom Center'\n}];\n\nconst dot = (color = '#ccc') => ({\n  alignItems: 'center',\n  display: 'flex',\n  ':before': {\n    backgroundColor: color,\n    borderRadius: 10,\n    content: '\" \"',\n    display: 'block',\n    marginRight: 8,\n    height: 10,\n    width: 10\n  }\n});\n\nconst colourStyles = {\n  control: styles => ({ ...styles,\n    backgroundColor: 'white'\n  }),\n  option: (styles, {\n    data,\n    isDisabled,\n    isFocused,\n    isSelected\n  }) => {\n    const color = chroma(data.color);\n    return { ...styles,\n      backgroundColor: isDisabled ? null : isSelected ? data.color : isFocused ? color.alpha(0.1).css() : null,\n      color: isDisabled ? '#ccc' : isSelected ? chroma.contrast(color, 'white') > 2 ? 'white' : 'black' : data.color,\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    };\n  },\n  input: styles => ({ ...styles,\n    ...dot()\n  }),\n  placeholder: styles => ({ ...styles,\n    ...dot()\n  }),\n  singleValue: (styles, {\n    data\n  }) => ({ ...styles,\n    ...dot(data.color)\n  })\n};\n\nconst AdvanceNotification = () => {\n  _s();\n\n  const [variant, setVariant] = useState('inverse');\n  const [placement, setPlacement] = useState('top-right');\n  const [autoDismiss, setAutoDismiss] = useState(true);\n  const [message, setMessage] = useState('Bootstrap Growl Turning standard Bootstrap alerts into awesome notification');\n\n  const handleChange = event => {\n    setMessage(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(ModuleNotification, {\n          message: \"For more info please check the components's official documentation\",\n          link: \"https://www.npmjs.com/package/react-toast-notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Growl Notification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"justify-content-md-center\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                md: 7,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formPosition\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Position Variant\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    defaultValue: potionOption[1],\n                    label: \"Select Position\",\n                    options: potionOption,\n                    onChange: ({\n                      value\n                    }) => setPlacement(value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formColor\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Color Variant\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    defaultValue: colourOptions[0],\n                    label: \"Select Variant\",\n                    options: colourOptions,\n                    styles: colourStyles,\n                    onChange: ({\n                      value\n                    }) => setVariant(value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicEmail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"switch switch-primary d-inline m-r-10\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      id: \"icon-colored\",\n                      checked: autoDismiss,\n                      onChange: () => setAutoDismiss(prevState => !prevState)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"icon-colored\",\n                      className: \"cr\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Auto Dismiss\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"exampleForm.ControlTextarea1\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: \"3\",\n                    value: message,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Notifications, {\n                  notification: {\n                    variant: variant,\n                    placement: placement,\n                    autoDismiss: autoDismiss,\n                    message: message\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    children: \"Add Notification\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 40\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdvanceNotification, \"m3J/xCSJse27wBNBOXn36Xg5nmU=\");\n\n_c = AdvanceNotification;\nexport default AdvanceNotification;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdvanceNotification\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/ui-elements/advance/AdvanceNotification.js"],"names":["React","useState","Row","Col","Card","Button","Form","chroma","Select","Notifications","ModuleNotification","colourOptions","value","label","color","potionOption","dot","alignItems","display","backgroundColor","borderRadius","content","marginRight","height","width","colourStyles","control","styles","option","data","isDisabled","isFocused","isSelected","alpha","css","contrast","cursor","input","placeholder","singleValue","AdvanceNotification","variant","setVariant","placement","setPlacement","autoDismiss","setAutoDismiss","message","setMessage","handleChange","event","target","prevState"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Card, Button, Form } from 'react-bootstrap';\r\nimport chroma from 'chroma-js';\r\nimport Select from 'react-select';\r\n\r\nimport Notifications from '../../../components/Notifications/BasicNotifications';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\n\r\nconst colourOptions = [\r\n    { value: 'inverse', label: 'Inverse', color: '#333' },\r\n    { value: 'primary', label: 'Primary', color: '#04a9f5' },\r\n    { value: 'info', label: 'Info', color: '#3ebfea' },\r\n    { value: 'success', label: 'Success', color: '#1de9b6' },\r\n    { value: 'warning', label: 'Warning', color: '#f4c22b' },\r\n    { value: 'danger', label: 'Danger', color: '#f44236' },\r\n    { value: 'dark', label: 'Dark', color: '#c7cbce' },\r\n    { value: 'light', label: 'Light', color: '#f2f2f2' }\r\n];\r\n\r\nconst potionOption = [\r\n    { value: 'top-left', label: 'Top Left' },\r\n    { value: 'top-right', label: 'Top Right' },\r\n    { value: 'top-center', label: 'Top Center' },\r\n    { value: 'bottom-left', label: 'Bottom Left' },\r\n    { value: 'bottom-right', label: 'Bottom Right' },\r\n    { value: 'bottom-center', label: 'Bottom Center' }\r\n];\r\n\r\nconst dot = (color = '#ccc') => ({\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n\r\n    ':before': {\r\n        backgroundColor: color,\r\n        borderRadius: 10,\r\n        content: '\" \"',\r\n        display: 'block',\r\n        marginRight: 8,\r\n        height: 10,\r\n        width: 10,\r\n    },\r\n});\r\n\r\nconst colourStyles = {\r\n    control: styles => ({ ...styles, backgroundColor: 'white' }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        const color = chroma(data.color);\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isDisabled\r\n                ? null\r\n                : isSelected ? data.color : isFocused ? color.alpha(0.1).css() : null,\r\n            color: isDisabled\r\n                ? '#ccc'\r\n                : isSelected\r\n                    ? chroma.contrast(color, 'white') > 2 ? 'white' : 'black'\r\n                    : data.color,\r\n            cursor: isDisabled ? 'not-allowed' : 'default',\r\n        };\r\n    },\r\n    input: styles => ({ ...styles, ...dot() }),\r\n    placeholder: styles => ({ ...styles, ...dot() }),\r\n    singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\r\n};\r\n\r\nconst AdvanceNotification = () => {\r\n    const [variant, setVariant] = useState('inverse');\r\n    const [placement, setPlacement] = useState('top-right');\r\n    const [autoDismiss, setAutoDismiss] = useState(true);\r\n    const [message, setMessage] = useState('Bootstrap Growl Turning standard Bootstrap alerts into awesome notification');\r\n\r\n    const handleChange = (event) => {\r\n        setMessage(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://www.npmjs.com/package/react-toast-notifications' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Growl Notification</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Row className=\"justify-content-md-center\">\r\n                                <Col sm={12} md={7}>\r\n                                    <Form.Group controlId=\"formPosition\">\r\n                                        <Form.Label>Position Variant</Form.Label>\r\n                                        <Select\r\n                                            defaultValue={potionOption[1]}\r\n                                            label=\"Select Position\"\r\n                                            options={potionOption}\r\n                                            onChange={({value}) => setPlacement(value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formColor\">\r\n                                        <Form.Label>Color Variant</Form.Label>\r\n                                        <Select\r\n                                            defaultValue={colourOptions[0]}\r\n                                            label=\"Select Variant\"\r\n                                            options={colourOptions}\r\n                                            styles={colourStyles}\r\n                                            onChange={({value}) => setVariant(value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <div className=\"switch switch-primary d-inline m-r-10\">\r\n                                            <input type=\"checkbox\" id=\"icon-colored\" checked={autoDismiss} onChange={() => setAutoDismiss(prevState => !prevState)} />\r\n                                            <label htmlFor=\"icon-colored\" className=\"cr\" />\r\n                                        </div>\r\n                                        <Form.Label>Auto Dismiss</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                        <Form.Label>Message</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows=\"3\" value={message} onChange={handleChange}/>\r\n                                    </Form.Group>\r\n                                    <Notifications notification={{\r\n                                        variant: variant,\r\n                                        placement: placement,\r\n                                        autoDismiss: autoDismiss,\r\n                                        message: message\r\n                                    }}><Button>Add Notification</Button></Notifications>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AdvanceNotification;"]},"metadata":{},"sourceType":"module"}