{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/datafluence/src/views/forms/form-validation/AsyncValidationForm.js\";\nimport React from 'react';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.username) {\n    errors.username = 'Required';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  }\n\n  return errors;\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst asyncValidate = (values\n/*, dispatch */\n) => {\n  return sleep(1000).then(() => {\n    // simulate server latency\n    if (['john', 'paul', 'george', 'ringo'].includes(values.username)) {\n      // eslint-disable-next-line\n      throw {\n        username: 'That username is taken'\n      };\n    }\n  });\n};\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    asyncValidating,\n    touched,\n    error\n  }\n}) => /*#__PURE__*/_jsxDEV(Row, {\n  className: \"my-3\",\n  children: [/*#__PURE__*/_jsxDEV(Col, {\n    sm: 3,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label-control\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Col, {\n    sm: 9,\n    className: asyncValidating ? 'async-validating' : '',\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      placeholder: label,\n      type: type,\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), touched && error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-c-red\",\n      children: [\"* \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 5\n}, this);\n\nconst AsyncValidationForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          as: \"h5\",\n          children: \"Asynchronous Validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"username\",\n          type: \"text\",\n          component: renderField,\n          label: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          component: renderField,\n          label: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          variant: \"danger\",\n          className: \"float-right\",\n          disabled: pristine || submitting,\n          onClick: reset,\n          children: \"Clear Values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"mr-1 float-right\",\n          disabled: submitting,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AsyncValidationForm;\nexport default reduxForm({\n  form: 'asyncValidation',\n  // a unique identifier for this form\n  validate,\n  asyncValidate,\n  asyncChangeFields: ['username']\n})(AsyncValidationForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AsyncValidationForm\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/datafluence/src/views/forms/form-validation/AsyncValidationForm.js"],"names":["React","Card","Button","Row","Col","Field","reduxForm","validate","values","errors","username","password","sleep","ms","Promise","resolve","setTimeout","asyncValidate","then","includes","renderField","input","label","type","meta","asyncValidating","touched","error","AsyncValidationForm","props","handleSubmit","pristine","reset","submitting","form","asyncChangeFields"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Card, Button, Row, Col } from 'react-bootstrap';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst validate = values => {\r\n    const errors = {}\r\n    if (!values.username) {\r\n      errors.username = 'Required'\r\n    }\r\n    if (!values.password) {\r\n      errors.password = 'Required'\r\n    }\r\n    return errors\r\n  }\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nconst asyncValidate = (values /*, dispatch */) => {\r\n  return sleep(1000).then(() => {\r\n    // simulate server latency\r\n    if (['john', 'paul', 'george', 'ringo'].includes(values.username)) {\r\n        // eslint-disable-next-line\r\n      throw { username: 'That username is taken' }\r\n    }\r\n  })\r\n}\r\n\r\nconst renderField = ({\r\n    input,\r\n    label,\r\n    type,\r\n    meta: { asyncValidating, touched, error }\r\n  }) => (\r\n    <Row className='my-3'>\r\n        <Col sm={3}>\r\n            <label className='label-control'>{label}</label>\r\n        </Col>\r\n        <Col sm={9} className={asyncValidating ? 'async-validating' : ''}>\r\n            <input {...input} placeholder={label} type={type} className='form-control' />\r\n            {touched && error && <span className='text-c-red'>* {error} </span>}\r\n        </Col>\r\n    </Row>\r\n  );\r\n  \r\n  const AsyncValidationForm = props => {\r\n    const { handleSubmit, pristine, reset, submitting } = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title as='h5'>Asynchronous Validation</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Field name=\"username\" type=\"text\" component={renderField} label=\"Username\" />\r\n                    <Field name=\"password\" type=\"password\" component={renderField} label=\"Password\" />\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Button type=\"button\" variant='danger' className='float-right' disabled={pristine || submitting} onClick={reset}>Clear Values</Button>\r\n                    <Button type=\"submit\" className='mr-1 float-right' disabled={submitting}>Sign Up</Button>\r\n                </Card.Footer>\r\n            </Card>\r\n        </form>\r\n    )\r\n  }\r\n  \r\n  export default reduxForm({\r\n    form: 'asyncValidation', // a unique identifier for this form\r\n    validate,\r\n    asyncValidate,\r\n    asyncChangeFields: ['username']\r\n  })(AsyncValidationForm)"]},"metadata":{},"sourceType":"module"}