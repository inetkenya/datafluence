import { createContext, createElement, Fragment, Children, cloneElement, PureComponent } from 'react';
import { func, arrayOf, node, oneOfType } from 'prop-types';

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var reactIs_production_min = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports,"__esModule",{value:!0});
var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?Symbol.for("react.suspense_list"):
60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.fundamental"):60117,w=b?Symbol.for("react.responder"):60118,x=b?Symbol.for("react.scope"):60119;function y(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case t:case r:case d:return u}}}function z(a){return y(a)===m}
exports.typeOf=y;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;
exports.isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===v||a.$$typeof===w||a.$$typeof===x)};exports.isAsyncMode=function(a){return z(a)||y(a)===l};exports.isConcurrentMode=z;exports.isContextConsumer=function(a){return y(a)===k};exports.isContextProvider=function(a){return y(a)===h};
exports.isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return y(a)===n};exports.isFragment=function(a){return y(a)===e};exports.isLazy=function(a){return y(a)===t};exports.isMemo=function(a){return y(a)===r};exports.isPortal=function(a){return y(a)===d};exports.isProfiler=function(a){return y(a)===g};exports.isStrictMode=function(a){return y(a)===f};exports.isSuspense=function(a){return y(a)===p};
});

unwrapExports(reactIs_production_min);
var reactIs_production_min_1 = reactIs_production_min.typeOf;
var reactIs_production_min_2 = reactIs_production_min.AsyncMode;
var reactIs_production_min_3 = reactIs_production_min.ConcurrentMode;
var reactIs_production_min_4 = reactIs_production_min.ContextConsumer;
var reactIs_production_min_5 = reactIs_production_min.ContextProvider;
var reactIs_production_min_6 = reactIs_production_min.Element;
var reactIs_production_min_7 = reactIs_production_min.ForwardRef;
var reactIs_production_min_8 = reactIs_production_min.Fragment;
var reactIs_production_min_9 = reactIs_production_min.Lazy;
var reactIs_production_min_10 = reactIs_production_min.Memo;
var reactIs_production_min_11 = reactIs_production_min.Portal;
var reactIs_production_min_12 = reactIs_production_min.Profiler;
var reactIs_production_min_13 = reactIs_production_min.StrictMode;
var reactIs_production_min_14 = reactIs_production_min.Suspense;
var reactIs_production_min_15 = reactIs_production_min.isValidElementType;
var reactIs_production_min_16 = reactIs_production_min.isAsyncMode;
var reactIs_production_min_17 = reactIs_production_min.isConcurrentMode;
var reactIs_production_min_18 = reactIs_production_min.isContextConsumer;
var reactIs_production_min_19 = reactIs_production_min.isContextProvider;
var reactIs_production_min_20 = reactIs_production_min.isElement;
var reactIs_production_min_21 = reactIs_production_min.isForwardRef;
var reactIs_production_min_22 = reactIs_production_min.isFragment;
var reactIs_production_min_23 = reactIs_production_min.isLazy;
var reactIs_production_min_24 = reactIs_production_min.isMemo;
var reactIs_production_min_25 = reactIs_production_min.isPortal;
var reactIs_production_min_26 = reactIs_production_min.isProfiler;
var reactIs_production_min_27 = reactIs_production_min.isStrictMode;
var reactIs_production_min_28 = reactIs_production_min.isSuspense;

var reactIs_development = createCommonjsModule(function (module, exports) {



if (process.env.NODE_ENV !== "production") {
  (function() {

Object.defineProperty(exports, '__esModule', { value: true });

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE);
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
var lowPriorityWarningWithoutStack = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });

    if (typeof console !== 'undefined') {
      console.warn(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarningWithoutStack = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(void 0, [format].concat(args));
    }
  };
}

var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_LAZY_TYPE:
      case REACT_MEMO_TYPE:
      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true;
      lowPriorityWarningWithoutStack$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.typeOf = typeOf;
exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isValidElementType = isValidElementType;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
  })();
}
});

unwrapExports(reactIs_development);
var reactIs_development_1 = reactIs_development.typeOf;
var reactIs_development_2 = reactIs_development.AsyncMode;
var reactIs_development_3 = reactIs_development.ConcurrentMode;
var reactIs_development_4 = reactIs_development.ContextConsumer;
var reactIs_development_5 = reactIs_development.ContextProvider;
var reactIs_development_6 = reactIs_development.Element;
var reactIs_development_7 = reactIs_development.ForwardRef;
var reactIs_development_8 = reactIs_development.Fragment;
var reactIs_development_9 = reactIs_development.Lazy;
var reactIs_development_10 = reactIs_development.Memo;
var reactIs_development_11 = reactIs_development.Portal;
var reactIs_development_12 = reactIs_development.Profiler;
var reactIs_development_13 = reactIs_development.StrictMode;
var reactIs_development_14 = reactIs_development.Suspense;
var reactIs_development_15 = reactIs_development.isValidElementType;
var reactIs_development_16 = reactIs_development.isAsyncMode;
var reactIs_development_17 = reactIs_development.isConcurrentMode;
var reactIs_development_18 = reactIs_development.isContextConsumer;
var reactIs_development_19 = reactIs_development.isContextProvider;
var reactIs_development_20 = reactIs_development.isElement;
var reactIs_development_21 = reactIs_development.isForwardRef;
var reactIs_development_22 = reactIs_development.isFragment;
var reactIs_development_23 = reactIs_development.isLazy;
var reactIs_development_24 = reactIs_development.isMemo;
var reactIs_development_25 = reactIs_development.isPortal;
var reactIs_development_26 = reactIs_development.isProfiler;
var reactIs_development_27 = reactIs_development.isStrictMode;
var reactIs_development_28 = reactIs_development.isSuspense;

var reactIs = createCommonjsModule(function (module) {

if (process.env.NODE_ENV === 'production') {
  module.exports = reactIs_production_min;
} else {
  module.exports = reactIs_development;
}
});

var FORWARD_REF_STATICS = {
    '$$typeof': true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
};

var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;

var WizardContext = createContext({});
function WizardConsumer(_a) {
    var children = _a.children;
    return (createElement(WizardContext.Consumer, null, function (context) {
        if (Object.entries(context).length === 0 &&
            context.constructor === Object) {
            throw new Error('Components using WizardContext must be rendered within the Wizard component');
        }
        return children(context);
    }));
}

function CustomNavigator(_a) {
    var children = _a.children;
    return createElement(WizardConsumer, null, function (context) { return children(context); });
}
CustomNavigator.propTypes = {
    children: func.isRequired,
};

function DefaultNavigator() {
    return (createElement(CustomNavigator, null, function (_a) {
        var getNextStepProps = _a.getNextStepProps, getPrevStepProps = _a.getPrevStepProps;
        return (createElement("div", null,
            createElement("button", __assign({ type: "button" }, getPrevStepProps()), "Previous"),
            createElement("button", __assign({ type: "button" }, getNextStepProps()), "Next")));
    }));
}

function Navigator(_a) {
    var children = _a.children;
    return children ? CustomNavigator({ children: children }) : DefaultNavigator();
}

function StepGroup(_a) {
    var children = _a.children, rest = __rest(_a, ["children"]);
    return (createElement(Fragment, null, Children.map(children, function (childElement) {
        return cloneElement(childElement, rest);
    })));
}
StepGroup.propTypes = {
    children: arrayOf(node).isRequired,
};

function CustomStepTracker(_a) {
    var children = _a.children;
    return createElement(WizardConsumer, null, function (context) { return children(context); });
}
CustomStepTracker.propTypes = {
    children: func.isRequired,
};

function DefaultStepTracker() {
    return (createElement(CustomStepTracker, null, function (_a) {
        var _b = _a.currentStep, currentStep = _b === void 0 ? 0 : _b, _c = _a.steps, steps = _c === void 0 ? [] : _c;
        return (createElement("div", { style: { display: 'block', padding: '25px' } },
            createElement("div", { style: {
                    display: 'flex',
                    flexDirection: 'row',
                    justifyContent: 'space-between',
                } }, steps.map(function (step, index) {
                var key = index + "-" + step;
                return (createElement("div", { key: key, style: { display: 'block', textAlign: 'center' } },
                    createElement("span", { style: {
                            display: 'inline-block',
                            borderRadius: '50%',
                            lineHeight: '2rem',
                            height: '30px',
                            width: '30px',
                            border: '0.1rem solid #ff161b',
                            background: currentStep >= index
                                ? 'linear-gradient(#ff161b,#ff009a)'
                                : 'white',
                            color: 'white',
                        } }, currentStep > index ? '✓' : null),
                    createElement("div", null,
                        createElement("span", null, step ? index + 1 + ". " + step : ''))));
            }))));
    }));
}

function StepTracker(_a) {
    var children = _a.children;
    return children ? CustomStepTracker({ children: children }) : DefaultStepTracker();
}

function getValidSteps(children) {
    return Children.map(children, function (child) {
        var _a = child.props.stepCondition, stepCondition = _a === void 0 ? true : _a;
        return stepCondition ? child : null;
    });
}

function Steps(_a) {
    var children = _a.children;
    var ValidSteps = getValidSteps(children);
    return (createElement(WizardContext.Consumer, null, function (context) {
        return context.totalSteps > 0
            ? Children.map(ValidSteps, function (child, index) {
                return context.currentStep === index
                    ? cloneElement(child, {
                        wizard: {
                            nexStep: context.nextStep,
                            prevStep: context.prevStep,
                        },
                    })
                    : null;
            })
            : null;
    }));
}
Steps.propTypes = {
    children: oneOfType([
        arrayOf(node),
        node,
    ]).isRequired,
};

var callAll = function () {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return fns.forEach(function (fn) { return typeof fn === 'function' && fn.apply(void 0, args); });
    };
};

var isInRange = function (number, start, end) {
    return number >= Math.min(start, end) && number < Math.max(start, end);
};

function getWizardSteps(children) {
    var instances = 0;
    var totalSteps = 0;
    var steps = [];
    Children.forEach(children, function (child) {
        instances = Steps === child.type ? instances + 1 : instances;
        if (instances > 1) {
            throw new Error("Wizard must only have a single component of type Steps");
        }
        if (child.type === Steps && child.props.children) {
            var ValidSteps = getValidSteps(child.props.children);
            totalSteps = Children.count(ValidSteps);
            Children.forEach(ValidSteps, function (step) {
                if (step) {
                    steps = steps.concat(step.props.stepLabel);
                }
            });
        }
    });
    return {
        totalSteps: totalSteps,
        steps: steps,
    };
}

var WizardPropTypes = {
    children: function (props, propName, componentName) {
        var error = null;
        Children.forEach(props[propName], function (child) {
            if (![Navigator, StepTracker, Steps].some(function (component) { return component === child.type; })) {
                error = new Error("Invalid prop `children` passed to `" + componentName + "`. Expected one of the following components `Navigator`, `StepTracker` or `Steps`");
            }
        });
        return error;
    },
};
var getInitialState = function (props, handlers, propGetters) {
    var currentStep = 0;
    var _a = getWizardSteps(props.children), steps = _a.steps, totalSteps = _a.totalSteps;
    var isNextAvailable = currentStep < totalSteps - 1;
    var isPrevAvailable = currentStep > 0;
    var state = {
        steps: steps,
        currentStep: currentStep,
        totalSteps: totalSteps,
        isNextAvailable: isNextAvailable,
        isPrevAvailable: isPrevAvailable,
    };
    return __assign(__assign(__assign({}, state), handlers), propGetters);
};
var Wizard = (function (_super) {
    __extends(Wizard, _super);
    function Wizard() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleChildrenChange = function (children, currentStep) {
            var _a = getWizardSteps(children), totalSteps = _a.totalSteps, rest = __rest(_a, ["totalSteps"]);
            _this.setState(__assign({ currentStep: isInRange(currentStep, 0, totalSteps)
                    ? currentStep
                    : totalSteps - 1, totalSteps: totalSteps }, rest));
        };
        _this.handleStepChange = function (currentStep, totalSteps) {
            _this.setState({
                isNextAvailable: currentStep < totalSteps - 1,
                isPrevAvailable: currentStep > 0,
            }, function () {
                var onStepChange = _this.props.onStepChange;
                if (onStepChange)
                    onStepChange(currentStep);
            });
        };
        _this.goToStep = function (step) {
            var totalSteps = _this.state.totalSteps;
            if (isInRange(step, 0, totalSteps)) {
                _this.setState({ currentStep: step });
            }
            else {
                throw new Error("Step `" + step + "` is out of the range [0, " + (totalSteps - 1) + "]");
            }
        };
        _this.firstStep = function () {
            _this.goToStep(0);
        };
        _this.lastStep = function () {
            var totalSteps = _this.state.totalSteps;
            _this.goToStep(totalSteps - 1);
        };
        _this.nextStep = function () {
            var isNextAvailable = _this.state.isNextAvailable;
            if (isNextAvailable)
                _this.setState(function (prevState) { return ({
                    currentStep: prevState.currentStep + 1,
                }); });
        };
        _this.prevStep = function () {
            var isPrevAvailable = _this.state.isPrevAvailable;
            if (isPrevAvailable)
                _this.setState(function (prevState) { return ({
                    currentStep: prevState.currentStep - 1,
                }); });
        };
        _this.getFirstStepProps = function (props) {
            if (props === void 0) { props = { onClick: undefined }; }
            var isPrevAvailable = _this.state.isPrevAvailable;
            var onClick = props.onClick, rest = __rest(props, ["onClick"]);
            return __assign(__assign({}, rest), { type: 'button', role: 'button', disabled: !isPrevAvailable, onClick: callAll(onClick, _this.firstStep) });
        };
        _this.getLastStepProps = function (props) {
            if (props === void 0) { props = { onClick: undefined }; }
            var isNextAvailable = _this.state.isNextAvailable;
            var onClick = props.onClick, rest = __rest(props, ["onClick"]);
            return __assign(__assign({}, rest), { type: 'button', role: 'button', disabled: !isNextAvailable, onClick: callAll(onClick, _this.lastStep) });
        };
        _this.getNextStepProps = function (props) {
            if (props === void 0) { props = { onClick: undefined }; }
            var isNextAvailable = _this.state.isNextAvailable;
            var onClick = props.onClick, rest = __rest(props, ["onClick"]);
            return __assign(__assign({}, rest), { type: 'button', role: 'button', disabled: !isNextAvailable, onClick: callAll(onClick, _this.nextStep) });
        };
        _this.getPrevStepProps = function (props) {
            if (props === void 0) { props = { onClick: undefined }; }
            var isPrevAvailable = _this.state.isPrevAvailable;
            var onClick = props.onClick, rest = __rest(props, ["onClick"]);
            return __assign(__assign({}, rest), { type: 'button', role: 'button', disabled: !isPrevAvailable, onClick: callAll(onClick, _this.prevStep) });
        };
        _this.state = getInitialState(_this.props, {
            firstStep: _this.firstStep,
            goToStep: _this.goToStep,
            lastStep: _this.lastStep,
            nextStep: _this.nextStep,
            prevStep: _this.prevStep,
        }, {
            getFirstStepProps: _this.getFirstStepProps,
            getLastStepProps: _this.getLastStepProps,
            getNextStepProps: _this.getNextStepProps,
            getPrevStepProps: _this.getPrevStepProps,
        });
        return _this;
    }
    Wizard.prototype.componentDidUpdate = function (prevProps, prevState) {
        var children = this.props.children;
        var _a = this.state, currentStep = _a.currentStep, totalSteps = _a.totalSteps;
        if (prevProps.children !== children)
            this.handleChildrenChange(children, currentStep);
        if (prevState.currentStep !== currentStep ||
            prevState.totalSteps !== totalSteps)
            this.handleStepChange(currentStep, totalSteps);
    };
    Wizard.prototype.render = function () {
        var children = this.props.children;
        return (createElement("div", null,
            createElement(WizardContext.Provider, { value: this.state }, children)));
    };
    Wizard.Navigator = Navigator;
    Wizard.StepGroup = StepGroup;
    Wizard.StepTracker = StepTracker;
    Wizard.Steps = Steps;
    Wizard.propTypes = {
        children: WizardPropTypes.children,
    };
    Wizard.defaultProps = {
        children: [],
    };
    return Wizard;
}(PureComponent));

export default Wizard;
//# sourceMappingURL=index.es.js.map
