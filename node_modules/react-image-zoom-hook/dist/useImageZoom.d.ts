import * as React from "react";
interface IOptions {
    imgHeight: number;
    imgWidth: number;
    lensHeight: number;
    lensWidth: number;
    previewLensHeight: number;
    img?: string;
    previewImg?: string;
}
/**
 * useImageZoom hook for zoom of images
 */
declare function useImageZoom({ imgHeight, imgWidth, lensHeight, lensWidth, previewLensHeight, img, previewImg }: IOptions): {
    moveLens: (event: React.MouseEvent<any, MouseEvent>) => void;
    imgContainerDimesions: {
        height: string;
        width: string;
        position: "relative";
    };
    imgDimesions: {
        height: string;
        width: string;
    };
    lensDimensions: {
        height: string;
        width: string;
        opacity: string;
        position: string;
        backgroundImage: string;
        backgroundPosition: string;
        backgroundSize: string;
    };
    previewLensDimensions: {
        height: string;
        width: string;
        overflow: string;
    };
    previewImgDimensions: {
        height: string;
        width: string;
    };
    DefaultView: JSX.Element;
    imgRefCallback: (node: any) => void;
    meshRefCallback: (node: any) => void;
    imagePreviewRefCallback: (node: any) => void;
};
export { useImageZoom };
